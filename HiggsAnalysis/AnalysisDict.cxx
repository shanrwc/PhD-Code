//
// File generated by rootcint at Sat Oct  8 18:14:06 2011

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AnalysisDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TPileupReweighting_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_TPileupReweighting(void *p);
   static void deleteArray_TPileupReweighting(void *p);
   static void destruct_TPileupReweighting(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPileupReweighting*)
   {
      ::TPileupReweighting *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPileupReweighting >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPileupReweighting", ::TPileupReweighting::Class_Version(), "./TPileupReweighting.h", 30,
                  typeid(::TPileupReweighting), DefineBehavior(ptr, ptr),
                  &::TPileupReweighting::Dictionary, isa_proxy, 0,
                  sizeof(::TPileupReweighting) );
      instance.SetDelete(&delete_TPileupReweighting);
      instance.SetDeleteArray(&deleteArray_TPileupReweighting);
      instance.SetDestructor(&destruct_TPileupReweighting);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPileupReweighting*)
   {
      return GenerateInitInstanceLocal((::TPileupReweighting*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPileupReweighting*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BaseAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_BaseAnalysis(void *p = 0);
   static void *newArray_BaseAnalysis(Long_t size, void *p);
   static void delete_BaseAnalysis(void *p);
   static void deleteArray_BaseAnalysis(void *p);
   static void destruct_BaseAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BaseAnalysis*)
   {
      ::BaseAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BaseAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BaseAnalysis", ::BaseAnalysis::Class_Version(), "./BaseAnalysis.h", 58,
                  typeid(::BaseAnalysis), DefineBehavior(ptr, ptr),
                  &::BaseAnalysis::Dictionary, isa_proxy, 0,
                  sizeof(::BaseAnalysis) );
      instance.SetNew(&new_BaseAnalysis);
      instance.SetNewArray(&newArray_BaseAnalysis);
      instance.SetDelete(&delete_BaseAnalysis);
      instance.SetDeleteArray(&deleteArray_BaseAnalysis);
      instance.SetDestructor(&destruct_BaseAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BaseAnalysis*)
   {
      return GenerateInitInstanceLocal((::BaseAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BaseAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void SmearingClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void SmearingClass_Dictionary();
   static void delete_SmearingClass(void *p);
   static void deleteArray_SmearingClass(void *p);
   static void destruct_SmearingClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SmearingClass*)
   {
      ::SmearingClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::SmearingClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("SmearingClass", "./SmearingClass.h", 25,
                  typeid(::SmearingClass), DefineBehavior(ptr, ptr),
                  0, &SmearingClass_Dictionary, isa_proxy, 0,
                  sizeof(::SmearingClass) );
      instance.SetDelete(&delete_SmearingClass);
      instance.SetDeleteArray(&deleteArray_SmearingClass);
      instance.SetDestructor(&destruct_SmearingClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SmearingClass*)
   {
      return GenerateInitInstanceLocal((::SmearingClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SmearingClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SmearingClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::SmearingClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void EnergyRescaler_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void EnergyRescaler_Dictionary();
   static void *new_EnergyRescaler(void *p = 0);
   static void *newArray_EnergyRescaler(Long_t size, void *p);
   static void delete_EnergyRescaler(void *p);
   static void deleteArray_EnergyRescaler(void *p);
   static void destruct_EnergyRescaler(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EnergyRescaler*)
   {
      ::EnergyRescaler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::EnergyRescaler),0);
      static ::ROOT::TGenericClassInfo 
         instance("EnergyRescaler", "./EnergyRescaler.h", 24,
                  typeid(::EnergyRescaler), DefineBehavior(ptr, ptr),
                  0, &EnergyRescaler_Dictionary, isa_proxy, 0,
                  sizeof(::EnergyRescaler) );
      instance.SetNew(&new_EnergyRescaler);
      instance.SetNewArray(&newArray_EnergyRescaler);
      instance.SetDelete(&delete_EnergyRescaler);
      instance.SetDeleteArray(&deleteArray_EnergyRescaler);
      instance.SetDestructor(&destruct_EnergyRescaler);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EnergyRescaler*)
   {
      return GenerateInitInstanceLocal((::EnergyRescaler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EnergyRescaler*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void EnergyRescaler_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::EnergyRescaler*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void egammaSFclass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void egammaSFclass_Dictionary();
   static void *new_egammaSFclass(void *p = 0);
   static void *newArray_egammaSFclass(Long_t size, void *p);
   static void delete_egammaSFclass(void *p);
   static void deleteArray_egammaSFclass(void *p);
   static void destruct_egammaSFclass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::egammaSFclass*)
   {
      ::egammaSFclass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::egammaSFclass),0);
      static ::ROOT::TGenericClassInfo 
         instance("egammaSFclass", "./egammaSFclass.h", 31,
                  typeid(::egammaSFclass), DefineBehavior(ptr, ptr),
                  0, &egammaSFclass_Dictionary, isa_proxy, 0,
                  sizeof(::egammaSFclass) );
      instance.SetNew(&new_egammaSFclass);
      instance.SetNewArray(&newArray_egammaSFclass);
      instance.SetDelete(&delete_egammaSFclass);
      instance.SetDeleteArray(&deleteArray_egammaSFclass);
      instance.SetDestructor(&destruct_egammaSFclass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::egammaSFclass*)
   {
      return GenerateInitInstanceLocal((::egammaSFclass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::egammaSFclass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void egammaSFclass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::egammaSFclass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonEfficiencyScaleFactor_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void MuonEfficiencyScaleFactor_Dictionary();
   static void delete_MuonEfficiencyScaleFactor(void *p);
   static void deleteArray_MuonEfficiencyScaleFactor(void *p);
   static void destruct_MuonEfficiencyScaleFactor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonEfficiencyScaleFactor*)
   {
      ::MuonEfficiencyScaleFactor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonEfficiencyScaleFactor),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonEfficiencyScaleFactor", "./MuonEfficiencyScaleFactor.h", 27,
                  typeid(::MuonEfficiencyScaleFactor), DefineBehavior(ptr, ptr),
                  0, &MuonEfficiencyScaleFactor_Dictionary, isa_proxy, 0,
                  sizeof(::MuonEfficiencyScaleFactor) );
      instance.SetDelete(&delete_MuonEfficiencyScaleFactor);
      instance.SetDeleteArray(&deleteArray_MuonEfficiencyScaleFactor);
      instance.SetDestructor(&destruct_MuonEfficiencyScaleFactor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonEfficiencyScaleFactor*)
   {
      return GenerateInitInstanceLocal((::MuonEfficiencyScaleFactor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonEfficiencyScaleFactor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonEfficiencyScaleFactor_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonEfficiencyScaleFactor*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void EtaPhiBinning_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void EtaPhiBinning_Dictionary();
   static void *new_EtaPhiBinning(void *p = 0);
   static void *newArray_EtaPhiBinning(Long_t size, void *p);
   static void delete_EtaPhiBinning(void *p);
   static void deleteArray_EtaPhiBinning(void *p);
   static void destruct_EtaPhiBinning(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EtaPhiBinning*)
   {
      ::EtaPhiBinning *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::EtaPhiBinning),0);
      static ::ROOT::TGenericClassInfo 
         instance("EtaPhiBinning", "./EtaPhiBinning.h", 10,
                  typeid(::EtaPhiBinning), DefineBehavior(ptr, ptr),
                  0, &EtaPhiBinning_Dictionary, isa_proxy, 0,
                  sizeof(::EtaPhiBinning) );
      instance.SetNew(&new_EtaPhiBinning);
      instance.SetNewArray(&newArray_EtaPhiBinning);
      instance.SetDelete(&delete_EtaPhiBinning);
      instance.SetDeleteArray(&deleteArray_EtaPhiBinning);
      instance.SetDestructor(&destruct_EtaPhiBinning);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EtaPhiBinning*)
   {
      return GenerateInitInstanceLocal((::EtaPhiBinning*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EtaPhiBinning*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void EtaPhiBinning_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::EtaPhiBinning*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void StacoCBScaleEffFactors_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void StacoCBScaleEffFactors_Dictionary();
   static void *new_StacoCBScaleEffFactors(void *p = 0);
   static void *newArray_StacoCBScaleEffFactors(Long_t size, void *p);
   static void delete_StacoCBScaleEffFactors(void *p);
   static void deleteArray_StacoCBScaleEffFactors(void *p);
   static void destruct_StacoCBScaleEffFactors(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StacoCBScaleEffFactors*)
   {
      ::StacoCBScaleEffFactors *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::StacoCBScaleEffFactors),0);
      static ::ROOT::TGenericClassInfo 
         instance("StacoCBScaleEffFactors", "./StacoCBScaleEffFactors.h", 40,
                  typeid(::StacoCBScaleEffFactors), DefineBehavior(ptr, ptr),
                  0, &StacoCBScaleEffFactors_Dictionary, isa_proxy, 0,
                  sizeof(::StacoCBScaleEffFactors) );
      instance.SetNew(&new_StacoCBScaleEffFactors);
      instance.SetNewArray(&newArray_StacoCBScaleEffFactors);
      instance.SetDelete(&delete_StacoCBScaleEffFactors);
      instance.SetDeleteArray(&deleteArray_StacoCBScaleEffFactors);
      instance.SetDestructor(&destruct_StacoCBScaleEffFactors);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StacoCBScaleEffFactors*)
   {
      return GenerateInitInstanceLocal((::StacoCBScaleEffFactors*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StacoCBScaleEffFactors*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StacoCBScaleEffFactors_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::StacoCBScaleEffFactors*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void egammaOQ_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_egammaOQ(void *p = 0);
   static void *newArray_egammaOQ(Long_t size, void *p);
   static void delete_egammaOQ(void *p);
   static void deleteArray_egammaOQ(void *p);
   static void destruct_egammaOQ(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::egammaOQ*)
   {
      ::egammaOQ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::egammaOQ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("egammaOQ", ::egammaOQ::Class_Version(), "./egammaOQ.h", 17,
                  typeid(::egammaOQ), DefineBehavior(ptr, ptr),
                  &::egammaOQ::Dictionary, isa_proxy, 0,
                  sizeof(::egammaOQ) );
      instance.SetNew(&new_egammaOQ);
      instance.SetNewArray(&newArray_egammaOQ);
      instance.SetDelete(&delete_egammaOQ);
      instance.SetDeleteArray(&deleteArray_egammaOQ);
      instance.SetDestructor(&destruct_egammaOQ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::egammaOQ*)
   {
      return GenerateInitInstanceLocal((::egammaOQ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::egammaOQ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MutagMETcorrection_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void MutagMETcorrection_Dictionary();
   static void *new_MutagMETcorrection(void *p = 0);
   static void *newArray_MutagMETcorrection(Long_t size, void *p);
   static void delete_MutagMETcorrection(void *p);
   static void deleteArray_MutagMETcorrection(void *p);
   static void destruct_MutagMETcorrection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MutagMETcorrection*)
   {
      ::MutagMETcorrection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MutagMETcorrection),0);
      static ::ROOT::TGenericClassInfo 
         instance("MutagMETcorrection", "./MutagMETcorrection.h", 46,
                  typeid(::MutagMETcorrection), DefineBehavior(ptr, ptr),
                  0, &MutagMETcorrection_Dictionary, isa_proxy, 0,
                  sizeof(::MutagMETcorrection) );
      instance.SetNew(&new_MutagMETcorrection);
      instance.SetNewArray(&newArray_MutagMETcorrection);
      instance.SetDelete(&delete_MutagMETcorrection);
      instance.SetDeleteArray(&deleteArray_MutagMETcorrection);
      instance.SetDestructor(&destruct_MutagMETcorrection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MutagMETcorrection*)
   {
      return GenerateInitInstanceLocal((::MutagMETcorrection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MutagMETcorrection*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MutagMETcorrection_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MutagMETcorrection*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HObjectSelector_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_HObjectSelector(void *p = 0);
   static void *newArray_HObjectSelector(Long_t size, void *p);
   static void delete_HObjectSelector(void *p);
   static void deleteArray_HObjectSelector(void *p);
   static void destruct_HObjectSelector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HObjectSelector*)
   {
      ::HObjectSelector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HObjectSelector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HObjectSelector", ::HObjectSelector::Class_Version(), "./HObjectSelector.h", 15,
                  typeid(::HObjectSelector), DefineBehavior(ptr, ptr),
                  &::HObjectSelector::Dictionary, isa_proxy, 0,
                  sizeof(::HObjectSelector) );
      instance.SetNew(&new_HObjectSelector);
      instance.SetNewArray(&newArray_HObjectSelector);
      instance.SetDelete(&delete_HObjectSelector);
      instance.SetDeleteArray(&deleteArray_HObjectSelector);
      instance.SetDestructor(&destruct_HObjectSelector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HObjectSelector*)
   {
      return GenerateInitInstanceLocal((::HObjectSelector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HObjectSelector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CutflowClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void CutflowClass_Dictionary();
   static void *new_CutflowClass(void *p = 0);
   static void *newArray_CutflowClass(Long_t size, void *p);
   static void delete_CutflowClass(void *p);
   static void deleteArray_CutflowClass(void *p);
   static void destruct_CutflowClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CutflowClass*)
   {
      ::CutflowClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CutflowClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("CutflowClass", "./CutflowClass.h", 14,
                  typeid(::CutflowClass), DefineBehavior(ptr, ptr),
                  0, &CutflowClass_Dictionary, isa_proxy, 0,
                  sizeof(::CutflowClass) );
      instance.SetNew(&new_CutflowClass);
      instance.SetNewArray(&newArray_CutflowClass);
      instance.SetDelete(&delete_CutflowClass);
      instance.SetDeleteArray(&deleteArray_CutflowClass);
      instance.SetDestructor(&destruct_CutflowClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CutflowClass*)
   {
      return GenerateInitInstanceLocal((::CutflowClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CutflowClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CutflowClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CutflowClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CutlistClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void CutlistClass_Dictionary();
   static void *new_CutlistClass(void *p = 0);
   static void *newArray_CutlistClass(Long_t size, void *p);
   static void delete_CutlistClass(void *p);
   static void deleteArray_CutlistClass(void *p);
   static void destruct_CutlistClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CutlistClass*)
   {
      ::CutlistClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CutlistClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("CutlistClass", "./CutlistClass.h", 13,
                  typeid(::CutlistClass), DefineBehavior(ptr, ptr),
                  0, &CutlistClass_Dictionary, isa_proxy, 0,
                  sizeof(::CutlistClass) );
      instance.SetNew(&new_CutlistClass);
      instance.SetNewArray(&newArray_CutlistClass);
      instance.SetDelete(&delete_CutlistClass);
      instance.SetDeleteArray(&deleteArray_CutlistClass);
      instance.SetDestructor(&destruct_CutlistClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CutlistClass*)
   {
      return GenerateInitInstanceLocal((::CutlistClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CutlistClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CutlistClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CutlistClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HHistosClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void HHistosClass_Dictionary();
   static void *new_HHistosClass(void *p = 0);
   static void *newArray_HHistosClass(Long_t size, void *p);
   static void delete_HHistosClass(void *p);
   static void deleteArray_HHistosClass(void *p);
   static void destruct_HHistosClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HHistosClass*)
   {
      ::HHistosClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HHistosClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("HHistosClass", "./HHistosClass.h", 15,
                  typeid(::HHistosClass), DefineBehavior(ptr, ptr),
                  0, &HHistosClass_Dictionary, isa_proxy, 0,
                  sizeof(::HHistosClass) );
      instance.SetNew(&new_HHistosClass);
      instance.SetNewArray(&newArray_HHistosClass);
      instance.SetDelete(&delete_HHistosClass);
      instance.SetDeleteArray(&deleteArray_HHistosClass);
      instance.SetDestructor(&destruct_HHistosClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HHistosClass*)
   {
      return GenerateInitInstanceLocal((::HHistosClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HHistosClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HHistosClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HHistosClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void CutCodeClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void CutCodeClass_Dictionary();
   static void *new_CutCodeClass(void *p = 0);
   static void *newArray_CutCodeClass(Long_t size, void *p);
   static void delete_CutCodeClass(void *p);
   static void deleteArray_CutCodeClass(void *p);
   static void destruct_CutCodeClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CutCodeClass*)
   {
      ::CutCodeClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CutCodeClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("CutCodeClass", "./CutCodeClass.h", 13,
                  typeid(::CutCodeClass), DefineBehavior(ptr, ptr),
                  0, &CutCodeClass_Dictionary, isa_proxy, 0,
                  sizeof(::CutCodeClass) );
      instance.SetNew(&new_CutCodeClass);
      instance.SetNewArray(&newArray_CutCodeClass);
      instance.SetDelete(&delete_CutCodeClass);
      instance.SetDeleteArray(&deleteArray_CutCodeClass);
      instance.SetDestructor(&destruct_CutCodeClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CutCodeClass*)
   {
      return GenerateInitInstanceLocal((::CutCodeClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CutCodeClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CutCodeClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::CutCodeClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ZControlClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ZControlClass_Dictionary();
   static void *new_ZControlClass(void *p = 0);
   static void *newArray_ZControlClass(Long_t size, void *p);
   static void delete_ZControlClass(void *p);
   static void deleteArray_ZControlClass(void *p);
   static void destruct_ZControlClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ZControlClass*)
   {
      ::ZControlClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ZControlClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("ZControlClass", "./ZControlClass.h", 14,
                  typeid(::ZControlClass), DefineBehavior(ptr, ptr),
                  0, &ZControlClass_Dictionary, isa_proxy, 0,
                  sizeof(::ZControlClass) );
      instance.SetNew(&new_ZControlClass);
      instance.SetNewArray(&newArray_ZControlClass);
      instance.SetDelete(&delete_ZControlClass);
      instance.SetDeleteArray(&deleteArray_ZControlClass);
      instance.SetDestructor(&destruct_ZControlClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ZControlClass*)
   {
      return GenerateInitInstanceLocal((::ZControlClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ZControlClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ZControlClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ZControlClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void WWEventClass_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void WWEventClass_Dictionary();
   static void *new_WWEventClass(void *p = 0);
   static void *newArray_WWEventClass(Long_t size, void *p);
   static void delete_WWEventClass(void *p);
   static void deleteArray_WWEventClass(void *p);
   static void destruct_WWEventClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WWEventClass*)
   {
      ::WWEventClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::WWEventClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("WWEventClass", "./WWEventClass.h", 7,
                  typeid(::WWEventClass), DefineBehavior(ptr, ptr),
                  0, &WWEventClass_Dictionary, isa_proxy, 0,
                  sizeof(::WWEventClass) );
      instance.SetNew(&new_WWEventClass);
      instance.SetNewArray(&newArray_WWEventClass);
      instance.SetDelete(&delete_WWEventClass);
      instance.SetDeleteArray(&deleteArray_WWEventClass);
      instance.SetDestructor(&destruct_WWEventClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WWEventClass*)
   {
      return GenerateInitInstanceLocal((::WWEventClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WWEventClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void WWEventClass_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::WWEventClass*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ggFReweighting_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void ggFReweighting_Dictionary();
   static void delete_ggFReweighting(void *p);
   static void deleteArray_ggFReweighting(void *p);
   static void destruct_ggFReweighting(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ggFReweighting*)
   {
      ::ggFReweighting *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ggFReweighting),0);
      static ::ROOT::TGenericClassInfo 
         instance("ggFReweighting", "./ggFReweighting.h", 17,
                  typeid(::ggFReweighting), DefineBehavior(ptr, ptr),
                  0, &ggFReweighting_Dictionary, isa_proxy, 0,
                  sizeof(::ggFReweighting) );
      instance.SetDelete(&delete_ggFReweighting);
      instance.SetDeleteArray(&deleteArray_ggFReweighting);
      instance.SetDestructor(&destruct_ggFReweighting);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ggFReweighting*)
   {
      return GenerateInitInstanceLocal((::ggFReweighting*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ggFReweighting*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ggFReweighting_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ggFReweighting*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void HWWAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_HWWAnalysis(void *p = 0);
   static void *newArray_HWWAnalysis(Long_t size, void *p);
   static void delete_HWWAnalysis(void *p);
   static void deleteArray_HWWAnalysis(void *p);
   static void destruct_HWWAnalysis(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HWWAnalysis*)
   {
      ::HWWAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HWWAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HWWAnalysis", ::HWWAnalysis::Class_Version(), "./HWWAnalysis.h", 20,
                  typeid(::HWWAnalysis), DefineBehavior(ptr, ptr),
                  &::HWWAnalysis::Dictionary, isa_proxy, 0,
                  sizeof(::HWWAnalysis) );
      instance.SetNew(&new_HWWAnalysis);
      instance.SetNewArray(&newArray_HWWAnalysis);
      instance.SetDelete(&delete_HWWAnalysis);
      instance.SetDeleteArray(&deleteArray_HWWAnalysis);
      instance.SetDestructor(&destruct_HWWAnalysis);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HWWAnalysis*)
   {
      return GenerateInitInstanceLocal((::HWWAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HWWAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TPileupReweighting::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPileupReweighting::Class_Name()
{
   return "TPileupReweighting";
}

//______________________________________________________________________________
const char *TPileupReweighting::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPileupReweighting*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPileupReweighting::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPileupReweighting*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPileupReweighting::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPileupReweighting*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPileupReweighting::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPileupReweighting*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BaseAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BaseAnalysis::Class_Name()
{
   return "BaseAnalysis";
}

//______________________________________________________________________________
const char *BaseAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BaseAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BaseAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BaseAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BaseAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BaseAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BaseAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BaseAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *egammaOQ::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *egammaOQ::Class_Name()
{
   return "egammaOQ";
}

//______________________________________________________________________________
const char *egammaOQ::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::egammaOQ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int egammaOQ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::egammaOQ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void egammaOQ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::egammaOQ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *egammaOQ::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::egammaOQ*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HObjectSelector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HObjectSelector::Class_Name()
{
   return "HObjectSelector";
}

//______________________________________________________________________________
const char *HObjectSelector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HObjectSelector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HObjectSelector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HObjectSelector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HObjectSelector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HObjectSelector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HObjectSelector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HObjectSelector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *HWWAnalysis::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HWWAnalysis::Class_Name()
{
   return "HWWAnalysis";
}

//______________________________________________________________________________
const char *HWWAnalysis::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HWWAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HWWAnalysis::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HWWAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HWWAnalysis::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HWWAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HWWAnalysis::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HWWAnalysis*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void BaseAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class BaseAnalysis.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void BaseAnalysis::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class BaseAnalysis.
      TClass *R__cl = ::BaseAnalysis::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_debug", &_debug);
      R__insp.Inspect(R__cl, R__parent, "*_electrons", &_electrons);
      R__insp.Inspect(R__cl, R__parent, "*_muons", &_muons);
      R__insp.Inspect(R__cl, R__parent, "*_caloMuons", &_caloMuons);
      R__insp.Inspect(R__cl, R__parent, "*_jets", &_jets);
      R__insp.Inspect(R__cl, R__parent, "*_tracks", &_tracks);
      R__insp.Inspect(R__cl, R__parent, "*_primaryVertices", &_primaryVertices);
      R__insp.Inspect(R__cl, R__parent, "*_truthParticles", &_truthParticles);
      R__insp.Inspect(R__cl, R__parent, "*_L1MuonTriggerROIs", &_L1MuonTriggerROIs);
      R__insp.Inspect(R__cl, R__parent, "*_missingET", &_missingET);
      R__insp.Inspect(R__cl, R__parent, "*_missingETTerms", &_missingETTerms);
      R__insp.Inspect(R__cl, R__parent, "*_eventInfo", &_eventInfo);
      R__insp.Inspect(R__cl, R__parent, "*_trigger", &_trigger);
      R__insp.Inspect(R__cl, R__parent, "*_triggerObjects", &_triggerObjects);
      R__insp.Inspect(R__cl, R__parent, "_fileNameMap", (void*)&_fileNameMap);
      ::ROOT::GenericShowMembers("map<std::string,std::vector<std::string> >", (void*)&_fileNameMap, R__insp, strcat(R__parent,"_fileNameMap."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_crossSections", (void*)&_crossSections);
      ::ROOT::GenericShowMembers("map<std::string,double>", (void*)&_crossSections, R__insp, strcat(R__parent,"_crossSections."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_sampleWeights", (void*)&_sampleWeights);
      ::ROOT::GenericShowMembers("map<std::string,double>", (void*)&_sampleWeights, R__insp, strcat(R__parent,"_sampleWeights."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_setNumbers", (void*)&_setNumbers);
      ::ROOT::GenericShowMembers("map<std::string,std::string>", (void*)&_setNumbers, R__insp, strcat(R__parent,"_setNumbers."),false);
      R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BaseAnalysis(void *p) {
      return  p ? new(p) ::BaseAnalysis : new ::BaseAnalysis;
   }
   static void *newArray_BaseAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::BaseAnalysis[nElements] : new ::BaseAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_BaseAnalysis(void *p) {
      delete ((::BaseAnalysis*)p);
   }
   static void deleteArray_BaseAnalysis(void *p) {
      delete [] ((::BaseAnalysis*)p);
   }
   static void destruct_BaseAnalysis(void *p) {
      typedef ::BaseAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BaseAnalysis

//______________________________________________________________________________
void HObjectSelector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HObjectSelector.

   ::Error("HObjectSelector::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HObjectSelector::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class HObjectSelector.
      TClass *R__cl = ::HObjectSelector::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*eCut", &eCut);
      R__insp.Inspect(R__cl, R__parent, "*mCut", &mCut);
      R__insp.Inspect(R__cl, R__parent, "*jCut", &jCut);
      R__insp.Inspect(R__cl, R__parent, "passE20trigger", &passE20trigger);
      R__insp.Inspect(R__cl, R__parent, "passE22trigger", &passE22trigger);
      R__insp.Inspect(R__cl, R__parent, "passM11trigger", &passM11trigger);
      R__insp.Inspect(R__cl, R__parent, "passM18trigger", &passM18trigger);
      R__insp.Inspect(R__cl, R__parent, "passM40trigger", &passM40trigger);
      R__insp.Inspect(R__cl, R__parent, "passM18mtrigger", &passM18mtrigger);
      R__insp.Inspect(R__cl, R__parent, "passM40mtrigger", &passM40mtrigger);
      R__insp.Inspect(R__cl, R__parent, "mScale", &mScale);
      R__insp.Inspect(R__cl, R__parent, "dpxMuon", &dpxMuon);
      R__insp.Inspect(R__cl, R__parent, "dpyMuon", &dpyMuon);
      R__insp.Inspect(R__cl, R__parent, "eScale", &eScale);
      R__insp.Inspect(R__cl, R__parent, "dpxElec", &dpxElec);
      R__insp.Inspect(R__cl, R__parent, "dpyElec", &dpyElec);
      R__insp.Inspect(R__cl, R__parent, "dpxJet", &dpxJet);
      R__insp.Inspect(R__cl, R__parent, "dpyJet", &dpyJet);
      R__insp.Inspect(R__cl, R__parent, "febElecs", (void*)&febElecs);
      ::ROOT::GenericShowMembers("vector<MTree::Electron*>", (void*)&febElecs, R__insp, strcat(R__parent,"febElecs."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "febJets", (void*)&febJets);
      ::ROOT::GenericShowMembers("vector<MTree::Jet*>", (void*)&febJets, R__insp, strcat(R__parent,"febJets."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*mcp_smear", &mcp_smear);
      R__insp.Inspect(R__cl, R__parent, "*eRescaler", &eRescaler);
      R__insp.Inspect(R__cl, R__parent, "*eSFactor", &eSFactor);
      R__insp.Inspect(R__cl, R__parent, "*mSFactor", &mSFactor);
      R__insp.Inspect(R__cl, R__parent, "*myJES", &myJES);
      R__insp.Inspect(R__cl, R__parent, "*eOQcheck", &eOQcheck);
      R__insp.Inspect(R__cl, R__parent, "*metCorrect", &metCorrect);
      R__insp.Inspect(R__cl, R__parent, "filename", (void*)&filename);
      ::ROOT::GenericShowMembers("string", (void*)&filename, R__insp, strcat(R__parent,"filename."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "outfile", (void*)&outfile);
      ::ROOT::GenericShowMembers("ofstream", (void*)&outfile, R__insp, strcat(R__parent,"outfile."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HObjectSelector(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HObjectSelector : new ::HObjectSelector;
   }
   static void *newArray_HObjectSelector(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HObjectSelector[nElements] : new ::HObjectSelector[nElements];
   }
   // Wrapper around operator delete
   static void delete_HObjectSelector(void *p) {
      delete ((::HObjectSelector*)p);
   }
   static void deleteArray_HObjectSelector(void *p) {
      delete [] ((::HObjectSelector*)p);
   }
   static void destruct_HObjectSelector(void *p) {
      typedef ::HObjectSelector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HObjectSelector

//______________________________________________________________________________
void HWWAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class HWWAnalysis.

   BaseAnalysis::Streamer(R__b);
}

//______________________________________________________________________________
void HWWAnalysis::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class HWWAnalysis.
      TClass *R__cl = ::HWWAnalysis::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*code", &code);
      R__insp.Inspect(R__cl, R__parent, "*selector", &selector);
      R__insp.Inspect(R__cl, R__parent, "*cutflow", &cutflow);
      R__insp.Inspect(R__cl, R__parent, "*cutlist", &cutlist);
      R__insp.Inspect(R__cl, R__parent, "*histos", &histos);
      R__insp.Inspect(R__cl, R__parent, "*zregion", &zregion);
      R__insp.Inspect(R__cl, R__parent, "*wwevent", &wwevent);
      R__insp.Inspect(R__cl, R__parent, "*reweight", &reweight);
      R__insp.Inspect(R__cl, R__parent, "*calib", &calib);
      R__insp.Inspect(R__cl, R__parent, "*ajet", &ajet);
      R__insp.Inspect(R__cl, R__parent, "*pileup", &pileup);
      R__insp.Inspect(R__cl, R__parent, "*metForWW", &metForWW);
      R__insp.Inspect(R__cl, R__parent, "*metRel", &metRel);
      R__insp.Inspect(R__cl, R__parent, "febEs", &febEs);
      R__insp.Inspect(R__cl, R__parent, "badEs", &badEs);
      R__insp.Inspect(R__cl, R__parent, "febJs", &febJs);
      R__insp.Inspect(R__cl, R__parent, "badJs", &badJs);
      R__insp.Inspect(R__cl, R__parent, "*Ptll", &Ptll);
      R__insp.Inspect(R__cl, R__parent, "*Mll", &Mll);
      BaseAnalysis::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HWWAnalysis(void *p) {
      return  p ? new(p) ::HWWAnalysis : new ::HWWAnalysis;
   }
   static void *newArray_HWWAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::HWWAnalysis[nElements] : new ::HWWAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_HWWAnalysis(void *p) {
      delete ((::HWWAnalysis*)p);
   }
   static void deleteArray_HWWAnalysis(void *p) {
      delete [] ((::HWWAnalysis*)p);
   }
   static void destruct_HWWAnalysis(void *p) {
      typedef ::HWWAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HWWAnalysis

namespace ROOT {
   // Wrappers around operator new
   static void *new_CutflowClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CutflowClass : new ::CutflowClass;
   }
   static void *newArray_CutflowClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CutflowClass[nElements] : new ::CutflowClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_CutflowClass(void *p) {
      delete ((::CutflowClass*)p);
   }
   static void deleteArray_CutflowClass(void *p) {
      delete [] ((::CutflowClass*)p);
   }
   static void destruct_CutflowClass(void *p) {
      typedef ::CutflowClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CutflowClass

namespace ROOT {
   // Wrappers around operator new
   static void *new_CutlistClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CutlistClass : new ::CutlistClass;
   }
   static void *newArray_CutlistClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CutlistClass[nElements] : new ::CutlistClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_CutlistClass(void *p) {
      delete ((::CutlistClass*)p);
   }
   static void deleteArray_CutlistClass(void *p) {
      delete [] ((::CutlistClass*)p);
   }
   static void destruct_CutlistClass(void *p) {
      typedef ::CutlistClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CutlistClass

namespace ROOT {
   // Wrappers around operator new
   static void *new_HHistosClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HHistosClass : new ::HHistosClass;
   }
   static void *newArray_HHistosClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HHistosClass[nElements] : new ::HHistosClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_HHistosClass(void *p) {
      delete ((::HHistosClass*)p);
   }
   static void deleteArray_HHistosClass(void *p) {
      delete [] ((::HHistosClass*)p);
   }
   static void destruct_HHistosClass(void *p) {
      typedef ::HHistosClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HHistosClass

namespace ROOT {
   // Wrapper around operator delete
   static void delete_SmearingClass(void *p) {
      delete ((::SmearingClass*)p);
   }
   static void deleteArray_SmearingClass(void *p) {
      delete [] ((::SmearingClass*)p);
   }
   static void destruct_SmearingClass(void *p) {
      typedef ::SmearingClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SmearingClass

namespace ROOT {
   // Wrappers around operator new
   static void *new_ZControlClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ZControlClass : new ::ZControlClass;
   }
   static void *newArray_ZControlClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ZControlClass[nElements] : new ::ZControlClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_ZControlClass(void *p) {
      delete ((::ZControlClass*)p);
   }
   static void deleteArray_ZControlClass(void *p) {
      delete [] ((::ZControlClass*)p);
   }
   static void destruct_ZControlClass(void *p) {
      typedef ::ZControlClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ZControlClass

//______________________________________________________________________________
void TPileupReweighting::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPileupReweighting.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> m_dataRootFile;
      R__b >> m_dataRootHist;
      R__b >> m_mcRootFile;
      R__b >> m_mcRootHist;
      R__b.CheckByteCount(R__s, R__c, TPileupReweighting::IsA());
   } else {
      R__c = R__b.WriteVersion(TPileupReweighting::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << m_dataRootFile;
      R__b << (TObject*)m_dataRootHist;
      R__b << m_mcRootFile;
      R__b << (TObject*)m_mcRootHist;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TPileupReweighting::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TPileupReweighting.
      TClass *R__cl = ::TPileupReweighting::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*m_dataRootFile", &m_dataRootFile);
      R__insp.Inspect(R__cl, R__parent, "*m_dataRootHist", &m_dataRootHist);
      R__insp.Inspect(R__cl, R__parent, "*m_mcRootFile", &m_mcRootFile);
      R__insp.Inspect(R__cl, R__parent, "*m_mcRootHist", &m_mcRootHist);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TPileupReweighting(void *p) {
      delete ((::TPileupReweighting*)p);
   }
   static void deleteArray_TPileupReweighting(void *p) {
      delete [] ((::TPileupReweighting*)p);
   }
   static void destruct_TPileupReweighting(void *p) {
      typedef ::TPileupReweighting current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPileupReweighting

namespace ROOT {
   // Wrappers around operator new
   static void *new_EnergyRescaler(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EnergyRescaler : new ::EnergyRescaler;
   }
   static void *newArray_EnergyRescaler(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EnergyRescaler[nElements] : new ::EnergyRescaler[nElements];
   }
   // Wrapper around operator delete
   static void delete_EnergyRescaler(void *p) {
      delete ((::EnergyRescaler*)p);
   }
   static void deleteArray_EnergyRescaler(void *p) {
      delete [] ((::EnergyRescaler*)p);
   }
   static void destruct_EnergyRescaler(void *p) {
      typedef ::EnergyRescaler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EnergyRescaler

namespace ROOT {
   // Wrappers around operator new
   static void *new_CutCodeClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CutCodeClass : new ::CutCodeClass;
   }
   static void *newArray_CutCodeClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CutCodeClass[nElements] : new ::CutCodeClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_CutCodeClass(void *p) {
      delete ((::CutCodeClass*)p);
   }
   static void deleteArray_CutCodeClass(void *p) {
      delete [] ((::CutCodeClass*)p);
   }
   static void destruct_CutCodeClass(void *p) {
      typedef ::CutCodeClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CutCodeClass

namespace ROOT {
   // Wrappers around operator new
   static void *new_egammaSFclass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::egammaSFclass : new ::egammaSFclass;
   }
   static void *newArray_egammaSFclass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::egammaSFclass[nElements] : new ::egammaSFclass[nElements];
   }
   // Wrapper around operator delete
   static void delete_egammaSFclass(void *p) {
      delete ((::egammaSFclass*)p);
   }
   static void deleteArray_egammaSFclass(void *p) {
      delete [] ((::egammaSFclass*)p);
   }
   static void destruct_egammaSFclass(void *p) {
      typedef ::egammaSFclass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::egammaSFclass

namespace ROOT {
   // Wrappers around operator new
   static void *new_EtaPhiBinning(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EtaPhiBinning : new ::EtaPhiBinning;
   }
   static void *newArray_EtaPhiBinning(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EtaPhiBinning[nElements] : new ::EtaPhiBinning[nElements];
   }
   // Wrapper around operator delete
   static void delete_EtaPhiBinning(void *p) {
      delete ((::EtaPhiBinning*)p);
   }
   static void deleteArray_EtaPhiBinning(void *p) {
      delete [] ((::EtaPhiBinning*)p);
   }
   static void destruct_EtaPhiBinning(void *p) {
      typedef ::EtaPhiBinning current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EtaPhiBinning

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonEfficiencyScaleFactor(void *p) {
      delete ((::MuonEfficiencyScaleFactor*)p);
   }
   static void deleteArray_MuonEfficiencyScaleFactor(void *p) {
      delete [] ((::MuonEfficiencyScaleFactor*)p);
   }
   static void destruct_MuonEfficiencyScaleFactor(void *p) {
      typedef ::MuonEfficiencyScaleFactor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonEfficiencyScaleFactor

namespace ROOT {
   // Wrappers around operator new
   static void *new_StacoCBScaleEffFactors(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StacoCBScaleEffFactors : new ::StacoCBScaleEffFactors;
   }
   static void *newArray_StacoCBScaleEffFactors(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StacoCBScaleEffFactors[nElements] : new ::StacoCBScaleEffFactors[nElements];
   }
   // Wrapper around operator delete
   static void delete_StacoCBScaleEffFactors(void *p) {
      delete ((::StacoCBScaleEffFactors*)p);
   }
   static void deleteArray_StacoCBScaleEffFactors(void *p) {
      delete [] ((::StacoCBScaleEffFactors*)p);
   }
   static void destruct_StacoCBScaleEffFactors(void *p) {
      typedef ::StacoCBScaleEffFactors current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StacoCBScaleEffFactors

namespace ROOT {
   // Wrappers around operator new
   static void *new_WWEventClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WWEventClass : new ::WWEventClass;
   }
   static void *newArray_WWEventClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WWEventClass[nElements] : new ::WWEventClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_WWEventClass(void *p) {
      delete ((::WWEventClass*)p);
   }
   static void deleteArray_WWEventClass(void *p) {
      delete [] ((::WWEventClass*)p);
   }
   static void destruct_WWEventClass(void *p) {
      typedef ::WWEventClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WWEventClass

//______________________________________________________________________________
void egammaOQ::Streamer(TBuffer &R__b)
{
   // Stream an object of class egammaOQ.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, egammaOQ::IsA());
   } else {
      R__c = R__b.WriteVersion(egammaOQ::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void egammaOQ::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class egammaOQ.
      TClass *R__cl = ::egammaOQ::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_egammaOQ(void *p) {
      return  p ? new(p) ::egammaOQ : new ::egammaOQ;
   }
   static void *newArray_egammaOQ(Long_t nElements, void *p) {
      return p ? new(p) ::egammaOQ[nElements] : new ::egammaOQ[nElements];
   }
   // Wrapper around operator delete
   static void delete_egammaOQ(void *p) {
      delete ((::egammaOQ*)p);
   }
   static void deleteArray_egammaOQ(void *p) {
      delete [] ((::egammaOQ*)p);
   }
   static void destruct_egammaOQ(void *p) {
      typedef ::egammaOQ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::egammaOQ

namespace ROOT {
   // Wrappers around operator new
   static void *new_MutagMETcorrection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MutagMETcorrection : new ::MutagMETcorrection;
   }
   static void *newArray_MutagMETcorrection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MutagMETcorrection[nElements] : new ::MutagMETcorrection[nElements];
   }
   // Wrapper around operator delete
   static void delete_MutagMETcorrection(void *p) {
      delete ((::MutagMETcorrection*)p);
   }
   static void deleteArray_MutagMETcorrection(void *p) {
      delete [] ((::MutagMETcorrection*)p);
   }
   static void destruct_MutagMETcorrection(void *p) {
      typedef ::MutagMETcorrection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MutagMETcorrection

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ggFReweighting(void *p) {
      delete ((::ggFReweighting*)p);
   }
   static void deleteArray_ggFReweighting(void *p) {
      delete [] ((::ggFReweighting*)p);
   }
   static void destruct_ggFReweighting(void *p) {
      typedef ::ggFReweighting current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ggFReweighting

/********************************************************
* AnalysisDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAnalysisDict();

extern "C" void G__set_cpp_environmentAnalysisDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BaseAnalysis.h");
  G__add_compiledheader("HObjectSelector.h");
  G__add_compiledheader("HWWAnalysis.h");
  G__add_compiledheader("CutflowClass.h");
  G__add_compiledheader("CutlistClass.h");
  G__add_compiledheader("HHistosClass.h");
  G__add_compiledheader("SmearingClass.h");
  G__add_compiledheader("ZControlClass.h");
  G__add_compiledheader("TPileupReweighting.h");
  G__add_compiledheader("EnergyRescaler.h");
  G__add_compiledheader("CutCodeClass.h");
  G__add_compiledheader("egammaSFclass.h");
  G__add_compiledheader("EtaPhiBinning.h");
  G__add_compiledheader("MuonEfficiencyScaleFactor.h");
  G__add_compiledheader("StacoCBScaleEffFactors.h");
  G__add_compiledheader("WWEventClass.h");
  G__add_compiledheader("egammaOQ.h");
  G__add_compiledheader("MutagMETcorrection.h");
  G__add_compiledheader("ggFReweighting.h");
  G__cpp_reset_tagtableAnalysisDict();
}
#include <new>
extern "C" int G__cpp_dllrevAnalysisDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TPileupReweighting */
static int G__AnalysisDict_857_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPileupReweighting* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPileupReweighting((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TPileupReweighting((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPileupReweighting*) G__getstructoffset())->initialize(*(TString*) libp->para[0].ref, *(TString*) libp->para[1].ref
, *(TString*) libp->para[2].ref, *(TString*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TPileupReweighting*) G__getstructoffset())->getPileupWeight((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPileupReweighting*) G__getstructoffset())->getPileupWeight((float) G__double(libp->para[0]), *(float*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPileupReweighting::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPileupReweighting::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPileupReweighting::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPileupReweighting::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPileupReweighting*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPileupReweighting::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPileupReweighting::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPileupReweighting::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_857_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPileupReweighting::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_857_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPileupReweighting* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPileupReweighting(*(TPileupReweighting*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPileupReweighting G__TTPileupReweighting;
static int G__AnalysisDict_857_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPileupReweighting*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPileupReweighting*) (soff+(sizeof(TPileupReweighting)*i)))->~G__TTPileupReweighting();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPileupReweighting*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPileupReweighting*) (soff))->~G__TTPileupReweighting();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_857_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPileupReweighting* dest = (TPileupReweighting*) G__getstructoffset();
   *dest = *(TPileupReweighting*) libp->para[0].ref;
   const TPileupReweighting& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BaseAnalysis */
static int G__AnalysisDict_873_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BaseAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BaseAnalysis[n];
     } else {
       p = new((void*) gvp) BaseAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BaseAnalysis;
     } else {
       p = new((void*) gvp) BaseAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BaseAnalysis*) G__getstructoffset())->GetChain(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BaseAnalysis*) G__getstructoffset())->GetChain(*((vector<std::string>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((BaseAnalysis*) G__getstructoffset())->convertNameToNum(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->setBranchAddresses((TChain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->GetCrossSection(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((BaseAnalysis*) G__getstructoffset())->GetKnownChains();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->CalculateSampleWeight(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((BaseAnalysis*) G__getstructoffset())->GetAllSamples(*((string*) G__int(libp->para[0])));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->GetAllNames();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->includeOverflow((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->includeUnderflow((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->removeNegativeBins((TH1D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->efficiency_symm((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->eff_pos_err((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->eff_neg_err((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->poisson_up((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BaseAnalysis*) G__getstructoffset())->poisson_down((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BaseAnalysis*) G__getstructoffset())->GetEfficiencyGraph((TH1D*) G__int(libp->para[0]), (TH1D*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->SetDebug();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BaseAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BaseAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BaseAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BaseAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BaseAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BaseAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BaseAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BaseAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_873_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BaseAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_873_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BaseAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BaseAnalysis(*(BaseAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BaseAnalysis G__TBaseAnalysis;
static int G__AnalysisDict_873_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BaseAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BaseAnalysis*) (soff+(sizeof(BaseAnalysis)*i)))->~G__TBaseAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BaseAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BaseAnalysis*) (soff))->~G__TBaseAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_873_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BaseAnalysis* dest = (BaseAnalysis*) G__getstructoffset();
   *dest = *(BaseAnalysis*) libp->para[0].ref;
   const BaseAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SmearingClass */
static int G__AnalysisDict_890_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SmearingClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SmearingClass(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) SmearingClass(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SmearingClass(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) SmearingClass(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_SmearingClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SmearingClass*) G__getstructoffset())->Initialize(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((SmearingClass*) G__getstructoffset())->Initialize(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->Finalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->SetSeed((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((SmearingClass*) G__getstructoffset())->SetSeed((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((SmearingClass*) G__getstructoffset())->SetSeed((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->UseTan2((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->UseGeV();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->UseScale((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->FillValues(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->PrintValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->Smearing(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->Combine((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->ErrorMatrix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->pTMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->pTMS((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->pTID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->pTID((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->pTCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->pTCB((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->SMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->SID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->SCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->VMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->VID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->Corr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->MSUP(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->MSUP(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->MSLOW(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->MSLOW(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->IDUP(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->IDUP(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->IDLOW(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->IDLOW(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->PTVar(*(double*) G__Doubleref(&libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SmearingClass*) G__getstructoffset())->PTVar(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->Sign((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->ptms_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->ptid_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->ptcb_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SmearingClass*) G__getstructoffset())->ETA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_890_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SmearingClass*) G__getstructoffset())->DetRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SmearingClass G__TSmearingClass;
static int G__AnalysisDict_890_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SmearingClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SmearingClass*) (soff+(sizeof(SmearingClass)*i)))->~G__TSmearingClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SmearingClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SmearingClass*) (soff))->~G__TSmearingClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EnergyRescaler */
static int G__AnalysisDict_891_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EnergyRescaler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EnergyRescaler[n];
     } else {
       p = new((void*) gvp) EnergyRescaler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EnergyRescaler;
     } else {
       p = new((void*) gvp) EnergyRescaler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EnergyRescaler*) G__getstructoffset())->readCalibConstants(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->applyEnergyCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), *((string*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->applyEnergyCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->applyEnergyCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->applyEnergyCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), *((string*) G__int(libp->para[5]))));
      break;
   case 5:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->applyEnergyCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->applyEnergyCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((EnergyRescaler*) G__getstructoffset())->useDefaultCalibConstants(*((string*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 103, (long) ((EnergyRescaler*) G__getstructoffset())->useDefaultCalibConstants());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EnergyRescaler*) G__getstructoffset())->SetRandomSeed((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EnergyRescaler*) G__getstructoffset())->SetRandomSeed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, *((string*) G__int(libp->para[4]))));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, *((string*) G__int(libp->para[4]))));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const EnergyRescaler*) G__getstructoffset())->getSmearingCorrectionMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const EnergyRescaler*) G__getstructoffset())->printMap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorGeV(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *((string*) G__int(libp->para[4])), (bool) G__int(libp->para[5])
, (bool) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *((string*) G__int(libp->para[4])), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *((string*) G__int(libp->para[4])));
      G__setnull(result7);
      break;
   case 4:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorGeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_891_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorMeV(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *((string*) G__int(libp->para[4])), (bool) G__int(libp->para[5])
, (bool) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *((string*) G__int(libp->para[4])), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *((string*) G__int(libp->para[4])));
      G__setnull(result7);
      break;
   case 4:
      ((const EnergyRescaler*) G__getstructoffset())->getErrorMeV((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_891_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EnergyRescaler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EnergyRescaler(*(EnergyRescaler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EnergyRescaler G__TEnergyRescaler;
static int G__AnalysisDict_891_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EnergyRescaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EnergyRescaler*) (soff+(sizeof(EnergyRescaler)*i)))->~G__TEnergyRescaler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EnergyRescaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EnergyRescaler*) (soff))->~G__TEnergyRescaler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_891_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EnergyRescaler* dest = (EnergyRescaler*) G__getstructoffset();
   *dest = *(EnergyRescaler*) libp->para[0].ref;
   const EnergyRescaler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* egammaSFclass */
static int G__AnalysisDict_898_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   egammaSFclass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new egammaSFclass[n];
     } else {
       p = new((void*) gvp) egammaSFclass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new egammaSFclass;
     } else {
       p = new((void*) gvp) egammaSFclass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->etCorrection((float) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->etCorrection((float) G__double(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactor((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 5:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactor((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactor((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactor((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorLoose((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorLoose((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorLoose((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorLoose((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorLoose((float) G__double(libp->para[0]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMedium((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMedium((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMedium((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMedium((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMedium((float) G__double(libp->para[0]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTight((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTight((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTight((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTight((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTight((float) G__double(libp->para[0]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTrigger((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTrigger((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTrigger((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTrigger((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTrigger((float) G__double(libp->para[0]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorRecoTrkQual((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorRecoTrkQual((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorRecoTrkQual((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorRecoTrkQual((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorRecoTrkQual((float) G__double(libp->para[0]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMediumETcorrected((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorMediumETcorrected((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_898_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTightETcorrected((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((egammaSFclass*) G__getstructoffset())->scaleFactorTightETcorrected((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_898_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   egammaSFclass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new egammaSFclass(*(egammaSFclass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef egammaSFclass G__TegammaSFclass;
static int G__AnalysisDict_898_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (egammaSFclass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((egammaSFclass*) (soff+(sizeof(egammaSFclass)*i)))->~G__TegammaSFclass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (egammaSFclass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((egammaSFclass*) (soff))->~G__TegammaSFclass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_898_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   egammaSFclass* dest = (egammaSFclass*) G__getstructoffset();
   *dest = *(egammaSFclass*) libp->para[0].ref;
   const egammaSFclass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonEfficiencyScaleFactor */
static int G__AnalysisDict_900_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MuonEfficiencyScaleFactor*) G__getstructoffset())->scaleFactor(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_900_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MuonEfficiencyScaleFactor*) G__getstructoffset())->scaleFactorUncertainty(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_900_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MuonEfficiencyScaleFactor*) G__getstructoffset())->scaleFactorSystematicUncertainty(*(TLorentzVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonEfficiencyScaleFactor G__TMuonEfficiencyScaleFactor;
static int G__AnalysisDict_900_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonEfficiencyScaleFactor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonEfficiencyScaleFactor*) (soff+(sizeof(MuonEfficiencyScaleFactor)*i)))->~G__TMuonEfficiencyScaleFactor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonEfficiencyScaleFactor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonEfficiencyScaleFactor*) (soff))->~G__TMuonEfficiencyScaleFactor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_900_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonEfficiencyScaleFactor* dest = (MuonEfficiencyScaleFactor*) G__getstructoffset();
   *dest = *(MuonEfficiencyScaleFactor*) libp->para[0].ref;
   const MuonEfficiencyScaleFactor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EtaPhiBinning */
static int G__AnalysisDict_901_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EtaPhiBinning* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EtaPhiBinning[n];
     } else {
       p = new((void*) gvp) EtaPhiBinning[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EtaPhiBinning;
     } else {
       p = new((void*) gvp) EtaPhiBinning;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_901_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EtaPhiBinning*) G__getstructoffset())->bin((const TLorentzVector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_901_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const EtaPhiBinning*) G__getstructoffset())->symmetricBin((const TLorentzVector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_901_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EtaPhiBinning* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EtaPhiBinning(*(EtaPhiBinning*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EtaPhiBinning G__TEtaPhiBinning;
static int G__AnalysisDict_901_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EtaPhiBinning*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EtaPhiBinning*) (soff+(sizeof(EtaPhiBinning)*i)))->~G__TEtaPhiBinning();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EtaPhiBinning*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EtaPhiBinning*) (soff))->~G__TEtaPhiBinning();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_901_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EtaPhiBinning* dest = (EtaPhiBinning*) G__getstructoffset();
   *dest = *(EtaPhiBinning*) libp->para[0].ref;
   const EtaPhiBinning& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StacoCBScaleEffFactors */
static int G__AnalysisDict_903_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StacoCBScaleEffFactors* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StacoCBScaleEffFactors[n];
     } else {
       p = new((void*) gvp) StacoCBScaleEffFactors[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StacoCBScaleEffFactors;
     } else {
       p = new((void*) gvp) StacoCBScaleEffFactors;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_903_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StacoCBScaleEffFactors*) G__getstructoffset())->scaleFactor(*(TLorentzVector*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_903_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StacoCBScaleEffFactors*) G__getstructoffset())->scaleFactorUncertainty(*(TLorentzVector*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_903_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StacoCBScaleEffFactors* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StacoCBScaleEffFactors(*(StacoCBScaleEffFactors*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StacoCBScaleEffFactors G__TStacoCBScaleEffFactors;
static int G__AnalysisDict_903_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StacoCBScaleEffFactors*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StacoCBScaleEffFactors*) (soff+(sizeof(StacoCBScaleEffFactors)*i)))->~G__TStacoCBScaleEffFactors();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StacoCBScaleEffFactors*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StacoCBScaleEffFactors*) (soff))->~G__TStacoCBScaleEffFactors();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_903_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StacoCBScaleEffFactors* dest = (StacoCBScaleEffFactors*) G__getstructoffset();
   *dest = *(StacoCBScaleEffFactors*) libp->para[0].ref;
   const StacoCBScaleEffFactors& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* egammaOQ */
static int G__AnalysisDict_904_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   egammaOQ* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new egammaOQ(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) egammaOQ(*((string*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new egammaOQ[n];
       } else {
         p = new((void*) gvp) egammaOQ[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new egammaOQ;
       } else {
         p = new((void*) gvp) egammaOQ;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->deadRegionS2((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->deadRegionS2((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQCluster((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQCluster((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQCluster((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQClusterElectron((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQClusterElectron((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQClusterElectron((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQClusterPhoton((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQClusterPhoton((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQClusterPhoton((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQCluster((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (bool) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((egammaOQ*) G__getstructoffset())->checkOQCluster((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) egammaOQ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) egammaOQ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) egammaOQ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      egammaOQ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((egammaOQ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) egammaOQ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) egammaOQ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) egammaOQ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_904_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) egammaOQ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_904_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   egammaOQ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new egammaOQ(*(egammaOQ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef egammaOQ G__TegammaOQ;
static int G__AnalysisDict_904_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (egammaOQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((egammaOQ*) (soff+(sizeof(egammaOQ)*i)))->~G__TegammaOQ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (egammaOQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((egammaOQ*) (soff))->~G__TegammaOQ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_904_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   egammaOQ* dest = (egammaOQ*) G__getstructoffset();
   *dest = *(egammaOQ*) libp->para[0].ref;
   const egammaOQ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MutagMETcorrection */
static int G__AnalysisDict_905_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MutagMETcorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MutagMETcorrection((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MutagMETcorrection((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MutagMETcorrection[n];
       } else {
         p = new((void*) gvp) MutagMETcorrection[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MutagMETcorrection;
       } else {
         p = new((void*) gvp) MutagMETcorrection;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MutagMETcorrection*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MutagMETcorrection*) G__getstructoffset())->addMuon(
(const int) G__int(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const float) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector* pobj;
         const TLorentzVector xobj = ((const MutagMETcorrection*) G__getstructoffset())->getEtMissCorrection();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MutagMETcorrection*) G__getstructoffset())->getEtMissCorrection(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((MutagMETcorrection*) G__getstructoffset())->getEtMissCorrection(
(const vector<int>*) G__int(libp->para[0]), (const vector<float>*) G__int(libp->para[1])
, (const vector<float>*) G__int(libp->para[2]), (const vector<float>*) G__int(libp->para[3])
, (const vector<float>*) G__int(libp->para[4]), (const vector<float>*) G__int(libp->para[5])
, (const vector<float>*) G__int(libp->para[6]), (const vector<float>*) G__int(libp->para[7]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((MutagMETcorrection*) G__getstructoffset())->getEtMissCorrection(
*(vector<int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref, *(vector<float>*) libp->para[3].ref
, *(vector<float>*) libp->para[4].ref, *(vector<float>*) libp->para[5].ref
, *(vector<float>*) libp->para[6].ref, *(vector<float>*) libp->para[7].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((MutagMETcorrection*) G__getstructoffset())->getEtMissCorrected(*(TLorentzVector*) libp->para[0].ref);
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_905_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((MutagMETcorrection*) G__getstructoffset())->getEtMissCorrected((const float) G__double(libp->para[0]), (const float) G__double(libp->para[1]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_905_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MutagMETcorrection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MutagMETcorrection(*(MutagMETcorrection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MutagMETcorrection G__TMutagMETcorrection;
static int G__AnalysisDict_905_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MutagMETcorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MutagMETcorrection*) (soff+(sizeof(MutagMETcorrection)*i)))->~G__TMutagMETcorrection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MutagMETcorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MutagMETcorrection*) (soff))->~G__TMutagMETcorrection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_905_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MutagMETcorrection* dest = (MutagMETcorrection*) G__getstructoffset();
   *dest = *(MutagMETcorrection*) libp->para[0].ref;
   const MutagMETcorrection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HObjectSelector */
static int G__AnalysisDict_906_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HObjectSelector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HObjectSelector[n];
     } else {
       p = new((void*) gvp) HObjectSelector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HObjectSelector;
     } else {
       p = new((void*) gvp) HObjectSelector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_HObjectSelector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HObjectSelector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HObjectSelector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HObjectSelector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HObjectSelector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HObjectSelector*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HObjectSelector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HObjectSelector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HObjectSelector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HObjectSelector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->checkTriggers(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(vector<bool>*) libp->para[2].ref, (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (bool) G__int(libp->para[5])
, *(bool*) G__Boolref(&libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->elecTrigMatch((MTree::Electron*) G__int(libp->para[0]), *((vector<MTree::TriggerObject*>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->muonTrigHypo(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->muonTrigMatch((MTree::Muon*) G__int(libp->para[0]), *((vector<MTree::TriggerObject*>*) G__int(libp->para[1]))
, *((vector<MTree::L1TriggerROI*>*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getTrigSF(*((vector<MTree::Lepton*>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->selectElectrons(
(bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *(vector<MTree::Electron*>*) libp->para[3].ref
, *(double*) G__Doubleref(&libp->para[4]), *((vector<MTree::TriggerObject*>*) G__int(libp->para[5]))
, *((vector<MTree::Muon*>*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<MTree::Electron*>* pobj;
         vector<MTree::Electron*> xobj = ((HObjectSelector*) G__getstructoffset())->getFEBElectrons();
         pobj = new vector<MTree::Electron*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->allElecsPassFEB((int) G__int(libp->para[0]), *((vector<MTree::Electron*>*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->selectMuons(
(bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), *(vector<MTree::Muon*>*) libp->para[3].ref
, *(double*) G__Doubleref(&libp->para[4]), *((vector<MTree::TriggerObject*>*) G__int(libp->para[5]))
, *((vector<MTree::L1TriggerROI*>*) G__int(libp->para[6])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->selectJets((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), *(vector<MTree::Jet*>*) libp->para[3].ref
, *((vector<MTree::Muon*>*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<MTree::Jet*>* pobj;
         vector<MTree::Jet*> xobj = ((HObjectSelector*) G__getstructoffset())->getFEBJets();
         pobj = new vector<MTree::Jet*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->badOrUglyJet((MTree::Jet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->getETrigPass((bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HObjectSelector*) G__getstructoffset())->getMTrigPass((bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getDelMuonPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getDelMuonPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getDelElecPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getDelElecPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getDelJetPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HObjectSelector*) G__getstructoffset())->getDelJetPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HObjectSelector*) G__getstructoffset())->getECutflow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HObjectSelector*) G__getstructoffset())->getMCutflow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HObjectSelector*) G__getstructoffset())->getJCutflow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((HObjectSelector*) G__getstructoffset())->getMuTagCorMet(*((const TLorentzVector*) G__int(libp->para[0])));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_906_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HObjectSelector*) G__getstructoffset())->initJESTool();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HObjectSelector G__THObjectSelector;
static int G__AnalysisDict_906_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HObjectSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HObjectSelector*) (soff+(sizeof(HObjectSelector)*i)))->~G__THObjectSelector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HObjectSelector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HObjectSelector*) (soff))->~G__THObjectSelector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CutflowClass */
static int G__AnalysisDict_931_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CutflowClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CutflowClass[n];
     } else {
       p = new((void*) gvp) CutflowClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CutflowClass;
     } else {
       p = new((void*) gvp) CutflowClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_931_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CutflowClass*) G__getstructoffset())->setChannels(*(vector<std::string>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_931_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CutflowClass*) G__getstructoffset())->addEvent((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, *(vector<std::string>*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_931_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CutflowClass*) G__getstructoffset())->getNumCutflows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_931_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CutflowClass*) G__getstructoffset())->getXSecCutflows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_931_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CutflowClass*) G__getstructoffset())->printXSecCheck();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_931_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CutflowClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CutflowClass(*(CutflowClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CutflowClass G__TCutflowClass;
static int G__AnalysisDict_931_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CutflowClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CutflowClass*) (soff+(sizeof(CutflowClass)*i)))->~G__TCutflowClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CutflowClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CutflowClass*) (soff))->~G__TCutflowClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_931_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CutflowClass* dest = (CutflowClass*) G__getstructoffset();
   *dest = *(CutflowClass*) libp->para[0].ref;
   const CutflowClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CutlistClass */
static int G__AnalysisDict_946_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CutlistClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CutlistClass[n];
     } else {
       p = new((void*) gvp) CutlistClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CutlistClass;
     } else {
       p = new((void*) gvp) CutlistClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_946_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CutlistClass*) G__getstructoffset())->addEvent((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_946_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CutlistClass*) G__getstructoffset())->printLists(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_946_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CutlistClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CutlistClass(*(CutlistClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CutlistClass G__TCutlistClass;
static int G__AnalysisDict_946_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CutlistClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CutlistClass*) (soff+(sizeof(CutlistClass)*i)))->~G__TCutlistClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CutlistClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CutlistClass*) (soff))->~G__TCutlistClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_946_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CutlistClass* dest = (CutlistClass*) G__getstructoffset();
   *dest = *(CutlistClass*) libp->para[0].ref;
   const CutlistClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HHistosClass */
static int G__AnalysisDict_954_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHistosClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HHistosClass[n];
     } else {
       p = new((void*) gvp) HHistosClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HHistosClass;
     } else {
       p = new((void*) gvp) HHistosClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_954_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHistosClass*) G__getstructoffset())->addEvent(
(double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, *(vector<std::string>*) libp->para[2].ref, *(vector<MTree::Lepton*>*) libp->para[3].ref
, *(vector<MTree::Jet*>*) libp->para[4].ref, (MTree::MissingET*) G__int(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_954_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HHistosClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HHistosClass(*(HHistosClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HHistosClass G__THHistosClass;
static int G__AnalysisDict_954_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HHistosClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HHistosClass*) (soff+(sizeof(HHistosClass)*i)))->~G__THHistosClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HHistosClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HHistosClass*) (soff))->~G__THHistosClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_954_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHistosClass* dest = (HHistosClass*) G__getstructoffset();
   *dest = *(HHistosClass*) libp->para[0].ref;
   const HHistosClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CutCodeClass */
static int G__AnalysisDict_966_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CutCodeClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CutCodeClass[n];
     } else {
       p = new((void*) gvp) CutCodeClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CutCodeClass;
     } else {
       p = new((void*) gvp) CutCodeClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_966_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CutCodeClass*) G__getstructoffset())->getPtll(*(vector<MTree::Lepton*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_966_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CutCodeClass*) G__getstructoffset())->getPtTotal(*(vector<MTree::Lepton*>*) libp->para[0].ref, *(vector<MTree::Jet*>*) libp->para[1].ref
, (MTree::MissingET*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_966_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CutCodeClass*) G__getstructoffset())->getTauTauMass(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_966_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((CutCodeClass*) G__getstructoffset())->getMT(*(vector<MTree::Lepton*>*) libp->para[0].ref, (MTree::MissingET*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_966_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CutCodeClass*) G__getstructoffset())->failJetPtSV0(*(vector<MTree::Jet*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_966_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CutCodeClass*) G__getstructoffset())->failThirdCentralJet(*(vector<MTree::Jet*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_966_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CutCodeClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CutCodeClass(*(CutCodeClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CutCodeClass G__TCutCodeClass;
static int G__AnalysisDict_966_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CutCodeClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CutCodeClass*) (soff+(sizeof(CutCodeClass)*i)))->~G__TCutCodeClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CutCodeClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CutCodeClass*) (soff))->~G__TCutCodeClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_966_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CutCodeClass* dest = (CutCodeClass*) G__getstructoffset();
   const CutCodeClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ZControlClass */
static int G__AnalysisDict_967_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ZControlClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ZControlClass[n];
     } else {
       p = new((void*) gvp) ZControlClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ZControlClass;
     } else {
       p = new((void*) gvp) ZControlClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_967_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZControlClass*) G__getstructoffset())->addEvent(
*((string*) G__int(libp->para[0])), *((vector<MTree::Lepton*>*) G__int(libp->para[1]))
, *((vector<MTree::Jet*>*) G__int(libp->para[2])), (MTree::MissingET*) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_967_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZControlClass*) G__getstructoffset())->printRegions(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_967_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ZControlClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ZControlClass(*(ZControlClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ZControlClass G__TZControlClass;
static int G__AnalysisDict_967_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ZControlClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ZControlClass*) (soff+(sizeof(ZControlClass)*i)))->~G__TZControlClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ZControlClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ZControlClass*) (soff))->~G__TZControlClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_967_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ZControlClass* dest = (ZControlClass*) G__getstructoffset();
   *dest = *(ZControlClass*) libp->para[0].ref;
   const ZControlClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WWEventClass */
static int G__AnalysisDict_975_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WWEventClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WWEventClass[n];
     } else {
       p = new((void*) gvp) WWEventClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WWEventClass;
     } else {
       p = new((void*) gvp) WWEventClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_975_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WWEventClass*) G__getstructoffset())->printEvent(
(MTree::EventInfo*) G__int(libp->para[0]), *((vector<MTree::Lepton*>*) G__int(libp->para[1]))
, *((vector<MTree::Jet*>*) G__int(libp->para[2])), (MTree::MissingET*) G__int(libp->para[3])
, (MTree::MissingET*) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_975_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WWEventClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WWEventClass(*(WWEventClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WWEventClass G__TWWEventClass;
static int G__AnalysisDict_975_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WWEventClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WWEventClass*) (soff+(sizeof(WWEventClass)*i)))->~G__TWWEventClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WWEventClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WWEventClass*) (soff))->~G__TWWEventClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_975_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WWEventClass* dest = (WWEventClass*) G__getstructoffset();
   const WWEventClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ggFReweighting */
static int G__AnalysisDict_981_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ggFReweighting* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ggFReweighting(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) ggFReweighting(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ggFReweighting(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) ggFReweighting(
*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ggFReweighting(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ggFReweighting(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((ggFReweighting*) G__getstructoffset())->initialize(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((ggFReweighting*) G__getstructoffset())->initialize(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ggFReweighting*) G__getstructoffset())->higgsMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ggFReweighting*) G__getstructoffset())->option();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ggFReweighting*) G__getstructoffset())->generator();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ggFReweighting*) G__getstructoffset())->getWeight((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ggFReweighting*) G__getstructoffset())->getStatError((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<double,double>* pobj;
         pair<double,double> xobj = ((ggFReweighting*) G__getstructoffset())->getWeightAndStatError((double) G__double(libp->para[0]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_981_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ggFReweighting*) G__getstructoffset())->printInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_981_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ggFReweighting* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ggFReweighting(*(ggFReweighting*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ggFReweighting G__TggFReweighting;
static int G__AnalysisDict_981_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ggFReweighting*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ggFReweighting*) (soff+(sizeof(ggFReweighting)*i)))->~G__TggFReweighting();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ggFReweighting*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ggFReweighting*) (soff))->~G__TggFReweighting();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_981_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ggFReweighting* dest = (ggFReweighting*) G__getstructoffset();
   *dest = *(ggFReweighting*) libp->para[0].ref;
   const ggFReweighting& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HWWAnalysis */
static int G__AnalysisDict_1002_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HWWAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HWWAnalysis[n];
     } else {
       p = new((void*) gvp) HWWAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HWWAnalysis;
     } else {
       p = new((void*) gvp) HWWAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HWWAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HWWAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HWWAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HWWAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HWWAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HWWAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HWWAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HWWAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HWWAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HWWAnalysis*) G__getstructoffset())->h2wwCutflow(*((string*) G__int(libp->para[0])), (TFile*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HWWAnalysis*) G__getstructoffset())->Initialize(*((string*) G__int(libp->para[0])), (TFile*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisDict_1002_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HWWAnalysis*) G__getstructoffset())->fillPVrefs(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisDict_1002_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HWWAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HWWAnalysis(*(HWWAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HWWAnalysis G__THWWAnalysis;
static int G__AnalysisDict_1002_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HWWAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HWWAnalysis*) (soff+(sizeof(HWWAnalysis)*i)))->~G__THWWAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HWWAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HWWAnalysis*) (soff))->~G__THWWAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisDict_1002_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HWWAnalysis* dest = (HWWAnalysis*) G__getstructoffset();
   *dest = *(HWWAnalysis*) libp->para[0].ref;
   const HWWAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TPileupReweighting */

/* BaseAnalysis */

/* SmearingClass */

/* EnergyRescaler */

/* egammaSFclass */

/* MuonEfficiencyScaleFactor */

/* EtaPhiBinning */

/* StacoCBScaleEffFactors */

/* egammaOQ */

/* MutagMETcorrection */

/* HObjectSelector */

/* CutflowClass */

/* CutlistClass */

/* HHistosClass */

/* CutCodeClass */

/* ZControlClass */

/* WWEventClass */

/* ggFReweighting */

/* HWWAnalysis */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAnalysisDict {
 public:
  G__Sizep2memfuncAnalysisDict(): p(&G__Sizep2memfuncAnalysisDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAnalysisDict::*p)();
};

size_t G__get_sizep2memfuncAnalysisDict()
{
  G__Sizep2memfuncAnalysisDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAnalysisDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting))) {
     TPileupReweighting *G__Lderived;
     G__Lderived=(TPileupReweighting*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting),G__get_linked_tagnum(&G__AnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting),G__get_linked_tagnum(&G__AnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis))) {
     BaseAnalysis *G__Lderived;
     G__Lderived=(BaseAnalysis*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis),G__get_linked_tagnum(&G__AnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors))) {
     StacoCBScaleEffFactors *G__Lderived;
     G__Lderived=(StacoCBScaleEffFactors*)0x1000;
     {
       MuonEfficiencyScaleFactor *G__Lpbase=(MuonEfficiencyScaleFactor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors),G__get_linked_tagnum(&G__AnalysisDictLN_MuonEfficiencyScaleFactor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ))) {
     egammaOQ *G__Lderived;
     G__Lderived=(egammaOQ*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ),G__get_linked_tagnum(&G__AnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ),G__get_linked_tagnum(&G__AnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis))) {
     HWWAnalysis *G__Lderived;
     G__Lderived=(HWWAnalysis*)0x1000;
     {
       BaseAnalysis *G__Lpbase=(BaseAnalysis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis),G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis),G__get_linked_tagnum(&G__AnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAnalysisDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__AnalysisDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Root::TLumiBlockRange>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGoodRun>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Root::TGoodRun>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Root::TGoodRun,less<int> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Root::TGoodRun>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TMsgLevel,std::string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Root::TMsgLevel,string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Root::TMsgLevel,string,less<Root::TMsgLevel> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGoodRunsList>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Root::TGoodRunsList>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH2D*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOTH2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH2D*,less<int> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOTH2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<std::string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CorrType",117,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescalercLcLCorrType),0,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<calibMap>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EnergyRescaler::calibMap>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MTree::TriggerObject*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MTree::L1TriggerROI*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MTree::Lepton*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MTree::Electron*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MTree::Muon*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MTree::Jet*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1D*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1D*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1D*,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<double> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<std::string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<string,allocator<string> >,less<int> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1D*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisDictLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<TH1D*> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TH1D*,allocator<TH1D*> > >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TH1D*,allocator<TH1D*> >,less<int> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH2D*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH2D*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH2D*,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<int> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObject*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*>",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObject*,less<string> >",117,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TPileupReweighting */
static void G__setup_memvarTPileupReweighting(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting));
   { TPileupReweighting *p; p=(TPileupReweighting*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TFile),-1,-1,4,"m_dataRootFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1F),-1,-1,4,"m_dataRootHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TFile),-1,-1,4,"m_mcRootFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1F),-1,-1,4,"m_mcRootHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BaseAnalysis */
static void G__setup_memvarBaseAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis));
   { BaseAnalysis *p; p=(BaseAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_debug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_electrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_muons=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_caloMuons=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_jets=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_primaryVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_truthParticles=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_L1MuonTriggerROIs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_MTreecLcLMissingET),-1,-1,2,"_missingET=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_missingETTerms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_MTreecLcLEventInfo),-1,-1,2,"_eventInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_MTreecLcLTrigger),-1,-1,2,"_trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClonesArray),-1,-1,2,"_triggerObjects=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<std::string> >"),-1,4,"_fileNameMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"_crossSections=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"_sampleWeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,4,"_setNumbers=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SmearingClass */
static void G__setup_memvarSmearingClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_SmearingClass));
   { SmearingClass *p; p=(SmearingClass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->gRand)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TRandom3),-1,-1,1,"gRand=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptms)-(long)(p)),100,0,0,-1,-1,-1,1,"ptms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptid)-(long)(p)),100,0,0,-1,-1,-1,1,"ptid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptcb)-(long)(p)),100,0,0,-1,-1,-1,1,"ptcb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vms)-(long)(p)),100,0,0,-1,-1,-1,1,"vms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vid)-(long)(p)),100,0,0,-1,-1,-1,1,"vid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->corr)-(long)(p)),100,0,0,-1,-1,-1,1,"corr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearMS)-(long)(p)),100,0,0,-1,-1,-1,1,"smearMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearID)-(long)(p)),100,0,0,-1,-1,-1,1,"smearID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearCB)-(long)(p)),100,0,0,-1,-1,-1,1,"smearCB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->useTan2)-(long)(p)),103,0,0,-1,-1,-1,1,"useTan2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,1,"detType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detRegion)-(long)(p)),105,0,0,-1,-1,-1,1,"detRegion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeV)-(long)(p)),100,0,0,-1,-1,-1,1,"GeV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g1)-(long)(p)),100,0,0,-1,-1,-1,1,"g1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g2)-(long)(p)),100,0,0,-1,-1,-1,1,"g2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g3)-(long)(p)),100,0,0,-1,-1,-1,1,"g3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g4)-(long)(p)),100,0,0,-1,-1,-1,1,"g4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wMS)-(long)(p)),100,0,0,-1,-1,-1,1,"wMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wID)-(long)(p)),100,0,0,-1,-1,-1,1,"wID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->useScale)-(long)(p)),103,0,0,-1,-1,-1,1,"useScale=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,1,"InValues=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,2,"Fdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"scale_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"scaleSyst_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"E_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"E_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"E_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"E_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"E_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"S_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"S_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"S_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"S_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"S_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"MC_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"MC_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"MC_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"MC_p0_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"MC_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"MC_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatC0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatC1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatC2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatC3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatC4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatC5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatTanC0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatTanC1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatTanC2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatTanC3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatTanC4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"CorrMatTanC5=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EnergyRescaler */
static void G__setup_memvarEnergyRescaler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler));
   { EnergyRescaler *p; p=(EnergyRescaler*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescalercLcLCorrType),-1,-2,1,"NOMINAL=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescalercLcLCorrType),-1,-2,1,"ERR_DOWN=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescalercLcLCorrType),-1,-2,1,"ERR_UP=2",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,4,"corr_version=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TRandom3),-1,-1,4,"m_random3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR),G__defined_typename("vector<calibMap>"),-1,4,"corrVec=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* egammaSFclass */
static void G__setup_memvaregammaSFclass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass));
   { egammaSFclass *p; p=(egammaSFclass*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->m_nEtabins)-(long)(p)),105,0,0,-1,-1,-1,1,"m_nEtabins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_Etabins)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"m_Etabins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_nETbins)-(long)(p)),105,0,0,-1,-1,-1,1,"m_nETbins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_ETbins)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"m_ETbins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_nFineEtabins)-(long)(p)),105,0,0,-1,-1,-1,1,"m_nFineEtabins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_FineEtabins)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"m_FineEtabins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_nETbinsFullRange)-(long)(p)),105,0,0,-1,-1,-1,1,"m_nETbinsFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_ETbinsFullRange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"m_ETbinsFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel15Loose3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel15Loose3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel15Loose3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel15Loose3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel15Medium3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel15Medium3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel15Medium3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel15Medium3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel15Tight3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel15Tight3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel15Tight3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel15Tight3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel15Loose2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel15Loose2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel15Loose2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel15Loose2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel15Medium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel15Medium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel15Medium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel15Medium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel15Tight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel15Tight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel15Tight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel15Tight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel16Medium3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel16Medium3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel16Medium3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel16Medium3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel16Tight3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel16Tight3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel16Tight3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel16Tight3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel16Medium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel16Medium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel16Medium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel16Medium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel16Tight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel16Tight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel16Tight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel16Tight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166Data2010Medium3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166Data2010Medium3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166Data2010Medium3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166Data2010Medium3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166Data2010Tight3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166Data2010Tight3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166Data2010Tight3050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166Data2010Tight3050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166Data2010Medium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166Data2010Medium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166Data2010Medium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166Data2010Medium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166Data2010Tight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166Data2010Tight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166Data2010Tight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166Data2010Tight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166EPSMedium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166EPSMedium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166EPSMedium2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166EPSMedium2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166EPSTight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166EPSTight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166EPSTight2050)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166EPSTight2050=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166EPSMediumLowET)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166EPSMediumLowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166EPSMediumLowET)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166EPSMediumLowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166EPSTightLowET)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166EPSTightLowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166EPSTightLowET)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166EPSTightLowET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166EPSTrigger)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166EPSTrigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166EPSTrigger)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166EPSTrigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efficienciesRel166EPSRecoTrkQual)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"efficienciesRel166EPSRecoTrkQual=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesRel166EPSRecoTrkQual)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesRel166EPSRecoTrkQual=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsMediumRel16)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsMediumRel16=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsMediumRel16)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsMediumRel16=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsTightRel16)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsTightRel16=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsTightRel16)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsTightRel16=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsMediumRel166Data2010)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsMediumRel166Data2010=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsMediumRel166Data2010)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsMediumRel166Data2010=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsTightRel166Data2010)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsTightRel166Data2010=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsTightRel166Data2010)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsTightRel166Data2010=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsMediumRel166EPS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsMediumRel166EPS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsMediumRel166EPS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsMediumRel166EPS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsTightRel166EPS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsTightRel166EPS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsTightRel166EPS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsTightRel166EPS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsMediumRel166EPSFullRange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsMediumRel166EPSFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsMediumRel166EPSFullRange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsMediumRel166EPSFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ETCorrectionsTightRel166EPSFullRange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"ETCorrectionsTightRel166EPSFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->uncertaintiesETCorrectionsTightRel166EPSFullRange)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"uncertaintiesETCorrectionsTightRel166EPSFullRange=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonEfficiencyScaleFactor */
static void G__setup_memvarMuonEfficiencyScaleFactor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_MuonEfficiencyScaleFactor));
   { MuonEfficiencyScaleFactor *p; p=(MuonEfficiencyScaleFactor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EtaPhiBinning */
static void G__setup_memvarEtaPhiBinning(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning));
   { EtaPhiBinning *p; p=(EtaPhiBinning*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binUNKNOWN=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"bin1BARRELLG=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"bin1BARRELSM=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"bin2BARREL=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binFEET=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binTRANSITION=5",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binENDCAPLG=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binENDCAPSM=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binBEE=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binFORWARDLG=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion),-1,-2,1,"binFORWARDSM=10",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StacoCBScaleEffFactors */
static void G__setup_memvarStacoCBScaleEffFactors(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors));
   { StacoCBScaleEffFactors *p; p=(StacoCBScaleEffFactors*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_uncertainty_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_C_high_pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_uncertainty_C_high_pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_C_low_pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_uncertainty_C_low_pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_A_periodB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_uncertainty_A_periodB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_C_periodB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_scale_factor_uncertainty_C_periodB=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"m_last_run_periodB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning),-1,-1,4,"m_eta_phi_binning=",0,"auxiliary binning class");
   }
   G__tag_memvar_reset();
}


   /* egammaOQ */
static void G__setup_memvaregammaOQ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ));
   { egammaOQ *p; p=(egammaOQ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MutagMETcorrection */
static void G__setup_memvarMutagMETcorrection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection));
   { MutagMETcorrection *p; p=(MutagMETcorrection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"GeV=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TLorentzVector),-1,-1,4,"m_sumtl=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HObjectSelector */
static void G__setup_memvarHObjectSelector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HObjectSelector));
   { HObjectSelector *p; p=(HObjectSelector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"eCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"mCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"jCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passE20trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passE22trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passM11trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passM18trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passM40trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passM18mtrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"passM40mtrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dpxMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dpyMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"eScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dpxElec=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dpyElec=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dpxJet=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dpyJet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR),G__defined_typename("vector<MTree::Electron*>"),-1,4,"febElecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR),G__defined_typename("vector<MTree::Jet*>"),-1,4,"febJets=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_SmearingClass),-1,-1,4,"mcp_smear=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler),-1,-1,4,"eRescaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass),-1,-1,4,"eSFactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors),-1,-1,4,"mSFactor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_JESUncertaintyProvider),-1,-1,4,"myJES=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ),-1,-1,4,"eOQcheck=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection),-1,-1,4,"metCorrect=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,4,"filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"outfile=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CutflowClass */
static void G__setup_memvarCutflowClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass));
   { CutflowClass *p; p=(CutflowClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"mapN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"mapC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<double> >"),-1,4,"checkC=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CutlistClass */
static void G__setup_memvarCutlistClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass));
   { CutlistClass *p; p=(CutlistClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<std::string> >"),-1,4,"book=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HHistosClass */
static void G__setup_memvarHHistosClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass));
   { HHistosClass *p; p=(HHistosClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"ee0jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"ee1jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"ee2jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"em0jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"em1jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"em2jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"mm0jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"mm1jet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<TH1D*> >"),-1,4,"mm2jet=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CutCodeClass */
static void G__setup_memvarCutCodeClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass));
   { CutCodeClass *p; p=(CutCodeClass*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ZControlClass */
static void G__setup_memvarZControlClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass));
   { ZControlClass *p; p=(ZControlClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass),-1,-1,4,"code=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"numberA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"numberB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"numberC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,4,"numberD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH2D),-1,-1,4,"ttmet1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH2D),-1,-1,4,"ttmll1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH2D),-1,-1,4,"ttmet2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH2D),-1,-1,4,"ttmll2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"metlpv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"methpv=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"cMetAft=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"dMetAft=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"metAmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"mllAmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"metBmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"mllBmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"metCmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"mllCmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"metDmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"mllDmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH2D*>"),-1,4,"mllmet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH2D*>"),-1,4,"npvmet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH2D*>"),-1,4,"mumet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH2D*>"),-1,4,"npvnjet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"breg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"dreg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"bscan=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"dscan=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"bwidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"dwidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"diffMetB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"diffMetD=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"npvmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"metlPV=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<std::string,TH1D*>"),-1,4,"methPV=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WWEventClass */
static void G__setup_memvarWWEventClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass));
   { WWEventClass *p; p=(WWEventClass*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ggFReweighting */
static void G__setup_memvarggFReweighting(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting));
   { ggFReweighting *p; p=(ggFReweighting*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,4,"_generator=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_higgsMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"_weightHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,4,"_inputFilePath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("set<std::string>"),-1,4,"_generatorLib=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"_higgsMassLib=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_string),-1,-1,4,"_option=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HWWAnalysis */
static void G__setup_memvarHWWAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis));
   { HWWAnalysis *p; p=(HWWAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass),-1,-1,4,"code=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_HObjectSelector),-1,-1,4,"selector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass),-1,-1,4,"cutflow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass),-1,-1,4,"cutlist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass),-1,-1,4,"histos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass),-1,-1,4,"zregion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass),-1,-1,4,"wwevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting),-1,-1,4,"reweight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_AnalysiscLcLCalibrationDataInterfaceROOT),-1,-1,4,"calib=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_AnalysiscLcLCalibrationDataVariables),-1,-1,4,"ajet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting),-1,-1,4,"pileup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_MTreecLcLMissingET),-1,-1,4,"metForWW=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_MTreecLcLMissingET),-1,-1,4,"metRel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"febEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"badEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"febJs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"badJs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"Ptll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisDictLN_TH1D),-1,-1,4,"Mll=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAnalysisDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTPileupReweighting(void) {
   /* TPileupReweighting */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting));
   G__memfunc_setup("TPileupReweighting",1856,G__AnalysisDict_857_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__AnalysisDict_857_0_2, 105, -1, -1, 0, 4, 1, 1, 0, 
"u 'TString' - 11 - dataRootFileName u 'TString' - 11 - dataRootHistName "
"u 'TString' - 11 - mcRootFileName u 'TString' - 11 - mcRootHistName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPileupWeight",1559,G__AnalysisDict_857_0_3, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - mu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPileupWeight",1559,G__AnalysisDict_857_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - mu f - - 1 - eventWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normalizeHistogram",1919,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "U 'TH1F' - 0 - histo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AnalysisDict_857_0_6, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPileupReweighting::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AnalysisDict_857_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPileupReweighting::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AnalysisDict_857_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPileupReweighting::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AnalysisDict_857_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPileupReweighting::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AnalysisDict_857_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AnalysisDict_857_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPileupReweighting::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AnalysisDict_857_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPileupReweighting::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AnalysisDict_857_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPileupReweighting::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AnalysisDict_857_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPileupReweighting::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPileupReweighting", 1856, G__AnalysisDict_857_0_18, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting), -1, 0, 1, 1, 1, 0, "u 'TPileupReweighting' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPileupReweighting", 1982, G__AnalysisDict_857_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_857_0_20, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_TPileupReweighting), -1, 1, 1, 1, 1, 0, "u 'TPileupReweighting' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBaseAnalysis(void) {
   /* BaseAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis));
   G__memfunc_setup("BaseAnalysis",1215,G__AnalysisDict_873_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChain",771,G__AnalysisDict_873_0_2, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TChain), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - chainName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChain",771,G__AnalysisDict_873_0_3, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TChain), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 0 - chainNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convertNameToNum",1653,G__AnalysisDict_873_0_4, 117, G__get_linked_tagnum(&G__AnalysisDictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBranchAddresses",1848,G__AnalysisDict_873_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TChain' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrossSection",1535,G__AnalysisDict_873_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - chainName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnownChains",1411,G__AnalysisDict_873_0_7, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateSampleWeight",2136,G__AnalysisDict_873_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAllSamples",1294,G__AnalysisDict_873_0_9, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAllNames",1069,G__AnalysisDict_873_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("includeOverflow",1592,G__AnalysisDict_873_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("includeUnderflow",1690,G__AnalysisDict_873_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeNegativeBins",1869,G__AnalysisDict_873_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1D' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("efficiency_symm",1594,G__AnalysisDict_873_0_14, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - m d - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eff_pos_err",1162,G__AnalysisDict_873_0_15, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - m d - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eff_neg_err",1138,G__AnalysisDict_873_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - m d - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("poisson_up",1103,G__AnalysisDict_873_0_17, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("poisson_down",1314,G__AnalysisDict_873_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfficiencyGraph",1799,G__AnalysisDict_873_0_19, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TGraphAsymmErrors), -1, 0, 2, 1, 1, 0, 
"U 'TH1D' - 0 - num U 'TH1D' - 0 - den", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebug",787,G__AnalysisDict_873_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AnalysisDict_873_0_21, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BaseAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AnalysisDict_873_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BaseAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AnalysisDict_873_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BaseAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AnalysisDict_873_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BaseAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AnalysisDict_873_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AnalysisDict_873_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BaseAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AnalysisDict_873_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BaseAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AnalysisDict_873_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BaseAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AnalysisDict_873_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BaseAnalysis::DeclFileLine) ), 0);
   G__memfunc_setup("GetSampleWeight",1514,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "u 'string' - 0 - chainName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("splitString",1187,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 2, 0, "u 'string' - 0 - phrase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeDouble",1017,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 0, "u 'string' - 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - chainName u 'string' - 0 - dataset "
"u 'string' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAllFiles",1045,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillCrossSections",1753,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillSampleWeights",1732,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillSetNumbers",1423,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BaseAnalysis", 1215, G__AnalysisDict_873_0_41, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis), -1, 0, 1, 1, 1, 0, "u 'BaseAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BaseAnalysis", 1341, G__AnalysisDict_873_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_873_0_43, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_BaseAnalysis), -1, 1, 1, 1, 1, 0, "u 'BaseAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSmearingClass(void) {
   /* SmearingClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_SmearingClass));
   G__memfunc_setup("SmearingClass",1324,G__AnalysisDict_890_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_SmearingClass), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 '\"\"' Dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__AnalysisDict_890_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 '\"\"' Dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finalize",818,G__AnalysisDict_890_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__AnalysisDict_890_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G__AnalysisDict_890_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G__AnalysisDict_890_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"i - - 0 '680049' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseTan2",642,G__AnalysisDict_890_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseGeV",559,G__AnalysisDict_890_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseScale",789,G__AnalysisDict_890_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillValues",1015,G__AnalysisDict_890_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintValues",1149,G__AnalysisDict_890_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__AnalysisDict_890_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__AnalysisDict_890_0_13, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__AnalysisDict_890_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Smearing",822,G__AnalysisDict_890_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Combine",701,G__AnalysisDict_890_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorMatrix",1151,G__AnalysisDict_890_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMS",356,G__AnalysisDict_890_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMS",356,G__AnalysisDict_890_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTID",337,G__AnalysisDict_890_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTID",337,G__AnalysisDict_890_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTCB",329,G__AnalysisDict_890_0_22, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTCB",329,G__AnalysisDict_890_0_23, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMS",243,G__AnalysisDict_890_0_24, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SID",224,G__AnalysisDict_890_0_25, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SCB",216,G__AnalysisDict_890_0_26, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VMS",246,G__AnalysisDict_890_0_27, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VID",227,G__AnalysisDict_890_0_28, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Corr",406,G__AnalysisDict_890_0_29, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSUP",325,G__AnalysisDict_890_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSUP",325,G__AnalysisDict_890_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSLOW",402,G__AnalysisDict_890_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSLOW",402,G__AnalysisDict_890_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDUP",306,G__AnalysisDict_890_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDUP",306,G__AnalysisDict_890_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDLOW",383,G__AnalysisDict_890_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDLOW",383,G__AnalysisDict_890_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTVar",461,G__AnalysisDict_890_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - - u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTVar",461,G__AnalysisDict_890_0_39, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - - u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sign",401,G__AnalysisDict_890_0_40, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptms_orig",980,G__AnalysisDict_890_0_41, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptid_orig",961,G__AnalysisDict_890_0_42, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptcb_orig",953,G__AnalysisDict_890_0_43, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETA",218,G__AnalysisDict_890_0_44, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetRegion",897,G__AnalysisDict_890_0_45, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SmearingClass", 1450, G__AnalysisDict_890_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEnergyRescaler(void) {
   /* EnergyRescaler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler));
   G__memfunc_setup("EnergyRescaler",1435,G__AnalysisDict_891_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readCalibConstants",1844,G__AnalysisDict_891_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyEnergyCorrectionGeV",2474,G__AnalysisDict_891_0_3, 100, -1, -1, 0, 6, 1, 1, 8, 
"d - - 0 - cl_eta d - - 0 - cl_phi "
"d - - 0 - uncorr_energy d - - 0 - et "
"i - - 0 'NOMINAL' value u 'string' - 0 '\"ELECTRON\"' part_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyEnergyCorrectionMeV",2480,G__AnalysisDict_891_0_4, 100, -1, -1, 0, 6, 1, 1, 8, 
"d - - 0 - cl_eta d - - 0 - cl_phi "
"d - - 0 - uncorr_energy d - - 0 - et "
"i - - 0 'NOMINAL' value u 'string' - 0 '\"ELECTRON\"' part_type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useDefaultCalibConstants",2474,G__AnalysisDict_891_0_5, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"2011\"' corr_version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRandomSeed",1294,G__AnalysisDict_891_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSmearingCorrectionGeV",2448,G__AnalysisDict_891_0_7, 100, -1, -1, 0, 5, 1, 1, 8, 
"d - - 0 - eta d - - 0 - energy "
"i - - 0 'NOMINAL' value g - - 0 'true' mc_withCT "
"u 'string' - 0 '\"2011\"' corr_version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSmearingCorrectionMeV",2454,G__AnalysisDict_891_0_8, 100, -1, -1, 0, 5, 1, 1, 8, 
"d - - 0 - eta d - - 0 - energy "
"i - - 0 'NOMINAL' value g - - 0 'true' mc_withCT "
"u 'string' - 0 '\"2011\"' corr_version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printMap",843,G__AnalysisDict_891_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrorGeV",1100,G__AnalysisDict_891_0_10, 121, -1, -1, 0, 7, 1, 1, 8, 
"d - - 0 - cl_eta d - - 0 - cl_et "
"d - - 1 - er_up d - - 1 - er_do "
"u 'string' - 0 '\"ELECTRON\"' part_type g - - 0 'true' withXMAT "
"g - - 0 'true' withPS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrorMeV",1106,G__AnalysisDict_891_0_11, 121, -1, -1, 0, 7, 1, 1, 8, 
"d - - 0 - cl_eta d - - 0 - cl_et "
"d - - 1 - er_up d - - 1 - er_do "
"u 'string' - 0 '\"ELECTRON\"' part_type g - - 0 'true' withXMAT "
"g - - 0 'true' withPS", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EnergyRescaler", 1435, G__AnalysisDict_891_0_12, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler), -1, 0, 1, 1, 1, 0, "u 'EnergyRescaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EnergyRescaler", 1561, G__AnalysisDict_891_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_891_0_14, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_EnergyRescaler), -1, 1, 1, 1, 1, 0, "u 'EnergyRescaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncegammaSFclass(void) {
   /* egammaSFclass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass));
   G__memfunc_setup("egammaSFclass",1303,G__AnalysisDict_898_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etCorrection",1265,G__AnalysisDict_898_0_2, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 3, 1, 1, 0, 
"f - - 0 - ET i - - 0 - set "
"i - - 0 '4' rel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactor",1127,G__AnalysisDict_898_0_3, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 6, 1, 1, 0, 
"f - - 0 - eta f - - 0 - ET "
"i - - 0 - set i - - 0 '0' range "
"i - - 0 '4' rel g - - 0 'true' etcorrection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorLoose",1641,G__AnalysisDict_898_0_4, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 5, 1, 1, 0, 
"f - - 0 - eta f - - 0 '20000.' ET "
"i - - 0 '0' range i - - 0 '4' rel "
"g - - 0 'false' etcorrection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorMedium",1736,G__AnalysisDict_898_0_5, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 5, 1, 1, 0, 
"f - - 0 - eta f - - 0 '20000.' ET "
"i - - 0 '0' range i - - 0 '4' rel "
"g - - 0 'false' etcorrection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorTight",1639,G__AnalysisDict_898_0_6, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 5, 1, 1, 0, 
"f - - 0 - eta f - - 0 '20000.' ET "
"i - - 0 '0' range i - - 0 '4' rel "
"g - - 0 'false' etcorrection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorTrigger",1851,G__AnalysisDict_898_0_7, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 5, 1, 1, 0, 
"f - - 0 - eta f - - 0 '20000.' ET "
"i - - 0 '0' range i - - 0 '4' rel "
"g - - 0 'false' etcorrection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorRecoTrkQual",2228,G__AnalysisDict_898_0_8, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 5, 1, 1, 0, 
"f - - 0 - eta f - - 0 '20000.' ET "
"i - - 0 '0' range i - - 0 '4' rel "
"g - - 0 'false' etcorrection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorMediumETcorrected",2844,G__AnalysisDict_898_0_9, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 3, 1, 1, 0, 
"f - - 0 - eta f - - 0 - ET "
"i - - 0 '4' rel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorTightETcorrected",2747,G__AnalysisDict_898_0_10, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 3, 1, 1, 0, 
"f - - 0 - eta f - - 0 - ET "
"i - - 0 '4' rel", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("egammaSFclass", 1303, G__AnalysisDict_898_0_11, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass), -1, 0, 1, 1, 1, 0, "u 'egammaSFclass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~egammaSFclass", 1429, G__AnalysisDict_898_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_898_0_13, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_egammaSFclass), -1, 1, 1, 1, 1, 0, "u 'egammaSFclass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonEfficiencyScaleFactor(void) {
   /* MuonEfficiencyScaleFactor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_MuonEfficiencyScaleFactor));
   G__memfunc_setup("scaleFactor",1127,G__AnalysisDict_900_0_2, 100, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - tlv", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("scaleFactorUncertainty",2301,G__AnalysisDict_900_0_3, 100, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - tlv", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("scaleFactorSystematicUncertainty",3363,G__AnalysisDict_900_0_4, 100, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - tlv", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~MuonEfficiencyScaleFactor", 2649, G__AnalysisDict_900_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_900_0_6, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_MuonEfficiencyScaleFactor), -1, 1, 1, 1, 1, 0, "u 'MuonEfficiencyScaleFactor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEtaPhiBinning(void) {
   /* EtaPhiBinning */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning));
   G__memfunc_setup("EtaPhiBinning",1280,G__AnalysisDict_901_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bin",313,G__AnalysisDict_901_0_2, 105, -1, -1, 0, 1, 1, 1, 8, "U 'TLorentzVector' - 10 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("symmetricBin",1270,G__AnalysisDict_901_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "U 'TLorentzVector' - 10 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCoarseNSector",1627,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 8, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 8, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getECSector",1080,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 8, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EtaPhiBinning", 1280, G__AnalysisDict_901_0_7, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning), -1, 0, 1, 1, 1, 0, "u 'EtaPhiBinning' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EtaPhiBinning", 1406, G__AnalysisDict_901_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_901_0_9, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_EtaPhiBinning), -1, 1, 1, 1, 1, 0, "u 'EtaPhiBinning' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStacoCBScaleEffFactors(void) {
   /* StacoCBScaleEffFactors */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors));
   G__memfunc_setup("StacoCBScaleEffFactors",2122,G__AnalysisDict_903_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactor",1127,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - tlv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("scaleFactorUncertainty",2301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - tlv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("scaleFactor",1127,G__AnalysisDict_903_0_4, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'TLorentzVector' - 11 - tlv h - - 11 - run_nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorUncertainty",2301,G__AnalysisDict_903_0_5, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'TLorentzVector' - 11 - tlv h - - 11 - run_nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scaleFactorSystematicUncertainty",3363,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "u 'TLorentzVector' - 11 - tlv", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("StacoCBScaleEffFactors", 2122, G__AnalysisDict_903_0_7, (int) ('i'), 
G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors), -1, 0, 1, 1, 1, 0, "u 'StacoCBScaleEffFactors' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StacoCBScaleEffFactors", 2248, G__AnalysisDict_903_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_903_0_9, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_StacoCBScaleEffFactors), -1, 1, 1, 1, 1, 0, "u 'StacoCBScaleEffFactors' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncegammaOQ(void) {
   /* egammaOQ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ));
   G__memfunc_setup("egammaOQ",776,G__AnalysisDict_904_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ), -1, 0, 1, 1, 1, 0, "u 'string' - 0 '\"egammaOQ\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deadRegionS2",1143,G__AnalysisDict_904_0_2, 105, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - myEta d - - 0 - myPhi "
"d - - 0 - deltaEta d - - 0 - deltaPhi "
"i - - 0 - candidate g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkOQCluster",1408,G__AnalysisDict_904_0_3, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - runnumber d - - 0 - myEta "
"d - - 0 - myPhi i - - 0 - candidate "
"g - - 0 'false' syst g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkOQClusterElectron",2236,G__AnalysisDict_904_0_4, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - runnumber d - - 0 - myEta "
"d - - 0 - myPhi g - - 0 'false' syst "
"g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkOQClusterPhoton",2040,G__AnalysisDict_904_0_5, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - runnumber d - - 0 - myEta "
"d - - 0 - myPhi g - - 0 - conv "
"g - - 0 'false' syst g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkOQCluster",1408,G__AnalysisDict_904_0_6, 105, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - myEta d - - 0 - myPhi "
"i - - 0 - NetaCells i - - 0 - NphiCells "
"i - - 0 - candidate g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AnalysisDict_904_0_7, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&egammaOQ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AnalysisDict_904_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&egammaOQ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AnalysisDict_904_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&egammaOQ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AnalysisDict_904_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&egammaOQ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AnalysisDict_904_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AnalysisDict_904_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&egammaOQ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AnalysisDict_904_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&egammaOQ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AnalysisDict_904_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&egammaOQ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AnalysisDict_904_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&egammaOQ::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("egammaOQ", 776, G__AnalysisDict_904_0_19, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ), -1, 0, 1, 1, 1, 0, "u 'egammaOQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~egammaOQ", 902, G__AnalysisDict_904_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_904_0_21, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_egammaOQ), -1, 1, 1, 1, 1, 0, "u 'egammaOQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMutagMETcorrection(void) {
   /* MutagMETcorrection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection));
   G__memfunc_setup("MutagMETcorrection",1820,G__AnalysisDict_905_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection), -1, 0, 1, 1, 1, 0, "g - - 0 'false' inGeV", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__AnalysisDict_905_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMuon",712,G__AnalysisDict_905_0_3, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - - 10 - isLowPtReconstructed f - - 10 - pt "
"f - - 10 - eta f - - 10 - phi "
"f - - 10 - etcore f - - 10 - elossPar "
"f - - 10 - thetaTrk f - - 10 - ptcone20", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtMissCorrection",1965,G__AnalysisDict_905_0_4, 117, G__get_linked_tagnum(&G__AnalysisDictLN_TLorentzVector), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtMissCorrection",1965,G__AnalysisDict_905_0_5, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - - 1 - metc_et f - - 1 - metc_phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtMissCorrection",1965,G__AnalysisDict_905_0_6, 117, G__get_linked_tagnum(&G__AnalysisDictLN_TLorentzVector), -1, 0, 8, 1, 1, 0, 
"U 'vector<int,allocator<int> >' 'vector<int>' 10 - isLowPtReconstructed U 'vector<float,allocator<float> >' 'vector<float>' 10 - pt "
"U 'vector<float,allocator<float> >' 'vector<float>' 10 - eta U 'vector<float,allocator<float> >' 'vector<float>' 10 - phi "
"U 'vector<float,allocator<float> >' 'vector<float>' 10 - etcore U 'vector<float,allocator<float> >' 'vector<float>' 10 - elossPar "
"U 'vector<float,allocator<float> >' 'vector<float>' 10 - thetaTrk U 'vector<float,allocator<float> >' 'vector<float>' 10 - ptcone20", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtMissCorrection",1965,G__AnalysisDict_905_0_7, 117, G__get_linked_tagnum(&G__AnalysisDictLN_TLorentzVector), -1, 0, 8, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - isLowPtReconstructed u 'vector<float,allocator<float> >' 'vector<float>' 11 - pt "
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - eta u 'vector<float,allocator<float> >' 'vector<float>' 11 - phi "
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - etcore u 'vector<float,allocator<float> >' 'vector<float>' 11 - elossPar "
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - thetaTrk u 'vector<float,allocator<float> >' 'vector<float>' 11 - ptcone20", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtMissCorrected",1840,G__AnalysisDict_905_0_8, 117, G__get_linked_tagnum(&G__AnalysisDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtMissCorrected",1840,G__AnalysisDict_905_0_9, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEfloatcOfloatgR), -1, 0, 2, 1, 1, 0, 
"f - - 10 - met_et f - - 10 - met_phi", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MutagMETcorrection", 1820, G__AnalysisDict_905_0_10, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection), -1, 0, 1, 1, 1, 0, "u 'MutagMETcorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MutagMETcorrection", 1946, G__AnalysisDict_905_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_905_0_12, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_MutagMETcorrection), -1, 1, 1, 1, 1, 0, "u 'MutagMETcorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHObjectSelector(void) {
   /* HObjectSelector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HObjectSelector));
   G__memfunc_setup("HObjectSelector",1504,G__AnalysisDict_906_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_HObjectSelector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AnalysisDict_906_0_2, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HObjectSelector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AnalysisDict_906_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HObjectSelector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AnalysisDict_906_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HObjectSelector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AnalysisDict_906_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HObjectSelector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__AnalysisDict_906_0_6, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__AnalysisDict_906_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__AnalysisDict_906_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AnalysisDict_906_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AnalysisDict_906_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HObjectSelector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AnalysisDict_906_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HObjectSelector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AnalysisDict_906_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HObjectSelector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AnalysisDict_906_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HObjectSelector::DeclFileLine) ), 0);
   G__memfunc_setup("checkTriggers",1349,G__AnalysisDict_906_0_14, 103, -1, -1, 0, 7, 1, 1, 0, 
"i - - 0 - nE i - - 0 - nM "
"u 'vector<bool,allocator<bool> >' 'vector<bool>' 1 - triggers i - - 0 - runNumber "
"i - - 0 - eventNumber g - - 0 - isMC "
"g - - 1 - numMatch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("elecTrigMatch",1308,G__AnalysisDict_906_0_15, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'MTree::Electron' - 0 - elec u 'vector<MTree::TriggerObject*,allocator<MTree::TriggerObject*> >' 'vector<MTree::TriggerObject*>' 0 - trigObjs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonTrigHypo",1269,G__AnalysisDict_906_0_16, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - trigName d - - 0 - pt "
"d - - 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonTrigMatch",1346,G__AnalysisDict_906_0_17, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'MTree::Muon' - 0 - muon u 'vector<MTree::TriggerObject*,allocator<MTree::TriggerObject*> >' 'vector<MTree::TriggerObject*>' 0 - trigObjs "
"u 'vector<MTree::L1TriggerROI*,allocator<MTree::L1TriggerROI*> >' 'vector<MTree::L1TriggerROI*>' 0 - L1TrigObjs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrigSF",879,G__AnalysisDict_906_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 0 - leptons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectElectrons",1583,G__AnalysisDict_906_0_19, 121, -1, -1, 0, 7, 1, 1, 0, 
"g - - 0 - isMC i - - 0 - runNumber "
"i - - 0 - eventNumber u 'vector<MTree::Electron*,allocator<MTree::Electron*> >' 'vector<MTree::Electron*>' 1 - eobjects "
"d - - 1 - scale u 'vector<MTree::TriggerObject*,allocator<MTree::TriggerObject*> >' 'vector<MTree::TriggerObject*>' 0 - trigObjs "
"u 'vector<MTree::Muon*,allocator<MTree::Muon*> >' 'vector<MTree::Muon*>' 0 - muons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFEBElectrons",1468,G__AnalysisDict_906_0_20, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR), G__defined_typename("vector<MTree::Electron*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allElecsPassFEB",1417,G__AnalysisDict_906_0_21, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - runNumber u 'vector<MTree::Electron*,allocator<MTree::Electron*> >' 'vector<MTree::Electron*>' 0 - elecs "
"g - - 0 - print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectMuons",1170,G__AnalysisDict_906_0_22, 121, -1, -1, 0, 7, 1, 1, 0, 
"g - - 0 - isMC i - - 0 - runNumber "
"i - - 0 - eventNumber u 'vector<MTree::Muon*,allocator<MTree::Muon*> >' 'vector<MTree::Muon*>' 1 - mobjects "
"d - - 1 - scale u 'vector<MTree::TriggerObject*,allocator<MTree::TriggerObject*> >' 'vector<MTree::TriggerObject*>' 0 - trigObjs "
"u 'vector<MTree::L1TriggerROI*,allocator<MTree::L1TriggerROI*> >' 'vector<MTree::L1TriggerROI*>' 0 - L1TrigObjs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectJets",1046,G__AnalysisDict_906_0_23, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - runNumber i - - 0 - eventNumber "
"g - - 0 - isMC u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 1 - jobjects "
"u 'vector<MTree::Muon*,allocator<MTree::Muon*> >' 'vector<MTree::Muon*>' 0 - muons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFEBJets",931,G__AnalysisDict_906_0_24, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR), G__defined_typename("vector<MTree::Jet*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("badOrUglyJet",1196,G__AnalysisDict_906_0_25, 103, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::Jet' - 0 - jet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getETrigPass",1202,G__AnalysisDict_906_0_26, 103, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - isMC i - - 0 - runNumber "
"d - - 1 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMTrigPass",1210,G__AnalysisDict_906_0_27, 103, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - isMC i - - 0 - runNumber "
"d - - 1 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDelMuonPx",1212,G__AnalysisDict_906_0_28, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDelMuonPy",1213,G__AnalysisDict_906_0_29, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDelElecPx",1174,G__AnalysisDict_906_0_30, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDelElecPy",1175,G__AnalysisDict_906_0_31, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDelJetPx",1088,G__AnalysisDict_906_0_32, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDelJetPy",1089,G__AnalysisDict_906_0_33, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getECutflow",1129,G__AnalysisDict_906_0_34, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMCutflow",1137,G__AnalysisDict_906_0_35, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJCutflow",1134,G__AnalysisDict_906_0_36, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TH1D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMuTagCorMet",1384,G__AnalysisDict_906_0_37, 117, G__get_linked_tagnum(&G__AnalysisDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 10 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initJESTool",1076,G__AnalysisDict_906_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HObjectSelector", 1630, G__AnalysisDict_906_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCutflowClass(void) {
   /* CutflowClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass));
   G__memfunc_setup("CutflowClass",1242,G__AnalysisDict_931_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChannels",1144,G__AnalysisDict_931_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__AnalysisDict_931_0_3, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cutNr d - - 0 - xsec "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - channels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumCutflows",1479,G__AnalysisDict_931_0_4, 85, G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR), G__defined_typename("map<std::string,TH1D*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXSecCutflows",1546,G__AnalysisDict_931_0_5, 85, G__get_linked_tagnum(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR), G__defined_typename("map<std::string,TH1D*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printXSecCheck",1406,G__AnalysisDict_931_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CutflowClass", 1242, G__AnalysisDict_931_0_7, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass), -1, 0, 1, 1, 1, 0, "u 'CutflowClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CutflowClass", 1368, G__AnalysisDict_931_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_931_0_9, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_CutflowClass), -1, 1, 1, 1, 1, 0, "u 'CutflowClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCutlistClass(void) {
   /* CutlistClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass));
   G__memfunc_setup("CutlistClass",1246,G__AnalysisDict_946_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__AnalysisDict_946_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - cutNr i - - 0 - runNumber "
"i - - 0 - eventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printLists",1084,G__AnalysisDict_946_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CutlistClass", 1246, G__AnalysisDict_946_0_4, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass), -1, 0, 1, 1, 1, 0, "u 'CutlistClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CutlistClass", 1372, G__AnalysisDict_946_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_946_0_6, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_CutlistClass), -1, 1, 1, 1, 1, 0, "u 'CutlistClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHHistosClass(void) {
   /* HHistosClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass));
   G__memfunc_setup("HHistosClass",1208,G__AnalysisDict_954_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__AnalysisDict_954_0_2, 105, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - xsec i - - 0 - cutNr "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - channels u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 1 - leptons "
"u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 1 - jets U 'MTree::MissingET' - 0 - metRel "
"d - - 0 - MT d - - 0 - mll", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - name U 'map<int,vector<TH1D*,allocator<TH1D*> >,less<int>,allocator<pair<const int,vector<TH1D*,allocator<TH1D*> > > > >' 'map<int,std::vector<TH1D*> >' 0 - pointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHistos",954,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR), G__defined_typename("vector<TH1D*>"), 0, 2, 1, 4, 0, 
"u 'string' - 0 - channel i - - 0 - cutNr", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HHistosClass", 1208, G__AnalysisDict_954_0_5, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass), -1, 0, 1, 1, 1, 0, "u 'HHistosClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HHistosClass", 1334, G__AnalysisDict_954_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_954_0_7, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_HHistosClass), -1, 1, 1, 1, 1, 0, "u 'HHistosClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCutCodeClass(void) {
   /* CutCodeClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass));
   G__memfunc_setup("CutCodeClass",1181,G__AnalysisDict_966_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPtll",732,G__AnalysisDict_966_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 1 - leptons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPtTotal",1032,G__AnalysisDict_966_0_3, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 1 - leptons u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 1 - jets "
"U 'MTree::MissingET' - 0 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTauTauMass",1320,G__AnalysisDict_966_0_4, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 1 - lep1 u 'TLorentzVector' - 1 - lep2 "
"u 'TLorentzVector' - 1 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMT",481,G__AnalysisDict_966_0_5, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 1 - leptons U 'MTree::MissingET' - 0 - met", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("failJetPtSV0",1116,G__AnalysisDict_966_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 1 - jets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("failThirdCentralJet",1923,G__AnalysisDict_966_0_7, 103, -1, -1, 0, 1, 1, 1, 0, "u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 1 - jets", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CutCodeClass", 1181, G__AnalysisDict_966_0_8, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass), -1, 0, 1, 1, 1, 0, "u 'CutCodeClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CutCodeClass", 1307, G__AnalysisDict_966_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_966_0_10, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_CutCodeClass), -1, 1, 1, 1, 1, 0, "u 'CutCodeClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncZControlClass(void) {
   /* ZControlClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass));
   G__memfunc_setup("ZControlClass",1329,G__AnalysisDict_967_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__AnalysisDict_967_0_2, 121, -1, -1, 0, 9, 1, 1, 0, 
"u 'string' - 0 - channel u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 0 - leptons "
"u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 0 - jets U 'MTree::MissingET' - 0 - met "
"d - - 0 - mll d - - 0 - mT "
"d - - 0 - Npv d - - 0 - mu "
"d - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printRegions",1284,G__AnalysisDict_967_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AnalysisDictLN_string), -1, 0, 2, 1, 4, 0, 
"u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 0 - leptons i - - 0 - nJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill1DHistos",1174,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"d - - 0 - mll d - - 0 - met "
"u 'string' - 0 - chan d - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scanZWindows",1258,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"d - - 0 - mll d - - 0 - met "
"u 'string' - 0 - chan d - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("varyMETCut",980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - - 0 - met u 'string' - 0 - chan "
"d - - 0 - weight", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ZControlClass", 1329, G__AnalysisDict_967_0_8, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass), -1, 0, 1, 1, 1, 0, "u 'ZControlClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ZControlClass", 1455, G__AnalysisDict_967_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_967_0_10, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_ZControlClass), -1, 1, 1, 1, 1, 0, "u 'ZControlClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWWEventClass(void) {
   /* WWEventClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass));
   G__memfunc_setup("WWEventClass",1190,G__AnalysisDict_975_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printEvent",1071,G__AnalysisDict_975_0_2, 121, -1, -1, 0, 7, 1, 1, 0, 
"U 'MTree::EventInfo' - 0 - _eventInfo u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 0 - leptons "
"u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 0 - jets U 'MTree::MissingET' - 0 - metWW "
"U 'MTree::MissingET' - 0 - metRel d - - 0 - mT "
"d - - 0 - mll", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WWEventClass", 1190, G__AnalysisDict_975_0_3, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass), -1, 0, 1, 1, 1, 0, "u 'WWEventClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WWEventClass", 1316, G__AnalysisDict_975_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_975_0_5, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_WWEventClass), -1, 1, 1, 1, 1, 0, "u 'WWEventClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncggFReweighting(void) {
   /* ggFReweighting */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting));
   G__memfunc_setup("ggFReweighting",1425,G__AnalysisDict_981_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - generator i - - 0 - higgsMass "
"u 'string' - 0 '\"Mean\"' option u 'string' - 0 '\"./\"' inputFilePath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__AnalysisDict_981_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - generator i - - 0 - higgsMass "
"u 'string' - 0 '\"Mean\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("higgsMass",934,G__AnalysisDict_981_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("option",665,G__AnalysisDict_981_0_4, 117, G__get_linked_tagnum(&G__AnalysisDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("generator",967,G__AnalysisDict_981_0_5, 117, G__get_linked_tagnum(&G__AnalysisDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeight",936,G__AnalysisDict_981_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - higgsPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatError",1254,G__AnalysisDict_981_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - higgsPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeightAndStatError",2145,G__AnalysisDict_981_0_8, 117, G__get_linked_tagnum(&G__AnalysisDictLN_pairlEdoublecOdoublegR), -1, 0, 1, 1, 1, 0, "d - - 0 - higgsPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printInfo",953,G__AnalysisDict_981_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ggFReweighting", 1425, G__AnalysisDict_981_0_10, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting), -1, 0, 1, 1, 1, 0, "u 'ggFReweighting' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ggFReweighting", 1551, G__AnalysisDict_981_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_981_0_12, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_ggFReweighting), -1, 1, 1, 1, 1, 0, "u 'ggFReweighting' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHWWAnalysis(void) {
   /* HWWAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis));
   G__memfunc_setup("HWWAnalysis",1082,G__AnalysisDict_1002_0_1, 105, G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__AnalysisDict_1002_0_2, 85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HWWAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__AnalysisDict_1002_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HWWAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__AnalysisDict_1002_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HWWAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__AnalysisDict_1002_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HWWAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__AnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AnalysisDict_1002_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__AnalysisDict_1002_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HWWAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__AnalysisDict_1002_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HWWAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__AnalysisDict_1002_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HWWAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__AnalysisDict_1002_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HWWAnalysis::DeclFileLine) ), 0);
   G__memfunc_setup("h2wwCutflow",1132,G__AnalysisDict_1002_0_14, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - sample U 'TFile' - 0 - file "
"g - - 0 - lowMassm d - - 0 - hMass "
"g - - 0 - comset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__AnalysisDict_1002_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - sample U 'TFile' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillPVrefs",1021,G__AnalysisDict_1002_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findChannels",1229,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 4, 0, "u 'vector<bool,allocator<bool> >' 'vector<bool>' 0 - triggers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findChannels",1229,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 4, 0, "u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 1 - leptons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findChannels",1229,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 2, 1, 4, 0, 
"u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 1 - leptons i - - 0 - nJets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("primVtxWeight",1378,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - nGoodPVs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("usePVWeight",1115,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHiggsPtWeight",1630,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBJetWeight",1293,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 0, "u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 0 - jets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correctMET",984,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 0 - leptons u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 0 - jets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("muonjetOverlap",1499,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"d - - 0 - cut u 'vector<MTree::Muon*,allocator<MTree::Muon*> >' 'vector<MTree::Muon*>' 1 - muons "
"u 'vector<MTree::Jet*,allocator<MTree::Jet*> >' 'vector<MTree::Jet*>' 1 - jets", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectGoodPVs",1314,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"g - - 1 - goodPV i - - 1 - nGoodPVs "
"i - - 0 - eventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("badJetsPresent",1438,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<MTree::Lepton*,allocator<MTree::Lepton*> >' 'vector<MTree::Lepton*>' 0 - leptons u 'string' - 1 - result", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("passDeadFEB",1010,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"g - - 0 - isMC d - - 1 - evWeight "
"i - - 0 - runNumber i - - 0 - eventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLArHole",835,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 6, 1, 4, 0, 
"f - - 0 - eta f - - 0 - phi "
"f - - 0 '-0.1' etamin f - - 0 '1.5' etamax "
"f - - 0 '-0.9' phimin f - - 0 '-0.5' phimax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLArHoleVeto",1249,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 7, 1, 4, 0, 
"f - - 0 - jet_pt f - - 0 - jet_eta "
"f - - 0 - jet_phi f - - 0 - jet_BCH_CORR_JET "
"f - - 0 - jet_BCH_CORR_CELL g - - 0 - kIsData "
"f - - 0 '40000.' threshold", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HWWAnalysis", 1082, G__AnalysisDict_1002_0_31, (int) ('i'), G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis), -1, 0, 1, 1, 1, 0, "u 'HWWAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HWWAnalysis", 1208, G__AnalysisDict_1002_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisDict_1002_0_33, (int) ('u'), G__get_linked_tagnum(&G__AnalysisDictLN_HWWAnalysis), -1, 1, 1, 1, 1, 0, "u 'HWWAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAnalysisDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAnalysisDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAnalysisDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AnalysisDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TGraphAsymmErrors = { "TGraphAsymmErrors" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AnalysisDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTree = { "MTree" , 110 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTreecLcLElectron = { "MTree::Electron" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTreecLcLEventInfo = { "MTree::EventInfo" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTreecLcLTrigger = { "MTree::Trigger" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTreecLcLJet = { "MTree::Jet" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTreecLcLMissingET = { "MTree::MissingET" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MTreecLcLMuon = { "MTree::Muon" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR = { "vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Root::TLumiBlockRange,allocator<Root::TLumiBlockRange> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR = { "map<int,Root::TGoodRun,less<int>,allocator<pair<const int,Root::TGoodRun> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR = { "vector<Root::TGoodRun,allocator<Root::TGoodRun> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Root::TGoodRun,allocator<Root::TGoodRun> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR = { "map<Root::TMsgLevel,string,less<Root::TMsgLevel>,allocator<pair<const Root::TMsgLevel,string> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR = { "vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Root::TGoodRunsList,allocator<Root::TGoodRunsList> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TPileupReweighting = { "TPileupReweighting" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_JESUncertaintyProvider = { "JESUncertaintyProvider" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEintcOTH2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH2DmUgRsPgRsPgR = { "map<int,TH2D*,less<int>,allocator<pair<const int,TH2D*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_BaseAnalysis = { "BaseAnalysis" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_SmearingClass = { "SmearingClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_EnergyRescaler = { "EnergyRescaler" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_EnergyRescalercLcLCorrType = { "EnergyRescaler::CorrType" , 101 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR = { "vector<EnergyRescaler::calibMap,allocator<EnergyRescaler::calibMap> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<EnergyRescaler::calibMap,allocator<EnergyRescaler::calibMap> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_egammaSFclass = { "egammaSFclass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_pairlEfloatcOfloatgR = { "pair<float,float>" , 115 , -1 };
G__linked_taginfo G__AnalysisDictLN_MuonEfficiencyScaleFactor = { "MuonEfficiencyScaleFactor" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_EtaPhiBinning = { "EtaPhiBinning" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_EtaPhiBinningcLcLbinregion = { "EtaPhiBinning::binregion" , 101 , -1 };
G__linked_taginfo G__AnalysisDictLN_StacoCBScaleEffFactors = { "StacoCBScaleEffFactors" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_egammaOQ = { "egammaOQ" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_MutagMETcorrection = { "MutagMETcorrection" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_HObjectSelector = { "HObjectSelector" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgR = { "vector<MTree::TriggerObject*,allocator<MTree::TriggerObject*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MTree::TriggerObject*,allocator<MTree::TriggerObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgR = { "vector<MTree::L1TriggerROI*,allocator<MTree::L1TriggerROI*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MTree::L1TriggerROI*,allocator<MTree::L1TriggerROI*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgR = { "vector<MTree::Lepton*,allocator<MTree::Lepton*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MTree::Lepton*,allocator<MTree::Lepton*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR = { "vector<MTree::Electron*,allocator<MTree::Electron*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MTree::Electron*,allocator<MTree::Electron*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgR = { "vector<MTree::Muon*,allocator<MTree::Muon*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MTree::Muon*,allocator<MTree::Muon*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR = { "vector<MTree::Jet*,allocator<MTree::Jet*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<MTree::Jet*,allocator<MTree::Jet*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_CutflowClass = { "CutflowClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR = { "map<string,TH1D*,less<string>,allocator<pair<const string,TH1D*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_CutlistClass = { "CutlistClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<int,vector<string,allocator<string> >,less<int>,allocator<pair<const int,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_HHistosClass = { "HHistosClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR = { "vector<TH1D*,allocator<TH1D*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1D*,allocator<TH1D*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR = { "map<int,vector<TH1D*,allocator<TH1D*> >,less<int>,allocator<pair<const int,vector<TH1D*,allocator<TH1D*> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_CutCodeClass = { "CutCodeClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_ZControlClass = { "ZControlClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR = { "map<string,TH2D*,less<string>,allocator<pair<const string,TH2D*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_WWEventClass = { "WWEventClass" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_ggFReweighting = { "ggFReweighting" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_Analysis = { "Analysis" , 110 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_AnalysiscLcLCalibrationDataVariables = { "Analysis::CalibrationDataVariables" , 115 , -1 };
G__linked_taginfo G__AnalysisDictLN_AnalysiscLcLCalibrationDataInterfaceROOT = { "Analysis::CalibrationDataInterfaceROOT" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR = { "map<string,TObject*,less<string>,allocator<pair<const string,TObject*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisDictLN_HWWAnalysis = { "HWWAnalysis" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAnalysisDict() {
  G__AnalysisDictLN_TClass.tagnum = -1 ;
  G__AnalysisDictLN_TBuffer.tagnum = -1 ;
  G__AnalysisDictLN_TMemberInspector.tagnum = -1 ;
  G__AnalysisDictLN_TObject.tagnum = -1 ;
  G__AnalysisDictLN_TNamed.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_string.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_TString.tagnum = -1 ;
  G__AnalysisDictLN_TClonesArray.tagnum = -1 ;
  G__AnalysisDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TH1F.tagnum = -1 ;
  G__AnalysisDictLN_TGraphAsymmErrors.tagnum = -1 ;
  G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AnalysisDictLN_TFile.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_TH1D.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TH2D.tagnum = -1 ;
  G__AnalysisDictLN_TChain.tagnum = -1 ;
  G__AnalysisDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_TLorentzVector.tagnum = -1 ;
  G__AnalysisDictLN_MTree.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_MTreecLcLElectron.tagnum = -1 ;
  G__AnalysisDictLN_MTreecLcLEventInfo.tagnum = -1 ;
  G__AnalysisDictLN_MTreecLcLTrigger.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__AnalysisDictLN_MTreecLcLJet.tagnum = -1 ;
  G__AnalysisDictLN_MTreecLcLMissingET.tagnum = -1 ;
  G__AnalysisDictLN_MTreecLcLMuon.tagnum = -1 ;
  G__AnalysisDictLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_TPileupReweighting.tagnum = -1 ;
  G__AnalysisDictLN_JESUncertaintyProvider.tagnum = -1 ;
  G__AnalysisDictLN_maplEintcOTH2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH2DmUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_BaseAnalysis.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_TRandom3.tagnum = -1 ;
  G__AnalysisDictLN_SmearingClass.tagnum = -1 ;
  G__AnalysisDictLN_EnergyRescaler.tagnum = -1 ;
  G__AnalysisDictLN_EnergyRescalercLcLCorrType.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_egammaSFclass.tagnum = -1 ;
  G__AnalysisDictLN_pairlEfloatcOfloatgR.tagnum = -1 ;
  G__AnalysisDictLN_MuonEfficiencyScaleFactor.tagnum = -1 ;
  G__AnalysisDictLN_EtaPhiBinning.tagnum = -1 ;
  G__AnalysisDictLN_EtaPhiBinningcLcLbinregion.tagnum = -1 ;
  G__AnalysisDictLN_StacoCBScaleEffFactors.tagnum = -1 ;
  G__AnalysisDictLN_egammaOQ.tagnum = -1 ;
  G__AnalysisDictLN_MutagMETcorrection.tagnum = -1 ;
  G__AnalysisDictLN_HObjectSelector.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_CutflowClass.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_CutlistClass.tagnum = -1 ;
  G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_HHistosClass.tagnum = -1 ;
  G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_CutCodeClass.tagnum = -1 ;
  G__AnalysisDictLN_ZControlClass.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_WWEventClass.tagnum = -1 ;
  G__AnalysisDictLN_ggFReweighting.tagnum = -1 ;
  G__AnalysisDictLN_Analysis.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_AnalysiscLcLCalibrationDataVariables.tagnum = -1 ;
  G__AnalysisDictLN_AnalysiscLcLCalibrationDataInterfaceROOT.tagnum = -1 ;
  G__AnalysisDictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisDictLN_HWWAnalysis.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAnalysisDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_string);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TString);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TGraphAsymmErrors);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TChain);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTree);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTreecLcLElectron);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTreecLcLEventInfo);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTreecLcLTrigger);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTreecLcLJet);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTreecLcLMissingET);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MTreecLcLMuon);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTLumiBlockRangecOallocatorlERootcLcLTLumiBlockRangegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEintcORootcLcLTGoodRuncOlesslEintgRcOallocatorlEpairlEconstsPintcORootcLcLTGoodRungRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRuncOallocatorlERootcLcLTGoodRungRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplERootcLcLTMsgLevelcOstringcOlesslERootcLcLTMsgLevelgRcOallocatorlEpairlEconstsPRootcLcLTMsgLevelcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlERootcLcLTGoodRunsListcOallocatorlERootcLcLTGoodRunsListgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TPileupReweighting),sizeof(TPileupReweighting),-1,62464,(char*)NULL,G__setup_memvarTPileupReweighting,G__setup_memfuncTPileupReweighting);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_JESUncertaintyProvider);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEintcOTH2DmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH2DmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_BaseAnalysis),sizeof(BaseAnalysis),-1,29952,(char*)NULL,G__setup_memvarBaseAnalysis,G__setup_memfuncBaseAnalysis);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_SmearingClass),sizeof(SmearingClass),-1,33792,(char*)NULL,G__setup_memvarSmearingClass,G__setup_memfuncSmearingClass);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_EnergyRescaler),sizeof(EnergyRescaler),-1,1280,(char*)NULL,G__setup_memvarEnergyRescaler,G__setup_memfuncEnergyRescaler);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_EnergyRescalercLcLCorrType);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEEnergyRescalercLcLcalibMapcOallocatorlEEnergyRescalercLcLcalibMapgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_egammaSFclass),sizeof(egammaSFclass),-1,1280,(char*)NULL,G__setup_memvaregammaSFclass,G__setup_memfuncegammaSFclass);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_pairlEfloatcOfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MuonEfficiencyScaleFactor),sizeof(MuonEfficiencyScaleFactor),-1,1283,(char*)NULL,G__setup_memvarMuonEfficiencyScaleFactor,G__setup_memfuncMuonEfficiencyScaleFactor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_EtaPhiBinning),sizeof(EtaPhiBinning),-1,1280,(char*)NULL,G__setup_memvarEtaPhiBinning,G__setup_memfuncEtaPhiBinning);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_EtaPhiBinningcLcLbinregion);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_StacoCBScaleEffFactors),sizeof(StacoCBScaleEffFactors),-1,1280,(char*)NULL,G__setup_memvarStacoCBScaleEffFactors,G__setup_memfuncStacoCBScaleEffFactors);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_egammaOQ),sizeof(egammaOQ),-1,62720,(char*)NULL,G__setup_memvaregammaOQ,G__setup_memfuncegammaOQ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_MutagMETcorrection),sizeof(MutagMETcorrection),-1,1280,(char*)NULL,G__setup_memvarMutagMETcorrection,G__setup_memfuncMutagMETcorrection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_HObjectSelector),sizeof(HObjectSelector),-1,1280,(char*)NULL,G__setup_memvarHObjectSelector,G__setup_memfuncHObjectSelector);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLTriggerObjectmUcOallocatorlEMTreecLcLTriggerObjectmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLL1TriggerROImUcOallocatorlEMTreecLcLL1TriggerROImUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLLeptonmUcOallocatorlEMTreecLcLLeptonmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLElectronmUcOallocatorlEMTreecLcLElectronmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLMuonmUcOallocatorlEMTreecLcLMuonmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlEMTreecLcLJetmUcOallocatorlEMTreecLcLJetmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_CutflowClass),sizeof(CutflowClass),-1,1280,(char*)NULL,G__setup_memvarCutflowClass,G__setup_memfuncCutflowClass);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_CutlistClass),sizeof(CutlistClass),-1,1280,(char*)NULL,G__setup_memvarCutlistClass,G__setup_memfuncCutlistClass);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEintcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_HHistosClass),sizeof(HHistosClass),-1,1280,(char*)NULL,G__setup_memvarHHistosClass,G__setup_memfuncHHistosClass);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_vectorlETH1DmUcOallocatorlETH1DmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_reverse_iteratorlEvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETH1DmUcOallocatorlETH1DmUgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_CutCodeClass),sizeof(CutCodeClass),-1,1280,(char*)NULL,G__setup_memvarCutCodeClass,G__setup_memfuncCutCodeClass);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_ZControlClass),sizeof(ZControlClass),-1,1280,(char*)NULL,G__setup_memvarZControlClass,G__setup_memfuncZControlClass);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOTH2DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH2DmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_WWEventClass),sizeof(WWEventClass),-1,1280,(char*)NULL,G__setup_memvarWWEventClass,G__setup_memfuncWWEventClass);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_ggFReweighting),sizeof(ggFReweighting),-1,33792,(char*)NULL,G__setup_memvarggFReweighting,G__setup_memfuncggFReweighting);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_Analysis);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_AnalysiscLcLCalibrationDataVariables);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_AnalysiscLcLCalibrationDataInterfaceROOT);
   G__get_linked_tagnum_fwd(&G__AnalysisDictLN_maplEstringcOTObjectmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjectmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisDictLN_HWWAnalysis),sizeof(HWWAnalysis),-1,29952,(char*)NULL,G__setup_memvarHWWAnalysis,G__setup_memfuncHWWAnalysis);
}
extern "C" void G__cpp_setupAnalysisDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAnalysisDict()");
  G__set_cpp_environmentAnalysisDict();
  G__cpp_setup_tagtableAnalysisDict();

  G__cpp_setup_inheritanceAnalysisDict();

  G__cpp_setup_typetableAnalysisDict();

  G__cpp_setup_memvarAnalysisDict();

  G__cpp_setup_memfuncAnalysisDict();
  G__cpp_setup_globalAnalysisDict();
  G__cpp_setup_funcAnalysisDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAnalysisDict();
  return;
}
class G__cpp_setup_initAnalysisDict {
  public:
    G__cpp_setup_initAnalysisDict() { G__add_setup_func("AnalysisDict",(G__incsetup)(&G__cpp_setupAnalysisDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAnalysisDict() { G__remove_setup_func("AnalysisDict"); }
};
G__cpp_setup_initAnalysisDict G__cpp_setup_initializerAnalysisDict;

