//
// File generated by rootcint at Fri Jul 29 20:42:09 2011

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MTree/MTreeIO.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace MTree {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MTree_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MTree", 0 /*version*/, "./MTree/TriggerObject.h", 18,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MTree_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MTree_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void MTreecLcLPrimaryVertex_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLPrimaryVertex(void *p = 0);
   static void *newArray_MTreecLcLPrimaryVertex(Long_t size, void *p);
   static void delete_MTreecLcLPrimaryVertex(void *p);
   static void deleteArray_MTreecLcLPrimaryVertex(void *p);
   static void destruct_MTreecLcLPrimaryVertex(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::PrimaryVertex*)
   {
      ::MTree::PrimaryVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::PrimaryVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::PrimaryVertex", ::MTree::PrimaryVertex::Class_Version(), "./MTree/PrimaryVertex.h", 12,
                  typeid(::MTree::PrimaryVertex), DefineBehavior(ptr, ptr),
                  &::MTree::PrimaryVertex::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::PrimaryVertex) );
      instance.SetNew(&new_MTreecLcLPrimaryVertex);
      instance.SetNewArray(&newArray_MTreecLcLPrimaryVertex);
      instance.SetDelete(&delete_MTreecLcLPrimaryVertex);
      instance.SetDeleteArray(&deleteArray_MTreecLcLPrimaryVertex);
      instance.SetDestructor(&destruct_MTreecLcLPrimaryVertex);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::PrimaryVertex*)
   {
      return GenerateInitInstanceLocal((::MTree::PrimaryVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::PrimaryVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLTrack(void *p = 0);
   static void *newArray_MTreecLcLTrack(Long_t size, void *p);
   static void delete_MTreecLcLTrack(void *p);
   static void deleteArray_MTreecLcLTrack(void *p);
   static void destruct_MTreecLcLTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Track*)
   {
      ::MTree::Track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Track", ::MTree::Track::Class_Version(), "./MTree/Track.h", 21,
                  typeid(::MTree::Track), DefineBehavior(ptr, ptr),
                  &::MTree::Track::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Track) );
      instance.SetNew(&new_MTreecLcLTrack);
      instance.SetNewArray(&newArray_MTreecLcLTrack);
      instance.SetDelete(&delete_MTreecLcLTrack);
      instance.SetDeleteArray(&deleteArray_MTreecLcLTrack);
      instance.SetDestructor(&destruct_MTreecLcLTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Track*)
   {
      return GenerateInitInstanceLocal((::MTree::Track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLLepton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLLepton(void *p = 0);
   static void *newArray_MTreecLcLLepton(Long_t size, void *p);
   static void delete_MTreecLcLLepton(void *p);
   static void deleteArray_MTreecLcLLepton(void *p);
   static void destruct_MTreecLcLLepton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Lepton*)
   {
      ::MTree::Lepton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Lepton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Lepton", ::MTree::Lepton::Class_Version(), "./MTree/Lepton.h", 20,
                  typeid(::MTree::Lepton), DefineBehavior(ptr, ptr),
                  &::MTree::Lepton::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Lepton) );
      instance.SetNew(&new_MTreecLcLLepton);
      instance.SetNewArray(&newArray_MTreecLcLLepton);
      instance.SetDelete(&delete_MTreecLcLLepton);
      instance.SetDeleteArray(&deleteArray_MTreecLcLLepton);
      instance.SetDestructor(&destruct_MTreecLcLLepton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Lepton*)
   {
      return GenerateInitInstanceLocal((::MTree::Lepton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Lepton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLElectron_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLElectron(void *p = 0);
   static void *newArray_MTreecLcLElectron(Long_t size, void *p);
   static void delete_MTreecLcLElectron(void *p);
   static void deleteArray_MTreecLcLElectron(void *p);
   static void destruct_MTreecLcLElectron(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Electron*)
   {
      ::MTree::Electron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Electron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Electron", ::MTree::Electron::Class_Version(), "./MTree/Electron.h", 20,
                  typeid(::MTree::Electron), DefineBehavior(ptr, ptr),
                  &::MTree::Electron::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Electron) );
      instance.SetNew(&new_MTreecLcLElectron);
      instance.SetNewArray(&newArray_MTreecLcLElectron);
      instance.SetDelete(&delete_MTreecLcLElectron);
      instance.SetDeleteArray(&deleteArray_MTreecLcLElectron);
      instance.SetDestructor(&destruct_MTreecLcLElectron);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Electron*)
   {
      return GenerateInitInstanceLocal((::MTree::Electron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Electron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLPhoton_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLPhoton(void *p = 0);
   static void *newArray_MTreecLcLPhoton(Long_t size, void *p);
   static void delete_MTreecLcLPhoton(void *p);
   static void deleteArray_MTreecLcLPhoton(void *p);
   static void destruct_MTreecLcLPhoton(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Photon*)
   {
      ::MTree::Photon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Photon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Photon", ::MTree::Photon::Class_Version(), "./MTree/Photon.h", 19,
                  typeid(::MTree::Photon), DefineBehavior(ptr, ptr),
                  &::MTree::Photon::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Photon) );
      instance.SetNew(&new_MTreecLcLPhoton);
      instance.SetNewArray(&newArray_MTreecLcLPhoton);
      instance.SetDelete(&delete_MTreecLcLPhoton);
      instance.SetDeleteArray(&deleteArray_MTreecLcLPhoton);
      instance.SetDestructor(&destruct_MTreecLcLPhoton);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Photon*)
   {
      return GenerateInitInstanceLocal((::MTree::Photon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Photon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLEventInfo_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLEventInfo(void *p = 0);
   static void *newArray_MTreecLcLEventInfo(Long_t size, void *p);
   static void delete_MTreecLcLEventInfo(void *p);
   static void deleteArray_MTreecLcLEventInfo(void *p);
   static void destruct_MTreecLcLEventInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::EventInfo*)
   {
      ::MTree::EventInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::EventInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::EventInfo", ::MTree::EventInfo::Class_Version(), "./MTree/EventInfo.h", 11,
                  typeid(::MTree::EventInfo), DefineBehavior(ptr, ptr),
                  &::MTree::EventInfo::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::EventInfo) );
      instance.SetNew(&new_MTreecLcLEventInfo);
      instance.SetNewArray(&newArray_MTreecLcLEventInfo);
      instance.SetDelete(&delete_MTreecLcLEventInfo);
      instance.SetDeleteArray(&deleteArray_MTreecLcLEventInfo);
      instance.SetDestructor(&destruct_MTreecLcLEventInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::EventInfo*)
   {
      return GenerateInitInstanceLocal((::MTree::EventInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::EventInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLJet_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLJet(void *p = 0);
   static void *newArray_MTreecLcLJet(Long_t size, void *p);
   static void delete_MTreecLcLJet(void *p);
   static void deleteArray_MTreecLcLJet(void *p);
   static void destruct_MTreecLcLJet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Jet*)
   {
      ::MTree::Jet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Jet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Jet", ::MTree::Jet::Class_Version(), "./MTree/Jet.h", 22,
                  typeid(::MTree::Jet), DefineBehavior(ptr, ptr),
                  &::MTree::Jet::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Jet) );
      instance.SetNew(&new_MTreecLcLJet);
      instance.SetNewArray(&newArray_MTreecLcLJet);
      instance.SetDelete(&delete_MTreecLcLJet);
      instance.SetDeleteArray(&deleteArray_MTreecLcLJet);
      instance.SetDestructor(&destruct_MTreecLcLJet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Jet*)
   {
      return GenerateInitInstanceLocal((::MTree::Jet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Jet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLMissingET_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLMissingET(void *p = 0);
   static void *newArray_MTreecLcLMissingET(Long_t size, void *p);
   static void delete_MTreecLcLMissingET(void *p);
   static void deleteArray_MTreecLcLMissingET(void *p);
   static void destruct_MTreecLcLMissingET(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::MissingET*)
   {
      ::MTree::MissingET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::MissingET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::MissingET", ::MTree::MissingET::Class_Version(), "./MTree/MissingET.h", 20,
                  typeid(::MTree::MissingET), DefineBehavior(ptr, ptr),
                  &::MTree::MissingET::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::MissingET) );
      instance.SetNew(&new_MTreecLcLMissingET);
      instance.SetNewArray(&newArray_MTreecLcLMissingET);
      instance.SetDelete(&delete_MTreecLcLMissingET);
      instance.SetDeleteArray(&deleteArray_MTreecLcLMissingET);
      instance.SetDestructor(&destruct_MTreecLcLMissingET);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::MissingET*)
   {
      return GenerateInitInstanceLocal((::MTree::MissingET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::MissingET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLMuon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLMuon(void *p = 0);
   static void *newArray_MTreecLcLMuon(Long_t size, void *p);
   static void delete_MTreecLcLMuon(void *p);
   static void deleteArray_MTreecLcLMuon(void *p);
   static void destruct_MTreecLcLMuon(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Muon*)
   {
      ::MTree::Muon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Muon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Muon", ::MTree::Muon::Class_Version(), "./MTree/Muon.h", 20,
                  typeid(::MTree::Muon), DefineBehavior(ptr, ptr),
                  &::MTree::Muon::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Muon) );
      instance.SetNew(&new_MTreecLcLMuon);
      instance.SetNewArray(&newArray_MTreecLcLMuon);
      instance.SetDelete(&delete_MTreecLcLMuon);
      instance.SetDeleteArray(&deleteArray_MTreecLcLMuon);
      instance.SetDestructor(&destruct_MTreecLcLMuon);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Muon*)
   {
      return GenerateInitInstanceLocal((::MTree::Muon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Muon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLTrigger_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLTrigger(void *p = 0);
   static void *newArray_MTreecLcLTrigger(Long_t size, void *p);
   static void delete_MTreecLcLTrigger(void *p);
   static void deleteArray_MTreecLcLTrigger(void *p);
   static void destruct_MTreecLcLTrigger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::Trigger*)
   {
      ::MTree::Trigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::Trigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::Trigger", ::MTree::Trigger::Class_Version(), "./MTree/Trigger.h", 17,
                  typeid(::MTree::Trigger), DefineBehavior(ptr, ptr),
                  &::MTree::Trigger::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::Trigger) );
      instance.SetNew(&new_MTreecLcLTrigger);
      instance.SetNewArray(&newArray_MTreecLcLTrigger);
      instance.SetDelete(&delete_MTreecLcLTrigger);
      instance.SetDeleteArray(&deleteArray_MTreecLcLTrigger);
      instance.SetDestructor(&destruct_MTreecLcLTrigger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::Trigger*)
   {
      return GenerateInitInstanceLocal((::MTree::Trigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::Trigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLTruthParticle_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLTruthParticle(void *p = 0);
   static void *newArray_MTreecLcLTruthParticle(Long_t size, void *p);
   static void delete_MTreecLcLTruthParticle(void *p);
   static void deleteArray_MTreecLcLTruthParticle(void *p);
   static void destruct_MTreecLcLTruthParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::TruthParticle*)
   {
      ::MTree::TruthParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::TruthParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::TruthParticle", ::MTree::TruthParticle::Class_Version(), "./MTree/TruthParticle.h", 21,
                  typeid(::MTree::TruthParticle), DefineBehavior(ptr, ptr),
                  &::MTree::TruthParticle::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::TruthParticle) );
      instance.SetNew(&new_MTreecLcLTruthParticle);
      instance.SetNewArray(&newArray_MTreecLcLTruthParticle);
      instance.SetDelete(&delete_MTreecLcLTruthParticle);
      instance.SetDeleteArray(&deleteArray_MTreecLcLTruthParticle);
      instance.SetDestructor(&destruct_MTreecLcLTruthParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::TruthParticle*)
   {
      return GenerateInitInstanceLocal((::MTree::TruthParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::TruthParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLL1TriggerROI_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLL1TriggerROI(void *p = 0);
   static void *newArray_MTreecLcLL1TriggerROI(Long_t size, void *p);
   static void delete_MTreecLcLL1TriggerROI(void *p);
   static void deleteArray_MTreecLcLL1TriggerROI(void *p);
   static void destruct_MTreecLcLL1TriggerROI(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::L1TriggerROI*)
   {
      ::MTree::L1TriggerROI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::L1TriggerROI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::L1TriggerROI", ::MTree::L1TriggerROI::Class_Version(), "./MTree/L1TriggerROI.h", 18,
                  typeid(::MTree::L1TriggerROI), DefineBehavior(ptr, ptr),
                  &::MTree::L1TriggerROI::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::L1TriggerROI) );
      instance.SetNew(&new_MTreecLcLL1TriggerROI);
      instance.SetNewArray(&newArray_MTreecLcLL1TriggerROI);
      instance.SetDelete(&delete_MTreecLcLL1TriggerROI);
      instance.SetDeleteArray(&deleteArray_MTreecLcLL1TriggerROI);
      instance.SetDestructor(&destruct_MTreecLcLL1TriggerROI);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::L1TriggerROI*)
   {
      return GenerateInitInstanceLocal((::MTree::L1TriggerROI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::L1TriggerROI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLHLTTriggerROI_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLHLTTriggerROI(void *p = 0);
   static void *newArray_MTreecLcLHLTTriggerROI(Long_t size, void *p);
   static void delete_MTreecLcLHLTTriggerROI(void *p);
   static void deleteArray_MTreecLcLHLTTriggerROI(void *p);
   static void destruct_MTreecLcLHLTTriggerROI(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::HLTTriggerROI*)
   {
      ::MTree::HLTTriggerROI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::HLTTriggerROI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::HLTTriggerROI", ::MTree::HLTTriggerROI::Class_Version(), "./MTree/HLTTriggerROI.h", 22,
                  typeid(::MTree::HLTTriggerROI), DefineBehavior(ptr, ptr),
                  &::MTree::HLTTriggerROI::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::HLTTriggerROI) );
      instance.SetNew(&new_MTreecLcLHLTTriggerROI);
      instance.SetNewArray(&newArray_MTreecLcLHLTTriggerROI);
      instance.SetDelete(&delete_MTreecLcLHLTTriggerROI);
      instance.SetDeleteArray(&deleteArray_MTreecLcLHLTTriggerROI);
      instance.SetDestructor(&destruct_MTreecLcLHLTTriggerROI);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::HLTTriggerROI*)
   {
      return GenerateInitInstanceLocal((::MTree::HLTTriggerROI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::HLTTriggerROI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MTreecLcLTriggerObject_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_MTreecLcLTriggerObject(void *p = 0);
   static void *newArray_MTreecLcLTriggerObject(Long_t size, void *p);
   static void delete_MTreecLcLTriggerObject(void *p);
   static void deleteArray_MTreecLcLTriggerObject(void *p);
   static void destruct_MTreecLcLTriggerObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MTree::TriggerObject*)
   {
      ::MTree::TriggerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTree::TriggerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTree::TriggerObject", ::MTree::TriggerObject::Class_Version(), "./MTree/TriggerObject.h", 20,
                  typeid(::MTree::TriggerObject), DefineBehavior(ptr, ptr),
                  &::MTree::TriggerObject::Dictionary, isa_proxy, 4,
                  sizeof(::MTree::TriggerObject) );
      instance.SetNew(&new_MTreecLcLTriggerObject);
      instance.SetNewArray(&newArray_MTreecLcLTriggerObject);
      instance.SetDelete(&delete_MTreecLcLTriggerObject);
      instance.SetDeleteArray(&deleteArray_MTreecLcLTriggerObject);
      instance.SetDestructor(&destruct_MTreecLcLTriggerObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MTree::TriggerObject*)
   {
      return GenerateInitInstanceLocal((::MTree::TriggerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTree::TriggerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace MTree {
//______________________________________________________________________________
TClass *PrimaryVertex::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PrimaryVertex::Class_Name()
{
   return "MTree::PrimaryVertex";
}

//______________________________________________________________________________
const char *PrimaryVertex::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::PrimaryVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PrimaryVertex::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::PrimaryVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PrimaryVertex::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::PrimaryVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PrimaryVertex::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::PrimaryVertex*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Track::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Track::Class_Name()
{
   return "MTree::Track";
}

//______________________________________________________________________________
const char *Track::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Track::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Track::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Track::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Track*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Lepton::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Lepton::Class_Name()
{
   return "MTree::Lepton";
}

//______________________________________________________________________________
const char *Lepton::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Lepton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Lepton::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Lepton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Lepton::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Lepton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Lepton::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Lepton*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Electron::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Electron::Class_Name()
{
   return "MTree::Electron";
}

//______________________________________________________________________________
const char *Electron::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Electron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Electron::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Electron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Electron::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Electron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Electron::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Electron*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Photon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Photon::Class_Name()
{
   return "MTree::Photon";
}

//______________________________________________________________________________
const char *Photon::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Photon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Photon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Photon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Photon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Photon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Photon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Photon*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *EventInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EventInfo::Class_Name()
{
   return "MTree::EventInfo";
}

//______________________________________________________________________________
const char *EventInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::EventInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::EventInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::EventInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::EventInfo*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Jet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Jet::Class_Name()
{
   return "MTree::Jet";
}

//______________________________________________________________________________
const char *Jet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Jet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Jet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Jet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Jet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Jet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Jet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Jet*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *MissingET::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MissingET::Class_Name()
{
   return "MTree::MissingET";
}

//______________________________________________________________________________
const char *MissingET::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::MissingET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MissingET::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::MissingET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MissingET::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::MissingET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MissingET::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::MissingET*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Muon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Muon::Class_Name()
{
   return "MTree::Muon";
}

//______________________________________________________________________________
const char *Muon::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Muon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Muon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Muon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Muon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Muon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Muon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Muon*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *Trigger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Trigger::Class_Name()
{
   return "MTree::Trigger";
}

//______________________________________________________________________________
const char *Trigger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Trigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Trigger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::Trigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Trigger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Trigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Trigger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::Trigger*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *TruthParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TruthParticle::Class_Name()
{
   return "MTree::TruthParticle";
}

//______________________________________________________________________________
const char *TruthParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::TruthParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TruthParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::TruthParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TruthParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::TruthParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TruthParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::TruthParticle*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *L1TriggerROI::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *L1TriggerROI::Class_Name()
{
   return "MTree::L1TriggerROI";
}

//______________________________________________________________________________
const char *L1TriggerROI::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::L1TriggerROI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int L1TriggerROI::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::L1TriggerROI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void L1TriggerROI::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::L1TriggerROI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *L1TriggerROI::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::L1TriggerROI*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *HLTTriggerROI::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *HLTTriggerROI::Class_Name()
{
   return "MTree::HLTTriggerROI";
}

//______________________________________________________________________________
const char *HLTTriggerROI::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::HLTTriggerROI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HLTTriggerROI::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::HLTTriggerROI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HLTTriggerROI::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::HLTTriggerROI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HLTTriggerROI::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::HLTTriggerROI*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
TClass *TriggerObject::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerObject::Class_Name()
{
   return "MTree::TriggerObject";
}

//______________________________________________________________________________
const char *TriggerObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::TriggerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MTree::TriggerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::TriggerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerObject::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MTree::TriggerObject*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MTree
      namespace MTree {
//______________________________________________________________________________
void Lepton::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Lepton.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Lepton::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Lepton::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Lepton::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Lepton.
      TClass *R__cl = ::MTree::Lepton::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_Author", &_Author);
      R__insp.Inspect(R__cl, R__parent, "_Charge", &_Charge);
      R__insp.Inspect(R__cl, R__parent, "_LeptonPdgID", &_LeptonPdgID);
      R__insp.Inspect(R__cl, R__parent, "_Track", &_Track);
      _Track.ShowMembers(R__insp, strcat(R__parent,"_Track.")); R__parent[R__ncp] = 0;
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLLepton(void *p) {
      return  p ? new(p) ::MTree::Lepton : new ::MTree::Lepton;
   }
   static void *newArray_MTreecLcLLepton(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Lepton[nElements] : new ::MTree::Lepton[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLLepton(void *p) {
      delete ((::MTree::Lepton*)p);
   }
   static void deleteArray_MTreecLcLLepton(void *p) {
      delete [] ((::MTree::Lepton*)p);
   }
   static void destruct_MTreecLcLLepton(void *p) {
      typedef ::MTree::Lepton current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Lepton

      namespace MTree {
//______________________________________________________________________________
void Electron::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Electron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Electron::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Electron::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Electron::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Electron.
      TClass *R__cl = ::MTree::Electron::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_EOverP", &_EOverP);
      R__insp.Inspect(R__cl, R__parent, "_ETCone20", &_ETCone20);
      R__insp.Inspect(R__cl, R__parent, "_ETCone30", &_ETCone30);
      R__insp.Inspect(R__cl, R__parent, "_ETCone40", &_ETCone40);
      R__insp.Inspect(R__cl, R__parent, "_ETCone45", &_ETCone45);
      R__insp.Inspect(R__cl, R__parent, "_E233", &_E233);
      R__insp.Inspect(R__cl, R__parent, "_E237", &_E237);
      R__insp.Inspect(R__cl, R__parent, "_E277", &_E277);
      R__insp.Inspect(R__cl, R__parent, "_EtHad", &_EtHad);
      R__insp.Inspect(R__cl, R__parent, "_F1", &_F1);
      R__insp.Inspect(R__cl, R__parent, "_F1Core", &_F1Core);
      R__insp.Inspect(R__cl, R__parent, "_Fracs1", &_Fracs1);
      R__insp.Inspect(R__cl, R__parent, "_Iso", &_Iso);
      R__insp.Inspect(R__cl, R__parent, "_TrackRefit", &_TrackRefit);
      R__insp.Inspect(R__cl, R__parent, "_ZVertex", &_ZVertex);
      R__insp.Inspect(R__cl, R__parent, "_ErrZ", &_ErrZ);
      R__insp.Inspect(R__cl, R__parent, "_IsConvertedPhoton", &_IsConvertedPhoton);
      R__insp.Inspect(R__cl, R__parent, "_ConvTrackMatch", &_ConvTrackMatch);
      R__insp.Inspect(R__cl, R__parent, "_ConvAngleMatch", &_ConvAngleMatch);
      R__insp.Inspect(R__cl, R__parent, "_IsEM", &_IsEM);
      R__insp.Inspect(R__cl, R__parent, "_IsGoodOQ", &_IsGoodOQ);
      R__insp.Inspect(R__cl, R__parent, "_PassedOQ", &_PassedOQ);
      R__insp.Inspect(R__cl, R__parent, "_ElectronWeight", &_ElectronWeight);
      R__insp.Inspect(R__cl, R__parent, "_BgWeight", &_BgWeight);
      R__insp.Inspect(R__cl, R__parent, "_NeuralNet", &_NeuralNet);
      R__insp.Inspect(R__cl, R__parent, "_HMatrix", &_HMatrix);
      R__insp.Inspect(R__cl, R__parent, "_HMatrix5", &_HMatrix5);
      R__insp.Inspect(R__cl, R__parent, "_IsolationLikelihood", &_IsolationLikelihood);
      R__insp.Inspect(R__cl, R__parent, "_AdaBoost", &_AdaBoost);
      R__insp.Inspect(R__cl, R__parent, "_PhotonWeight", &_PhotonWeight);
      R__insp.Inspect(R__cl, R__parent, "_BgPhotonWeight", &_BgPhotonWeight);
      R__insp.Inspect(R__cl, R__parent, "_EBoost", &_EBoost);
      R__insp.Inspect(R__cl, R__parent, "_EtHad1", &_EtHad1);
      R__insp.Inspect(R__cl, R__parent, "_WEta2", &_WEta2);
      R__insp.Inspect(R__cl, R__parent, "_E2Tsts1", &_E2Tsts1);
      R__insp.Inspect(R__cl, R__parent, "_EMins1", &_EMins1);
      R__insp.Inspect(R__cl, R__parent, "_WTots1", &_WTots1);
      R__insp.Inspect(R__cl, R__parent, "_WEta1", &_WEta1);
      R__insp.Inspect(R__cl, R__parent, "_DeltaEta0", &_DeltaEta0);
      R__insp.Inspect(R__cl, R__parent, "_DeltaEta1", &_DeltaEta1);
      R__insp.Inspect(R__cl, R__parent, "_DeltaEta2", &_DeltaEta2);
      R__insp.Inspect(R__cl, R__parent, "_DeltaEta3", &_DeltaEta3);
      R__insp.Inspect(R__cl, R__parent, "_DeltaPhi0", &_DeltaPhi0);
      R__insp.Inspect(R__cl, R__parent, "_DeltaPhi1", &_DeltaPhi1);
      R__insp.Inspect(R__cl, R__parent, "_DeltaPhi2", &_DeltaPhi2);
      R__insp.Inspect(R__cl, R__parent, "_DeltaPhi3", &_DeltaPhi3);
      R__insp.Inspect(R__cl, R__parent, "_EtaP", &_EtaP);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso10", &_TrackIso10);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso20", &_TrackIso20);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso30", &_TrackIso30);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso40", &_TrackIso40);
      R__insp.Inspect(R__cl, R__parent, "_PTCone10", &_PTCone10);
      R__insp.Inspect(R__cl, R__parent, "_PTCone20", &_PTCone20);
      R__insp.Inspect(R__cl, R__parent, "_PTCone30", &_PTCone30);
      R__insp.Inspect(R__cl, R__parent, "_PTCone40", &_PTCone40);
      R__insp.Inspect(R__cl, R__parent, "_ClusterEta", &_ClusterEta);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPhi", &_ClusterPhi);
      R__insp.Inspect(R__cl, R__parent, "_ClusterE", &_ClusterE);
      R__insp.Inspect(R__cl, R__parent, "_ClusterM", &_ClusterM);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPt", &_ClusterPt);
      R__insp.Inspect(R__cl, R__parent, "_ClusterEtaEMB2", &_ClusterEtaEMB2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterEtaEME2", &_ClusterEtaEME2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPhiEMB2", &_ClusterPhiEMB2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPhiEME2", &_ClusterPhiEME2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterBECombEta", &_ClusterBECombEta);
      R__insp.Inspect(R__cl, R__parent, "_ClusterBECombPhi", &_ClusterBECombPhi);
      R__insp.Inspect(R__cl, R__parent, "_ClusterBECombE", &_ClusterBECombE);
      R__insp.Inspect(R__cl, R__parent, "_IsLoose", &_IsLoose);
      R__insp.Inspect(R__cl, R__parent, "_IsMedium", &_IsMedium);
      R__insp.Inspect(R__cl, R__parent, "_IsMediumIso", &_IsMediumIso);
      R__insp.Inspect(R__cl, R__parent, "_IsTight", &_IsTight);
      R__insp.Inspect(R__cl, R__parent, "_IsTightIso", &_IsTightIso);
      R__insp.Inspect(R__cl, R__parent, "_ExpectHitInBLayer", &_ExpectHitInBLayer);
      R__insp.Inspect(R__cl, R__parent, "_TruthParticleType", &_TruthParticleType);
      R__insp.Inspect(R__cl, R__parent, "_TruthParticleOrigin", &_TruthParticleOrigin);
      R__insp.Inspect(R__cl, R__parent, "_NConversions", &_NConversions);
      R__insp.Inspect(R__cl, R__parent, "_METWex", &_METWex);
      R__insp.Inspect(R__cl, R__parent, "_METWey", &_METWey);
      R__insp.Inspect(R__cl, R__parent, "_METWet", &_METWet);
      //This works around a msvc bug and should be harmless on other platforms
      typedef MTree::Lepton baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLElectron(void *p) {
      return  p ? new(p) ::MTree::Electron : new ::MTree::Electron;
   }
   static void *newArray_MTreecLcLElectron(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Electron[nElements] : new ::MTree::Electron[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLElectron(void *p) {
      delete ((::MTree::Electron*)p);
   }
   static void deleteArray_MTreecLcLElectron(void *p) {
      delete [] ((::MTree::Electron*)p);
   }
   static void destruct_MTreecLcLElectron(void *p) {
      typedef ::MTree::Electron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Electron

      namespace MTree {
//______________________________________________________________________________
void Photon::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Photon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Photon::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Photon::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Photon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Photon.
      TClass *R__cl = ::MTree::Photon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_Author", &_Author);
      R__insp.Inspect(R__cl, R__parent, "_EOverP", &_EOverP);
      R__insp.Inspect(R__cl, R__parent, "_ETCone20", &_ETCone20);
      R__insp.Inspect(R__cl, R__parent, "_ETCone30", &_ETCone30);
      R__insp.Inspect(R__cl, R__parent, "_ETCone40", &_ETCone40);
      R__insp.Inspect(R__cl, R__parent, "_ETCone45", &_ETCone45);
      R__insp.Inspect(R__cl, R__parent, "_ETCone40PtCorr", &_ETCone40PtCorr);
      R__insp.Inspect(R__cl, R__parent, "_ETCone40EDCorr", &_ETCone40EDCorr);
      R__insp.Inspect(R__cl, R__parent, "_ETCone40Corr", &_ETCone40Corr);
      R__insp.Inspect(R__cl, R__parent, "_E233", &_E233);
      R__insp.Inspect(R__cl, R__parent, "_E237", &_E237);
      R__insp.Inspect(R__cl, R__parent, "_E277", &_E277);
      R__insp.Inspect(R__cl, R__parent, "_EtHad", &_EtHad);
      R__insp.Inspect(R__cl, R__parent, "_F1", &_F1);
      R__insp.Inspect(R__cl, R__parent, "_F1Core", &_F1Core);
      R__insp.Inspect(R__cl, R__parent, "_Fracs1", &_Fracs1);
      R__insp.Inspect(R__cl, R__parent, "_Iso", &_Iso);
      R__insp.Inspect(R__cl, R__parent, "_TrackRefit", &_TrackRefit);
      R__insp.Inspect(R__cl, R__parent, "_ZVertex", &_ZVertex);
      R__insp.Inspect(R__cl, R__parent, "_ErrZ", &_ErrZ);
      R__insp.Inspect(R__cl, R__parent, "_IsConvertedPhoton", &_IsConvertedPhoton);
      R__insp.Inspect(R__cl, R__parent, "_ConvTrackMatch", &_ConvTrackMatch);
      R__insp.Inspect(R__cl, R__parent, "_ConvAngleMatch", &_ConvAngleMatch);
      R__insp.Inspect(R__cl, R__parent, "_IsEM", &_IsEM);
      R__insp.Inspect(R__cl, R__parent, "_ElectronWeight", &_ElectronWeight);
      R__insp.Inspect(R__cl, R__parent, "_BgWeight", &_BgWeight);
      R__insp.Inspect(R__cl, R__parent, "_NeuralNet", &_NeuralNet);
      R__insp.Inspect(R__cl, R__parent, "_HMatrix", &_HMatrix);
      R__insp.Inspect(R__cl, R__parent, "_HMatrix5", &_HMatrix5);
      R__insp.Inspect(R__cl, R__parent, "_IsolationLikelihood", &_IsolationLikelihood);
      R__insp.Inspect(R__cl, R__parent, "_AdaBoost", &_AdaBoost);
      R__insp.Inspect(R__cl, R__parent, "_PhotonWeight", &_PhotonWeight);
      R__insp.Inspect(R__cl, R__parent, "_BgPhotonWeight", &_BgPhotonWeight);
      R__insp.Inspect(R__cl, R__parent, "_ClusterEta", &_ClusterEta);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPhi", &_ClusterPhi);
      R__insp.Inspect(R__cl, R__parent, "_ClusterE", &_ClusterE);
      R__insp.Inspect(R__cl, R__parent, "_ClusterM", &_ClusterM);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPt", &_ClusterPt);
      R__insp.Inspect(R__cl, R__parent, "_ClusterEtaEMB2", &_ClusterEtaEMB2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterEtaEME2", &_ClusterEtaEME2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPhiEMB2", &_ClusterPhiEMB2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterPhiEME2", &_ClusterPhiEME2);
      R__insp.Inspect(R__cl, R__parent, "_ClusterBECombEta", &_ClusterBECombEta);
      R__insp.Inspect(R__cl, R__parent, "_ClusterBECombPhi", &_ClusterBECombPhi);
      R__insp.Inspect(R__cl, R__parent, "_ClusterBECombE", &_ClusterBECombE);
      R__insp.Inspect(R__cl, R__parent, "_IsLoose", &_IsLoose);
      R__insp.Inspect(R__cl, R__parent, "_IsLooseAR", &_IsLooseAR);
      R__insp.Inspect(R__cl, R__parent, "_IsTight", &_IsTight);
      R__insp.Inspect(R__cl, R__parent, "_IsTightIso", &_IsTightIso);
      R__insp.Inspect(R__cl, R__parent, "_IsTightAR", &_IsTightAR);
      R__insp.Inspect(R__cl, R__parent, "_IsTightARIso", &_IsTightARIso);
      R__insp.Inspect(R__cl, R__parent, "_METWex", &_METWex);
      R__insp.Inspect(R__cl, R__parent, "_METWey", &_METWey);
      R__insp.Inspect(R__cl, R__parent, "_METWet", &_METWet);
      R__insp.Inspect(R__cl, R__parent, "_ETHad1", &_ETHad1);
      R__insp.Inspect(R__cl, R__parent, "_WEta2", &_WEta2);
      R__insp.Inspect(R__cl, R__parent, "_EMaxs1", &_EMaxs1);
      R__insp.Inspect(R__cl, R__parent, "_EMaxs2", &_EMaxs2);
      R__insp.Inspect(R__cl, R__parent, "_EMin", &_EMin);
      R__insp.Inspect(R__cl, R__parent, "_Fracm", &_Fracm);
      R__insp.Inspect(R__cl, R__parent, "_WTot", &_WTot);
      R__insp.Inspect(R__cl, R__parent, "_W1", &_W1);
      R__insp.Inspect(R__cl, R__parent, "_ConvFlag", &_ConvFlag);
      R__insp.Inspect(R__cl, R__parent, "_IsConv", &_IsConv);
      R__insp.Inspect(R__cl, R__parent, "_NConv", &_NConv);
      R__insp.Inspect(R__cl, R__parent, "_NSingleTrackConv", &_NSingleTrackConv);
      R__insp.Inspect(R__cl, R__parent, "_NDoubleTrackConv", &_NDoubleTrackConv);
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLPhoton(void *p) {
      return  p ? new(p) ::MTree::Photon : new ::MTree::Photon;
   }
   static void *newArray_MTreecLcLPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Photon[nElements] : new ::MTree::Photon[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLPhoton(void *p) {
      delete ((::MTree::Photon*)p);
   }
   static void deleteArray_MTreecLcLPhoton(void *p) {
      delete [] ((::MTree::Photon*)p);
   }
   static void destruct_MTreecLcLPhoton(void *p) {
      typedef ::MTree::Photon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Photon

      namespace MTree {
//______________________________________________________________________________
void EventInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::EventInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::EventInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::EventInfo::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void EventInfo::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::EventInfo.
      TClass *R__cl = ::MTree::EventInfo::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_RunNumber", &_RunNumber);
      R__insp.Inspect(R__cl, R__parent, "_EventNumber", &_EventNumber);
      R__insp.Inspect(R__cl, R__parent, "_EventWeight", &_EventWeight);
      R__insp.Inspect(R__cl, R__parent, "_BunchCrossID", &_BunchCrossID);
      R__insp.Inspect(R__cl, R__parent, "_LumiBlock", &_LumiBlock);
      R__insp.Inspect(R__cl, R__parent, "_LArError", &_LArError);
      R__insp.Inspect(R__cl, R__parent, "_GeneratorEventWeight", &_GeneratorEventWeight);
      R__insp.Inspect(R__cl, R__parent, "_SignalProcessID", &_SignalProcessID);
      R__insp.Inspect(R__cl, R__parent, "_MCEventNumber", &_MCEventNumber);
      R__insp.Inspect(R__cl, R__parent, "_EventScale", &_EventScale);
      R__insp.Inspect(R__cl, R__parent, "_AlphaQCD", &_AlphaQCD);
      R__insp.Inspect(R__cl, R__parent, "_AlphaQED", &_AlphaQED);
      R__insp.Inspect(R__cl, R__parent, "_PdfID1", &_PdfID1);
      R__insp.Inspect(R__cl, R__parent, "_PdfID2", &_PdfID2);
      R__insp.Inspect(R__cl, R__parent, "_PdfX1", &_PdfX1);
      R__insp.Inspect(R__cl, R__parent, "_PdfX2", &_PdfX2);
      R__insp.Inspect(R__cl, R__parent, "_PdfScale", &_PdfScale);
      R__insp.Inspect(R__cl, R__parent, "_Pdf1", &_Pdf1);
      R__insp.Inspect(R__cl, R__parent, "_Pdf2", &_Pdf2);
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLEventInfo(void *p) {
      return  p ? new(p) ::MTree::EventInfo : new ::MTree::EventInfo;
   }
   static void *newArray_MTreecLcLEventInfo(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::EventInfo[nElements] : new ::MTree::EventInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLEventInfo(void *p) {
      delete ((::MTree::EventInfo*)p);
   }
   static void deleteArray_MTreecLcLEventInfo(void *p) {
      delete [] ((::MTree::EventInfo*)p);
   }
   static void destruct_MTreecLcLEventInfo(void *p) {
      typedef ::MTree::EventInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::EventInfo

      namespace MTree {
//______________________________________________________________________________
void Jet::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Jet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Jet::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Jet::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Jet::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Jet.
      TClass *R__cl = ::MTree::Jet::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_IP3D", &_IP3D);
      R__insp.Inspect(R__cl, R__parent, "_SV0", &_SV0);
      R__insp.Inspect(R__cl, R__parent, "_SV1", &_SV1);
      R__insp.Inspect(R__cl, R__parent, "_SV2", &_SV2);
      R__insp.Inspect(R__cl, R__parent, "_Weight", &_Weight);
      R__insp.Inspect(R__cl, R__parent, "_CSIP", &_CSIP);
      R__insp.Inspect(R__cl, R__parent, "_JetProb", &_JetProb);
      R__insp.Inspect(R__cl, R__parent, "_JetFitTag", &_JetFitTag);
      R__insp.Inspect(R__cl, R__parent, "_JetFitCOMB", &_JetFitCOMB);
      R__insp.Inspect(R__cl, R__parent, "_JetFitTagNN", &_JetFitTagNN);
      R__insp.Inspect(R__cl, R__parent, "_JetFitCOMBNN", &_JetFitCOMBNN);
      R__insp.Inspect(R__cl, R__parent, "_JetEMFraction", &_JetEMFraction);
      R__insp.Inspect(R__cl, R__parent, "_N90Tool", &_N90Tool);
      R__insp.Inspect(R__cl, R__parent, "_N90Constituents", &_N90Constituents);
      R__insp.Inspect(R__cl, R__parent, "_SamplingMax", &_SamplingMax);
      R__insp.Inspect(R__cl, R__parent, "_SamplingMaxFrac", &_SamplingMaxFrac);
      R__insp.Inspect(R__cl, R__parent, "_HECFrac", &_HECFrac);
      R__insp.Inspect(R__cl, R__parent, "_TileGap3Frac", &_TileGap3Frac);
      R__insp.Inspect(R__cl, R__parent, "_IsGood", &_IsGood);
      R__insp.Inspect(R__cl, R__parent, "_IsBad", &_IsBad);
      R__insp.Inspect(R__cl, R__parent, "_IsUgly", &_IsUgly);
      R__insp.Inspect(R__cl, R__parent, "_RawE", &_RawE);
      R__insp.Inspect(R__cl, R__parent, "_RawPx", &_RawPx);
      R__insp.Inspect(R__cl, R__parent, "_RawPy", &_RawPy);
      R__insp.Inspect(R__cl, R__parent, "_RawPz", &_RawPz);
      R__insp.Inspect(R__cl, R__parent, "_CScaleE", &_CScaleE);
      R__insp.Inspect(R__cl, R__parent, "_CScalePx", &_CScalePx);
      R__insp.Inspect(R__cl, R__parent, "_CScalePy", &_CScalePy);
      R__insp.Inspect(R__cl, R__parent, "_CScalePz", &_CScalePz);
      R__insp.Inspect(R__cl, R__parent, "_CalE", &_CalE);
      R__insp.Inspect(R__cl, R__parent, "_CalPx", &_CalPx);
      R__insp.Inspect(R__cl, R__parent, "_CalPy", &_CalPy);
      R__insp.Inspect(R__cl, R__parent, "_CalPz", &_CalPz);
      R__insp.Inspect(R__cl, R__parent, "_JetFlavor", &_JetFlavor);
      R__insp.Inspect(R__cl, R__parent, "_TrueFlavor", &_TrueFlavor);
      R__insp.Inspect(R__cl, R__parent, "_LeadingPartonPdgID", &_LeadingPartonPdgID);
      R__insp.Inspect(R__cl, R__parent, "_LeadingPartonPt", &_LeadingPartonPt);
      R__insp.Inspect(R__cl, R__parent, "_newJetVertexFraction", &_newJetVertexFraction);
      R__insp.Inspect(R__cl, R__parent, "_newNTracks", &_newNTracks);
      R__insp.Inspect(R__cl, R__parent, "_newSumPtTracks", &_newSumPtTracks);
      R__insp.Inspect(R__cl, R__parent, "_METWex", &_METWex);
      R__insp.Inspect(R__cl, R__parent, "_METWey", &_METWey);
      R__insp.Inspect(R__cl, R__parent, "_METWet", &_METWet);
      R__insp.Inspect(R__cl, R__parent, "_jetMoments", (void*)&_jetMoments);
      ::ROOT::GenericShowMembers("map<std::string,float>", (void*)&_jetMoments, R__insp, strcat(R__parent,"_jetMoments."),false);
      R__parent[R__ncp] = 0;
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLJet(void *p) {
      return  p ? new(p) ::MTree::Jet : new ::MTree::Jet;
   }
   static void *newArray_MTreecLcLJet(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Jet[nElements] : new ::MTree::Jet[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLJet(void *p) {
      delete ((::MTree::Jet*)p);
   }
   static void deleteArray_MTreecLcLJet(void *p) {
      delete [] ((::MTree::Jet*)p);
   }
   static void destruct_MTreecLcLJet(void *p) {
      typedef ::MTree::Jet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Jet

      namespace MTree {
//______________________________________________________________________________
void MissingET::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::MissingET.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::MissingET::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::MissingET::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void MissingET::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::MissingET.
      TClass *R__cl = ::MTree::MissingET::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_SumET", &_SumET);
      R__insp.Inspect(R__cl, R__parent, "_METTerm", &_METTerm);
      _METTerm.ShowMembers(R__insp, strcat(R__parent,"_METTerm.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_ExCentralRegion", &_ExCentralRegion);
      R__insp.Inspect(R__cl, R__parent, "_ExEndcapRegion", &_ExEndcapRegion);
      R__insp.Inspect(R__cl, R__parent, "_ExForwardRegion", &_ExForwardRegion);
      R__insp.Inspect(R__cl, R__parent, "_EyCentralRegion", &_EyCentralRegion);
      R__insp.Inspect(R__cl, R__parent, "_EyEndcapRegion", &_EyEndcapRegion);
      R__insp.Inspect(R__cl, R__parent, "_EyForwardRegion", &_EyForwardRegion);
      R__insp.Inspect(R__cl, R__parent, "_SumETCentralRegion", &_SumETCentralRegion);
      R__insp.Inspect(R__cl, R__parent, "_SumETEndcapRegion", &_SumETEndcapRegion);
      R__insp.Inspect(R__cl, R__parent, "_SumETForwardRegion", &_SumETForwardRegion);
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLMissingET(void *p) {
      return  p ? new(p) ::MTree::MissingET : new ::MTree::MissingET;
   }
   static void *newArray_MTreecLcLMissingET(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::MissingET[nElements] : new ::MTree::MissingET[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLMissingET(void *p) {
      delete ((::MTree::MissingET*)p);
   }
   static void deleteArray_MTreecLcLMissingET(void *p) {
      delete [] ((::MTree::MissingET*)p);
   }
   static void destruct_MTreecLcLMissingET(void *p) {
      typedef ::MTree::MissingET current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::MissingET

      namespace MTree {
//______________________________________________________________________________
void Muon::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Muon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Muon::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Muon::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Muon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Muon.
      TClass *R__cl = ::MTree::Muon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_ETCone10", &_ETCone10);
      R__insp.Inspect(R__cl, R__parent, "_ETCone20", &_ETCone20);
      R__insp.Inspect(R__cl, R__parent, "_ETCone30", &_ETCone30);
      R__insp.Inspect(R__cl, R__parent, "_ETCone40", &_ETCone40);
      R__insp.Inspect(R__cl, R__parent, "_PTCone10", &_PTCone10);
      R__insp.Inspect(R__cl, R__parent, "_PTCone20", &_PTCone20);
      R__insp.Inspect(R__cl, R__parent, "_PTCone30", &_PTCone30);
      R__insp.Inspect(R__cl, R__parent, "_PTCone40", &_PTCone40);
      R__insp.Inspect(R__cl, R__parent, "_FitChi2", &_FitChi2);
      R__insp.Inspect(R__cl, R__parent, "_FitChi2OverDoF", &_FitChi2OverDoF);
      R__insp.Inspect(R__cl, R__parent, "_MatchChi2", &_MatchChi2);
      R__insp.Inspect(R__cl, R__parent, "_MatchChi2OverDoF", &_MatchChi2OverDoF);
      R__insp.Inspect(R__cl, R__parent, "_EnergyLoss", &_EnergyLoss);
      R__insp.Inspect(R__cl, R__parent, "_EtCore", &_EtCore);
      R__insp.Inspect(R__cl, R__parent, "_BestMatch", &_BestMatch);
      R__insp.Inspect(R__cl, R__parent, "_IsCombinedMuon", &_IsCombinedMuon);
      R__insp.Inspect(R__cl, R__parent, "_IsStandAloneMuon", &_IsStandAloneMuon);
      R__insp.Inspect(R__cl, R__parent, "_IsLowPtReconstructedMuon", &_IsLowPtReconstructedMuon);
      R__insp.Inspect(R__cl, R__parent, "_IsCaloMuon", &_IsCaloMuon);
      R__insp.Inspect(R__cl, R__parent, "_NrMDTHits", &_NrMDTHits);
      R__insp.Inspect(R__cl, R__parent, "_NrCSCEtaHits", &_NrCSCEtaHits);
      R__insp.Inspect(R__cl, R__parent, "_NrCSCPhiHits", &_NrCSCPhiHits);
      R__insp.Inspect(R__cl, R__parent, "_NrRPCEtaHits", &_NrRPCEtaHits);
      R__insp.Inspect(R__cl, R__parent, "_NrRPCPhiHits", &_NrRPCPhiHits);
      R__insp.Inspect(R__cl, R__parent, "_NrTGCEtaHits", &_NrTGCEtaHits);
      R__insp.Inspect(R__cl, R__parent, "_NrTGCPhiHits", &_NrTGCPhiHits);
      R__insp.Inspect(R__cl, R__parent, "_NrOfSegments", &_NrOfSegments);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso10", &_TrackIso10);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso20", &_TrackIso20);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso30", &_TrackIso30);
      R__insp.Inspect(R__cl, R__parent, "_TrackIso40", &_TrackIso40);
      R__insp.Inspect(R__cl, R__parent, "_IsLoose", &_IsLoose);
      R__insp.Inspect(R__cl, R__parent, "_IsMedium", &_IsMedium);
      R__insp.Inspect(R__cl, R__parent, "_IsTight", &_IsTight);
      R__insp.Inspect(R__cl, R__parent, "_IsMuonLikelihood", &_IsMuonLikelihood);
      R__insp.Inspect(R__cl, R__parent, "_StandAloneTrack", &_StandAloneTrack);
      _StandAloneTrack.ShowMembers(R__insp, strcat(R__parent,"_StandAloneTrack.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_METWex", &_METWex);
      R__insp.Inspect(R__cl, R__parent, "_METWey", &_METWey);
      R__insp.Inspect(R__cl, R__parent, "_METWet", &_METWet);
      //This works around a msvc bug and should be harmless on other platforms
      typedef MTree::Lepton baseClass1;
      baseClass1::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLMuon(void *p) {
      return  p ? new(p) ::MTree::Muon : new ::MTree::Muon;
   }
   static void *newArray_MTreecLcLMuon(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Muon[nElements] : new ::MTree::Muon[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLMuon(void *p) {
      delete ((::MTree::Muon*)p);
   }
   static void deleteArray_MTreecLcLMuon(void *p) {
      delete [] ((::MTree::Muon*)p);
   }
   static void destruct_MTreecLcLMuon(void *p) {
      typedef ::MTree::Muon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Muon

      namespace MTree {
//______________________________________________________________________________
void Track::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Track::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Track::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Track::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Track.
      TClass *R__cl = ::MTree::Track::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_Charge", &_Charge);
      R__insp.Inspect(R__cl, R__parent, "_NDOF", &_NDOF);
      R__insp.Inspect(R__cl, R__parent, "_Chi2", &_Chi2);
      R__insp.Inspect(R__cl, R__parent, "_D0", &_D0);
      R__insp.Inspect(R__cl, R__parent, "_D0_Err", &_D0_Err);
      R__insp.Inspect(R__cl, R__parent, "_Z0", &_Z0);
      R__insp.Inspect(R__cl, R__parent, "_Z0_Err", &_Z0_Err);
      R__insp.Inspect(R__cl, R__parent, "_Vtx_D0", &_Vtx_D0);
      R__insp.Inspect(R__cl, R__parent, "_Vtx_D0_Err", &_Vtx_D0_Err);
      R__insp.Inspect(R__cl, R__parent, "_Vtx_Z0", &_Vtx_Z0);
      R__insp.Inspect(R__cl, R__parent, "_Vtx_Z0_Err", &_Vtx_Z0_Err);
      R__insp.Inspect(R__cl, R__parent, "_Prim_Vtx_D0", &_Prim_Vtx_D0);
      R__insp.Inspect(R__cl, R__parent, "_Prim_Vtx_D0_Err", &_Prim_Vtx_D0_Err);
      R__insp.Inspect(R__cl, R__parent, "_Prim_Vtx_Z0", &_Prim_Vtx_Z0);
      R__insp.Inspect(R__cl, R__parent, "_Prim_Vtx_Z0_Err", &_Prim_Vtx_Z0_Err);
      R__insp.Inspect(R__cl, R__parent, "_ExpectBLayerHit", &_ExpectBLayerHit);
      R__insp.Inspect(R__cl, R__parent, "_NrOfBLayerHits", &_NrOfBLayerHits);
      R__insp.Inspect(R__cl, R__parent, "_NrOfPixelHits", &_NrOfPixelHits);
      R__insp.Inspect(R__cl, R__parent, "_NrOfPixelHoles", &_NrOfPixelHoles);
      R__insp.Inspect(R__cl, R__parent, "_NrOfPixelDeadSensors", &_NrOfPixelDeadSensors);
      R__insp.Inspect(R__cl, R__parent, "_NrOfSCTHits", &_NrOfSCTHits);
      R__insp.Inspect(R__cl, R__parent, "_NrOfSCTHoles", &_NrOfSCTHoles);
      R__insp.Inspect(R__cl, R__parent, "_NrOfSCTDeadSensors", &_NrOfSCTDeadSensors);
      R__insp.Inspect(R__cl, R__parent, "_NrOfTRTHits", &_NrOfTRTHits);
      R__insp.Inspect(R__cl, R__parent, "_NrOfTRTOutliers", &_NrOfTRTOutliers);
      R__insp.Inspect(R__cl, R__parent, "_NrOfTRTHighThresholdHits", &_NrOfTRTHighThresholdHits);
      R__insp.Inspect(R__cl, R__parent, "_ParticleOrigin", &_ParticleOrigin);
      R__insp.Inspect(R__cl, R__parent, "_HitMask", &_HitMask);
      R__insp.Inspect(R__cl, R__parent, "_PrimaryVertex", &_PrimaryVertex);
      _PrimaryVertex.ShowMembers(R__insp, strcat(R__parent,"_PrimaryVertex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_TrackAuthor", &_TrackAuthor);
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLTrack(void *p) {
      return  p ? new(p) ::MTree::Track : new ::MTree::Track;
   }
   static void *newArray_MTreecLcLTrack(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Track[nElements] : new ::MTree::Track[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLTrack(void *p) {
      delete ((::MTree::Track*)p);
   }
   static void deleteArray_MTreecLcLTrack(void *p) {
      delete [] ((::MTree::Track*)p);
   }
   static void destruct_MTreecLcLTrack(void *p) {
      typedef ::MTree::Track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Track

      namespace MTree {
//______________________________________________________________________________
void PrimaryVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::PrimaryVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::PrimaryVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::PrimaryVertex::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void PrimaryVertex::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::PrimaryVertex.
      TClass *R__cl = ::MTree::PrimaryVertex::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_X", &_X);
      R__insp.Inspect(R__cl, R__parent, "_Y", &_Y);
      R__insp.Inspect(R__cl, R__parent, "_Z", &_Z);
      R__insp.Inspect(R__cl, R__parent, "_Err_X", &_Err_X);
      R__insp.Inspect(R__cl, R__parent, "_Err_Y", &_Err_Y);
      R__insp.Inspect(R__cl, R__parent, "_Err_Z", &_Err_Z);
      R__insp.Inspect(R__cl, R__parent, "_NTracks", &_NTracks);
      R__insp.Inspect(R__cl, R__parent, "_Chi2", &_Chi2);
      R__insp.Inspect(R__cl, R__parent, "_NDOF", &_NDOF);
      R__insp.Inspect(R__cl, R__parent, "_Type", &_Type);
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLPrimaryVertex(void *p) {
      return  p ? new(p) ::MTree::PrimaryVertex : new ::MTree::PrimaryVertex;
   }
   static void *newArray_MTreecLcLPrimaryVertex(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::PrimaryVertex[nElements] : new ::MTree::PrimaryVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLPrimaryVertex(void *p) {
      delete ((::MTree::PrimaryVertex*)p);
   }
   static void deleteArray_MTreecLcLPrimaryVertex(void *p) {
      delete [] ((::MTree::PrimaryVertex*)p);
   }
   static void destruct_MTreecLcLPrimaryVertex(void *p) {
      typedef ::MTree::PrimaryVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::PrimaryVertex

      namespace MTree {
//______________________________________________________________________________
void Trigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::Trigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::Trigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::Trigger::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void Trigger::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::Trigger.
      TClass *R__cl = ::MTree::Trigger::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*_L1TriggersPassed", &_L1TriggersPassed);
      R__insp.Inspect(R__cl, R__parent, "*_L2TriggersPassed", &_L2TriggersPassed);
      R__insp.Inspect(R__cl, R__parent, "*_EFTriggersPassed", &_EFTriggersPassed);
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLTrigger(void *p) {
      return  p ? new(p) ::MTree::Trigger : new ::MTree::Trigger;
   }
   static void *newArray_MTreecLcLTrigger(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::Trigger[nElements] : new ::MTree::Trigger[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLTrigger(void *p) {
      delete ((::MTree::Trigger*)p);
   }
   static void deleteArray_MTreecLcLTrigger(void *p) {
      delete [] ((::MTree::Trigger*)p);
   }
   static void destruct_MTreecLcLTrigger(void *p) {
      typedef ::MTree::Trigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::Trigger

      namespace MTree {
//______________________________________________________________________________
void TruthParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::TruthParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::TruthParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::TruthParticle::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void TruthParticle::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::TruthParticle.
      TClass *R__cl = ::MTree::TruthParticle::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_PdgID", &_PdgID);
      R__insp.Inspect(R__cl, R__parent, "_ParentPdgID", &_ParentPdgID);
      R__insp.Inspect(R__cl, R__parent, "_GrandParentPdgID", &_GrandParentPdgID);
      R__insp.Inspect(R__cl, R__parent, "_Status", &_Status);
      R__insp.Inspect(R__cl, R__parent, "_Parent", &_Parent);
      _Parent.ShowMembers(R__insp, strcat(R__parent,"_Parent.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_Daughters", &_Daughters);
      _Daughters.ShowMembers(R__insp, strcat(R__parent,"_Daughters.")); R__parent[R__ncp] = 0;
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLTruthParticle(void *p) {
      return  p ? new(p) ::MTree::TruthParticle : new ::MTree::TruthParticle;
   }
   static void *newArray_MTreecLcLTruthParticle(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::TruthParticle[nElements] : new ::MTree::TruthParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLTruthParticle(void *p) {
      delete ((::MTree::TruthParticle*)p);
   }
   static void deleteArray_MTreecLcLTruthParticle(void *p) {
      delete [] ((::MTree::TruthParticle*)p);
   }
   static void destruct_MTreecLcLTruthParticle(void *p) {
      typedef ::MTree::TruthParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::TruthParticle

      namespace MTree {
//______________________________________________________________________________
void L1TriggerROI::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::L1TriggerROI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::L1TriggerROI::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::L1TriggerROI::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void L1TriggerROI::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::L1TriggerROI.
      TClass *R__cl = ::MTree::L1TriggerROI::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_EtaWidth", &_EtaWidth);
      R__insp.Inspect(R__cl, R__parent, "_PhiWidth", &_PhiWidth);
      R__insp.Inspect(R__cl, R__parent, "_ROIWord", &_ROIWord);
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLL1TriggerROI(void *p) {
      return  p ? new(p) ::MTree::L1TriggerROI : new ::MTree::L1TriggerROI;
   }
   static void *newArray_MTreecLcLL1TriggerROI(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::L1TriggerROI[nElements] : new ::MTree::L1TriggerROI[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLL1TriggerROI(void *p) {
      delete ((::MTree::L1TriggerROI*)p);
   }
   static void deleteArray_MTreecLcLL1TriggerROI(void *p) {
      delete [] ((::MTree::L1TriggerROI*)p);
   }
   static void destruct_MTreecLcLL1TriggerROI(void *p) {
      typedef ::MTree::L1TriggerROI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::L1TriggerROI

      namespace MTree {
//______________________________________________________________________________
void HLTTriggerROI::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::HLTTriggerROI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::HLTTriggerROI::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::HLTTriggerROI::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void HLTTriggerROI::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::HLTTriggerROI.
      TClass *R__cl = ::MTree::HLTTriggerROI::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_EtaWidth", &_EtaWidth);
      R__insp.Inspect(R__cl, R__parent, "_PhiWidth", &_PhiWidth);
      R__insp.Inspect(R__cl, R__parent, "_ROIWord", &_ROIWord);
      R__insp.Inspect(R__cl, R__parent, "*_HLTNames", &_HLTNames);
      TLorentzVector::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLHLTTriggerROI(void *p) {
      return  p ? new(p) ::MTree::HLTTriggerROI : new ::MTree::HLTTriggerROI;
   }
   static void *newArray_MTreecLcLHLTTriggerROI(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::HLTTriggerROI[nElements] : new ::MTree::HLTTriggerROI[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLHLTTriggerROI(void *p) {
      delete ((::MTree::HLTTriggerROI*)p);
   }
   static void deleteArray_MTreecLcLHLTTriggerROI(void *p) {
      delete [] ((::MTree::HLTTriggerROI*)p);
   }
   static void destruct_MTreecLcLHLTTriggerROI(void *p) {
      typedef ::MTree::HLTTriggerROI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::HLTTriggerROI

      namespace MTree {
//______________________________________________________________________________
void TriggerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTree::TriggerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTree::TriggerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTree::TriggerObject::Class(),this);
   }
}

} // namespace MTree
//______________________________________________________________________________
      namespace MTree {
void TriggerObject::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class MTree::TriggerObject.
      TClass *R__cl = ::MTree::TriggerObject::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "_triggerNames", (void*)&_triggerNames);
      ::ROOT::GenericShowMembers("set<std::string>", (void*)&_triggerNames, R__insp, strcat(R__parent,"_triggerNames."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_Authors", (void*)&_Authors);
      ::ROOT::GenericShowMembers("set<int>", (void*)&_Authors, R__insp, strcat(R__parent,"_Authors."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "_Pt", &_Pt);
      R__insp.Inspect(R__cl, R__parent, "_Eta", &_Eta);
      R__insp.Inspect(R__cl, R__parent, "_Phi", &_Phi);
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace MTree
namespace ROOT {
   // Wrappers around operator new
   static void *new_MTreecLcLTriggerObject(void *p) {
      return  p ? new(p) ::MTree::TriggerObject : new ::MTree::TriggerObject;
   }
   static void *newArray_MTreecLcLTriggerObject(Long_t nElements, void *p) {
      return p ? new(p) ::MTree::TriggerObject[nElements] : new ::MTree::TriggerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTreecLcLTriggerObject(void *p) {
      delete ((::MTree::TriggerObject*)p);
   }
   static void deleteArray_MTreecLcLTriggerObject(void *p) {
      delete [] ((::MTree::TriggerObject*)p);
   }
   static void destruct_MTreecLcLTriggerObject(void *p) {
      typedef ::MTree::TriggerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MTree::TriggerObject

namespace ROOT {
   void maplEstringcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEstringcOfloatgR_Dictionary();
   static void *new_maplEstringcOfloatgR(void *p = 0);
   static void *newArray_maplEstringcOfloatgR(Long_t size, void *p);
   static void delete_maplEstringcOfloatgR(void *p);
   static void deleteArray_maplEstringcOfloatgR(void *p);
   static void destruct_maplEstringcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,float>*)
   {
      map<string,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,float>", -2, "map.dll", 0,
                  typeid(map<string,float>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,float>) );
      instance.SetNew(&new_maplEstringcOfloatgR);
      instance.SetNewArray(&newArray_maplEstringcOfloatgR);
      instance.SetDelete(&delete_maplEstringcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOfloatgR);
      instance.SetDestructor(&destruct_maplEstringcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float> : new map<string,float>;
   }
   static void *newArray_maplEstringcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,float>[nElements] : new map<string,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOfloatgR(void *p) {
      delete ((map<string,float>*)p);
   }
   static void deleteArray_maplEstringcOfloatgR(void *p) {
      delete [] ((map<string,float>*)p);
   }
   static void destruct_maplEstringcOfloatgR(void *p) {
      typedef map<string,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,float>

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

namespace ROOT {
   void setlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void setlEstringgR_Dictionary();
   static void *new_setlEstringgR(void *p = 0);
   static void *newArray_setlEstringgR(Long_t size, void *p);
   static void delete_setlEstringgR(void *p);
   static void deleteArray_setlEstringgR(void *p);
   static void destruct_setlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<string>*)
   {
      set<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<string>", -2, "set.dll", 0,
                  typeid(set<string>), DefineBehavior(ptr, ptr),
                  0, &setlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(set<string>) );
      instance.SetNew(&new_setlEstringgR);
      instance.SetNewArray(&newArray_setlEstringgR);
      instance.SetDelete(&delete_setlEstringgR);
      instance.SetDeleteArray(&deleteArray_setlEstringgR);
      instance.SetDestructor(&destruct_setlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string> : new set<string>;
   }
   static void *newArray_setlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<string>[nElements] : new set<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEstringgR(void *p) {
      delete ((set<string>*)p);
   }
   static void deleteArray_setlEstringgR(void *p) {
      delete [] ((set<string>*)p);
   }
   static void destruct_setlEstringgR(void *p) {
      typedef set<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<string>

/********************************************************
* MTreeIO.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMTreeIO();

extern "C" void G__set_cpp_environmentMTreeIO() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MTree/Lepton.h");
  G__add_compiledheader("MTree/Electron.h");
  G__add_compiledheader("MTree/Photon.h");
  G__add_compiledheader("MTree/EventInfo.h");
  G__add_compiledheader("MTree/Jet.h");
  G__add_compiledheader("MTree/MissingET.h");
  G__add_compiledheader("MTree/Muon.h");
  G__add_compiledheader("MTree/Track.h");
  G__add_compiledheader("MTree/PrimaryVertex.h");
  G__add_compiledheader("MTree/Trigger.h");
  G__add_compiledheader("MTree/TruthParticle.h");
  G__add_compiledheader("MTree/L1TriggerROI.h");
  G__add_compiledheader("MTree/HLTTriggerROI.h");
  G__add_compiledheader("MTree/TriggerObject.h");
  G__cpp_reset_tagtableMTreeIO();
}
#include <new>
extern "C" int G__cpp_dllrevMTreeIO() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MTree */

/* MTree::PrimaryVertex */
static int G__MTreeIO_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::PrimaryVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::PrimaryVertex[n];
     } else {
       p = new((void*) gvp) MTree::PrimaryVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::PrimaryVertex;
     } else {
       p = new((void*) gvp) MTree::PrimaryVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::PrimaryVertex*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (double) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::PrimaryVertex*) G__getstructoffset())->ClearVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->ErrorX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->ErrorY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->ErrorZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::PrimaryVertex*) G__getstructoffset())->NTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::PrimaryVertex*) G__getstructoffset())->Chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::PrimaryVertex*) G__getstructoffset())->NDOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::PrimaryVertex*) G__getstructoffset())->Type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::PrimaryVertex*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::PrimaryVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::PrimaryVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::PrimaryVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::PrimaryVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::PrimaryVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::PrimaryVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::PrimaryVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::PrimaryVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_243_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::PrimaryVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_243_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::PrimaryVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::PrimaryVertex(*(MTree::PrimaryVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::PrimaryVertex G__TMTreecLcLPrimaryVertex;
static int G__MTreeIO_243_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::PrimaryVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::PrimaryVertex*) (soff+(sizeof(MTree::PrimaryVertex)*i)))->~G__TMTreecLcLPrimaryVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::PrimaryVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::PrimaryVertex*) (soff))->~G__TMTreecLcLPrimaryVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_243_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::PrimaryVertex* dest = (MTree::PrimaryVertex*) G__getstructoffset();
   *dest = *(MTree::PrimaryVertex*) libp->para[0].ref;
   const MTree::PrimaryVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Track */
static int G__MTreeIO_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Track* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Track[n];
     } else {
       p = new((void*) gvp) MTree::Track[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Track;
     } else {
       p = new((void*) gvp) MTree::Track;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Track*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]), (float) G__double(libp->para[13])
, (float) G__double(libp->para[14]), (float) G__double(libp->para[15])
, (float) G__double(libp->para[16]), (float) G__double(libp->para[17])
, (bool) G__int(libp->para[18]), (int) G__int(libp->para[19])
, (int) G__int(libp->para[20]), (int) G__int(libp->para[21])
, (int) G__int(libp->para[22]), (int) G__int(libp->para[23])
, (int) G__int(libp->para[24]), (int) G__int(libp->para[25])
, (int) G__int(libp->para[26]), (int) G__int(libp->para[27])
, (int) G__int(libp->para[28]), (int) G__int(libp->para[29])
, (int) G__int(libp->para[30]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Track*) G__getstructoffset())->SetPrimaryVertex((MTree::PrimaryVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Track*) G__getstructoffset())->SetTrackAuthor((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NDOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Chi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->D0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->D0_Err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Z0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Z0_Err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Vtx_D0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Vtx_D0_Err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Vtx_Z0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Vtx_Z0_Err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Prim_Vtx_D0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Prim_Vtx_D0_Err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Prim_Vtx_Z0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Track*) G__getstructoffset())->Prim_Vtx_Z0_Err());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Track*) G__getstructoffset())->ExpectBLayerHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfBLayerHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfPixelHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfPixelHoles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfPixelDeadSensors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfSCTHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfSCTHoles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfSCTDeadSensors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfTRTHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfTRTOutliers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->NrOfTRTHighThresholdHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->ParticleOrigin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTree::Track*) G__getstructoffset())->GetPrimaryVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->HitMask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>* pobj;
         const vector<int> xobj = ((const MTree::Track*) G__getstructoffset())->DecodedHitMask();
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Track*) G__getstructoffset())->TrackAuthor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::Track*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_244_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_244_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Track* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Track(*(MTree::Track*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Track G__TMTreecLcLTrack;
static int G__MTreeIO_244_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Track*) (soff+(sizeof(MTree::Track)*i)))->~G__TMTreecLcLTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Track*) (soff))->~G__TMTreecLcLTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_244_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Track* dest = (MTree::Track*) G__getstructoffset();
   *dest = *(MTree::Track*) libp->para[0].ref;
   const MTree::Track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Lepton */
static int G__MTreeIO_249_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Lepton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Lepton[n];
     } else {
       p = new((void*) gvp) MTree::Lepton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Lepton;
     } else {
       p = new((void*) gvp) MTree::Lepton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Lepton*) G__getstructoffset())->InitializeLepton(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Lepton*) G__getstructoffset())->SetTrack((MTree::Track*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Lepton*) G__getstructoffset())->Author());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Lepton*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Lepton*) G__getstructoffset())->LeptonPdgID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTree::Lepton*) G__getstructoffset())->GetTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::Lepton*) G__getstructoffset())->PrintLeptonData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Lepton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Lepton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Lepton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Lepton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Lepton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Lepton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Lepton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Lepton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_249_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Lepton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_249_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Lepton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Lepton(*(MTree::Lepton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Lepton G__TMTreecLcLLepton;
static int G__MTreeIO_249_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Lepton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Lepton*) (soff+(sizeof(MTree::Lepton)*i)))->~G__TMTreecLcLLepton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Lepton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Lepton*) (soff))->~G__TMTreecLcLLepton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_249_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Lepton* dest = (MTree::Lepton*) G__getstructoffset();
   *dest = *(MTree::Lepton*) libp->para[0].ref;
   const MTree::Lepton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Electron */
static int G__MTreeIO_250_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Electron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Electron[n];
     } else {
       p = new((void*) gvp) MTree::Electron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Electron;
     } else {
       p = new((void*) gvp) MTree::Electron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (unsigned long) G__int(libp->para[5])
, (unsigned long) G__int(libp->para[6]), (bool) G__int(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]), (float) G__double(libp->para[13])
, (float) G__double(libp->para[14]), (float) G__double(libp->para[15])
, (bool) G__int(libp->para[16]), (bool) G__int(libp->para[17])
, (bool) G__int(libp->para[18]), (float) G__double(libp->para[19])
, (float) G__double(libp->para[20]), (double) G__double(libp->para[21])
, (double) G__double(libp->para[22]), (double) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->InitializeTrackIsolation(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->InitializeClusterVariables(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->InitializeExtraVariables(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]), (float) G__double(libp->para[13])
, (int) G__int(libp->para[14]), (float) G__double(libp->para[15]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->InitializeElectronFlags((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->InitializeEBoost((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->InitializeTruthClassifiers((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->SetMissingETWeights((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->EOverP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->ETCone20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->ETCone30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->ETCone40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->ETCone45());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->E233());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->E237());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->E277());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->EtHad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->F1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->F1Core());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->Fracs1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->Iso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->TrackRefit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ZVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ErrZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->METWex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->METWey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->METWet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->IsConvertedPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->ConvTrackMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->ConvAngleMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MTree::Electron*) G__getstructoffset())->IsEM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const MTree::Electron*) G__getstructoffset())->IsGoodOQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->PassedOQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->ElectronWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->BgWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->ElectronLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->NeuralNet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->HMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->HMatrix5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->IsolationLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->AdaBoost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->PhotonWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->BgPhotonWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->PhotonLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->EBoost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->EtHad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->WEta2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->E2Tsts1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->EMins1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->WTots1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->WEta1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaEta0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaEta1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaEta2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaEta3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaPhi0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaPhi1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaPhi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->DeltaPhi3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->EtaP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->TrackIso10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->TrackIso20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->TrackIso30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->TrackIso40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->PTCone20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->PTCone30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Electron*) G__getstructoffset())->PTCone40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterEtaEMB2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterEtaEME2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterPhiEMB2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterPhiEME2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterBECombEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterBECombPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Electron*) G__getstructoffset())->ClusterBECombE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Electron*) G__getstructoffset())->TruthParticleType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Electron*) G__getstructoffset())->TruthParticleOrigin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->IsLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->IsMedium());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->IsMediumIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->IsTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->IsTightIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Electron*) G__getstructoffset())->ExpectHitInBLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Electron*) G__getstructoffset())->NConversions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::Electron*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Electron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Electron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Electron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Electron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Electron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Electron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Electron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Electron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_250_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Electron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_250_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Electron* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Electron(*(MTree::Electron*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Electron G__TMTreecLcLElectron;
static int G__MTreeIO_250_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Electron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Electron*) (soff+(sizeof(MTree::Electron)*i)))->~G__TMTreecLcLElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Electron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Electron*) (soff))->~G__TMTreecLcLElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_250_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Electron* dest = (MTree::Electron*) G__getstructoffset();
   *dest = *(MTree::Electron*) libp->para[0].ref;
   const MTree::Electron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Photon */
static int G__MTreeIO_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Photon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Photon[n];
     } else {
       p = new((void*) gvp) MTree::Photon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Photon;
     } else {
       p = new((void*) gvp) MTree::Photon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (int) G__int(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]), (float) G__double(libp->para[13])
, (float) G__double(libp->para[14]), (float) G__double(libp->para[15])
, (float) G__double(libp->para[16]), (float) G__double(libp->para[17])
, (float) G__double(libp->para[18]), (bool) G__int(libp->para[19])
, (bool) G__int(libp->para[20]), (bool) G__int(libp->para[21])
, (float) G__double(libp->para[22]), (float) G__double(libp->para[23])
, (double) G__double(libp->para[24]), (double) G__double(libp->para[25])
, (double) G__double(libp->para[26]), (double) G__double(libp->para[27])
, (double) G__double(libp->para[28]), (double) G__double(libp->para[29])
, (double) G__double(libp->para[30]), (double) G__double(libp->para[31])
, (double) G__double(libp->para[32]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->InitializeClusterVariables(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->InitializeExtraClusterVariables(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->InitializeConversionVariables((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->InitializeCorrectedIsolation((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->InitializePhotonFlags((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->SetMissingETWeights((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Photon*) G__getstructoffset())->Author());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->EOverP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone45());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone40PtCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone40EDCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ETCone40Corr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->E233());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->E237());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->E277());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->EtHad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->F1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->F1Core());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->Fracs1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->Iso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->TrackRefit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ZVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ErrZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->METWex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->METWey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->METWet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ETHad1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->WEta2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->EMaxs1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->EMaxs2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->EMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->Fracm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->WTot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->W1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Photon*) G__getstructoffset())->ConvFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsConv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Photon*) G__getstructoffset())->NConv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Photon*) G__getstructoffset())->NSingleTrackConv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Photon*) G__getstructoffset())->NDoubleTrackConv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsConvertedPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->ConvTrackMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->ConvAngleMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Photon*) G__getstructoffset())->IsEM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ElectronWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->BgWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->ElectronLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->NeuralNet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->HMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->HMatrix5());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->IsolationLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->AdaBoost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->PhotonWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->BgPhotonWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Photon*) G__getstructoffset())->PhotonLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterEtaEMB2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterEtaEME2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterPhiEMB2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterPhiEME2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterBECombEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterBECombPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Photon*) G__getstructoffset())->ClusterBECombE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsLooseAR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsTightIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsTightAR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Photon*) G__getstructoffset())->IsTightARIso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::Photon*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Photon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Photon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Photon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Photon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Photon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Photon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Photon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Photon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_251_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Photon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_251_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Photon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Photon(*(MTree::Photon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Photon G__TMTreecLcLPhoton;
static int G__MTreeIO_251_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Photon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Photon*) (soff+(sizeof(MTree::Photon)*i)))->~G__TMTreecLcLPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Photon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Photon*) (soff))->~G__TMTreecLcLPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_251_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Photon* dest = (MTree::Photon*) G__getstructoffset();
   *dest = *(MTree::Photon*) libp->para[0].ref;
   const MTree::Photon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::EventInfo */
static int G__MTreeIO_252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::EventInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::EventInfo[n];
     } else {
       p = new((void*) gvp) MTree::EventInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::EventInfo;
     } else {
       p = new((void*) gvp) MTree::EventInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::EventInfo*) G__getstructoffset())->Initialize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::EventInfo*) G__getstructoffset())->SetGeneratorInfo(
(double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->RunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->EventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->EventWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->BunchCrossID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->LumiBlock());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->LArError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->GeneratorEventWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->SignalProcessID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->MCEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->EventScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->AlphaQCD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->AlphaQED());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->PdfID1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::EventInfo*) G__getstructoffset())->PdfID2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->PdfX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->PdfX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->PdfScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->Pdf1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::EventInfo*) G__getstructoffset())->Pdf2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::EventInfo*) G__getstructoffset())->ClearVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::EventInfo*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::EventInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::EventInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::EventInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::EventInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::EventInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::EventInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::EventInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::EventInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_252_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::EventInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_252_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::EventInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::EventInfo(*(MTree::EventInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::EventInfo G__TMTreecLcLEventInfo;
static int G__MTreeIO_252_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::EventInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::EventInfo*) (soff+(sizeof(MTree::EventInfo)*i)))->~G__TMTreecLcLEventInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::EventInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::EventInfo*) (soff))->~G__TMTreecLcLEventInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_252_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::EventInfo* dest = (MTree::EventInfo*) G__getstructoffset();
   *dest = *(MTree::EventInfo*) libp->para[0].ref;
   const MTree::EventInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Jet */
static int G__MTreeIO_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Jet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Jet[n];
     } else {
       p = new((void*) gvp) MTree::Jet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Jet;
     } else {
       p = new((void*) gvp) MTree::Jet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]), (float) G__double(libp->para[13])
, (float) G__double(libp->para[14]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetTrueFlavor((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetJetFlavor((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetLeadingPartonPdgID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetLeadingPartonPt((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetJetQualities((float) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetJetQualityFlags((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetRawEnergies((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetJVF((float) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetMissingETWeights((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->IP3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->SV0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->SV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->SV2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->Weight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->CSIP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetProb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetFitTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetFitCOMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetFitTagNN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetFitCOMBNN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->METWex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->METWey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->METWet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetEMFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->N90Tool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->N90Constituents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->SamplingMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->SamplingMaxFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->HECFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->TileGap3Frac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->newJetVertexFraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->newSumPtTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->newNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Jet*) G__getstructoffset())->IsGood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Jet*) G__getstructoffset())->IsBad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Jet*) G__getstructoffset())->IsUgly());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->GetRawE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->GetRawPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->GetRawEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->GetRawPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->GetRawPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->GetRawPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->TrueFlavor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->JetFlavor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Jet*) G__getstructoffset())->LeadingPartonPdgID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Jet*) G__getstructoffset())->LeadingPartonPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->SetJetMoment(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Jet*) G__getstructoffset())->JetMoment(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const MTree::Jet*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const MTree::Jet*) G__getstructoffset())->PrintData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Jet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Jet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Jet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Jet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Jet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Jet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Jet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Jet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_530_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Jet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_530_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Jet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Jet(*(MTree::Jet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Jet G__TMTreecLcLJet;
static int G__MTreeIO_530_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Jet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Jet*) (soff+(sizeof(MTree::Jet)*i)))->~G__TMTreecLcLJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Jet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Jet*) (soff))->~G__TMTreecLcLJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_530_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Jet* dest = (MTree::Jet*) G__getstructoffset();
   *dest = *(MTree::Jet*) libp->para[0].ref;
   const MTree::Jet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::MissingET */
static int G__MTreeIO_532_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::MissingET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::MissingET[n];
     } else {
       p = new((void*) gvp) MTree::MissingET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::MissingET;
     } else {
       p = new((void*) gvp) MTree::MissingET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::MissingET*) G__getstructoffset())->Initialize((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, *((TObjString*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::MissingET*) G__getstructoffset())->InitializeRegions(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::MissingET*) G__getstructoffset())->MET());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::MissingET*) G__getstructoffset())->Ey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::MissingET*) G__getstructoffset())->Ex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::MissingET*) G__getstructoffset())->SumET());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const MTree::MissingET*) G__getstructoffset())->GetTerm();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::MissingET*) G__getstructoffset())->ClearVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetExCentralRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetExEndcapRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetExForwardRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetEyCentralRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetEyEndcapRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetEyForwardRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetSumETCentralRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetSumETEndcapRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::MissingET*) G__getstructoffset())->GetSumETForwardRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::MissingET*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::MissingET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::MissingET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::MissingET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::MissingET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::MissingET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::MissingET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::MissingET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::MissingET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_532_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::MissingET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_532_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::MissingET* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::MissingET(*(MTree::MissingET*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::MissingET G__TMTreecLcLMissingET;
static int G__MTreeIO_532_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::MissingET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::MissingET*) (soff+(sizeof(MTree::MissingET)*i)))->~G__TMTreecLcLMissingET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::MissingET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::MissingET*) (soff))->~G__TMTreecLcLMissingET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_532_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::MissingET* dest = (MTree::MissingET*) G__getstructoffset();
   *dest = *(MTree::MissingET*) libp->para[0].ref;
   const MTree::MissingET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Muon */
static int G__MTreeIO_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Muon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Muon[n];
     } else {
       p = new((void*) gvp) MTree::Muon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Muon;
     } else {
       p = new((void*) gvp) MTree::Muon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Muon*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double) G__double(libp->para[8]), (double) G__double(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13])
, (bool) G__int(libp->para[14]), (bool) G__int(libp->para[15])
, (bool) G__int(libp->para[16]), (bool) G__int(libp->para[17])
, (bool) G__int(libp->para[18]), (int) G__int(libp->para[19])
, (int) G__int(libp->para[20]), (int) G__int(libp->para[21])
, (int) G__int(libp->para[22]), (int) G__int(libp->para[23])
, (int) G__int(libp->para[24]), (int) G__int(libp->para[25])
, (int) G__int(libp->para[26]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Muon*) G__getstructoffset())->InitializeTrackIsolation((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Muon*) G__getstructoffset())->InitializeMuonQuality((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Muon*) G__getstructoffset())->SetMissingETWeights((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->ETCone10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->ETCone20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->ETCone30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->ETCone40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->PTCone10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->PTCone20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->PTCone30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->PTCone40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->FitChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->FitChi2OverDoF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->MatchChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->MatchChi2OverDoF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->EnergyLoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->EtCore());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->BestMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsCombinedMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsStandAloneMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsLowPtReconstructedMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsCaloMuon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrMDTHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrCSCEtaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrCSCPhiHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrRPCEtaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrRPCPhiHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrTGCEtaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrTGCPhiHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::Muon*) G__getstructoffset())->NrOfSegments());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Muon*) G__getstructoffset())->METWex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Muon*) G__getstructoffset())->METWey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Muon*) G__getstructoffset())->METWet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->TrackIso10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->TrackIso20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->TrackIso30());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::Muon*) G__getstructoffset())->TrackIso40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsLoose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsMedium());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Muon*) G__getstructoffset())->IsTight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const MTree::Muon*) G__getstructoffset())->IsMuonLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Muon*) G__getstructoffset())->SetStandAloneTrack((MTree::Track*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTree::Muon*) G__getstructoffset())->GetStandAloneTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::Muon*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Muon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Muon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Muon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Muon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Muon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Muon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Muon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Muon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_533_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Muon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_533_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Muon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Muon(*(MTree::Muon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Muon G__TMTreecLcLMuon;
static int G__MTreeIO_533_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Muon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Muon*) (soff+(sizeof(MTree::Muon)*i)))->~G__TMTreecLcLMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Muon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Muon*) (soff))->~G__TMTreecLcLMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_533_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Muon* dest = (MTree::Muon*) G__getstructoffset();
   *dest = *(MTree::Muon*) libp->para[0].ref;
   const MTree::Muon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::Trigger */
static int G__MTreeIO_534_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Trigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Trigger[n];
     } else {
       p = new((void*) gvp) MTree::Trigger[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::Trigger;
     } else {
       p = new((void*) gvp) MTree::Trigger;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Trigger*) G__getstructoffset())->SetL1TriggersPassed(*(vector<std::string>*) libp->para[0].ref, *(vector<std::string>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Trigger*) G__getstructoffset())->SetL2TriggersPassed(*(vector<std::string>*) libp->para[0].ref, *(vector<std::string>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Trigger*) G__getstructoffset())->SetEFTriggersPassed(*(vector<std::string>*) libp->para[0].ref, *(vector<std::string>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const MTree::Trigger*) G__getstructoffset())->GetL1TriggersPassed();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const MTree::Trigger*) G__getstructoffset())->GetL2TriggersPassed();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const MTree::Trigger*) G__getstructoffset())->GetEFTriggersPassed();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedTrigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedL1Trigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedL2Trigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedEFTrigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedAnyOfL1Triggers(*(vector<std::string>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedAnyOfL2Triggers(*(vector<std::string>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::Trigger*) G__getstructoffset())->PassedAnyOfEFTriggers(*(vector<std::string>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::Trigger*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Trigger*) G__getstructoffset())->ClearVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::Trigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Trigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::Trigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::Trigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::Trigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Trigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Trigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::Trigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_534_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::Trigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_534_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::Trigger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::Trigger(*(MTree::Trigger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::Trigger G__TMTreecLcLTrigger;
static int G__MTreeIO_534_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::Trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::Trigger*) (soff+(sizeof(MTree::Trigger)*i)))->~G__TMTreecLcLTrigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::Trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::Trigger*) (soff))->~G__TMTreecLcLTrigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_534_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::Trigger* dest = (MTree::Trigger*) G__getstructoffset();
   *dest = *(MTree::Trigger*) libp->para[0].ref;
   const MTree::Trigger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::TruthParticle */
static int G__MTreeIO_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::TruthParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::TruthParticle[n];
     } else {
       p = new((void*) gvp) MTree::TruthParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::TruthParticle;
     } else {
       p = new((void*) gvp) MTree::TruthParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((MTree::TruthParticle*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((MTree::TruthParticle*) G__getstructoffset())->Initialize(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((MTree::TruthParticle*) G__getstructoffset())->Initialize((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->SetParentPdgID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->SetGrandParentPdgID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->SetParent((MTree::TruthParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->AddDaughter((MTree::TruthParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->AddDaughterAt((MTree::TruthParticle*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->RemoveDaughter((MTree::TruthParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::TruthParticle*) G__getstructoffset())->PdgID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::TruthParticle*) G__getstructoffset())->ParentPdgID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::TruthParticle*) G__getstructoffset())->GrandParentPdgID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::TruthParticle*) G__getstructoffset())->Status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTree::TruthParticle*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::TruthParticle*) G__getstructoffset())->GetNrOfDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MTree::TruthParticle*) G__getstructoffset())->GetDaughter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::TruthParticle*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::TruthParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::TruthParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::TruthParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::TruthParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TruthParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::TruthParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::TruthParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::TruthParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_543_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::TruthParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::TruthParticle G__TMTreecLcLTruthParticle;
static int G__MTreeIO_543_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::TruthParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::TruthParticle*) (soff+(sizeof(MTree::TruthParticle)*i)))->~G__TMTreecLcLTruthParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::TruthParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::TruthParticle*) (soff))->~G__TMTreecLcLTruthParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::L1TriggerROI */
static int G__MTreeIO_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::L1TriggerROI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::L1TriggerROI[n];
     } else {
       p = new((void*) gvp) MTree::L1TriggerROI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::L1TriggerROI;
     } else {
       p = new((void*) gvp) MTree::L1TriggerROI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::L1TriggerROI*) G__getstructoffset())->Initialize((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::L1TriggerROI*) G__getstructoffset())->EtaWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::L1TriggerROI*) G__getstructoffset())->PhiWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::L1TriggerROI*) G__getstructoffset())->ROIWord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::L1TriggerROI*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::L1TriggerROI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::L1TriggerROI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::L1TriggerROI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::L1TriggerROI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::L1TriggerROI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::L1TriggerROI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::L1TriggerROI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::L1TriggerROI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_544_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::L1TriggerROI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_544_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::L1TriggerROI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::L1TriggerROI(*(MTree::L1TriggerROI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::L1TriggerROI G__TMTreecLcLL1TriggerROI;
static int G__MTreeIO_544_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::L1TriggerROI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::L1TriggerROI*) (soff+(sizeof(MTree::L1TriggerROI)*i)))->~G__TMTreecLcLL1TriggerROI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::L1TriggerROI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::L1TriggerROI*) (soff))->~G__TMTreecLcLL1TriggerROI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_544_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::L1TriggerROI* dest = (MTree::L1TriggerROI*) G__getstructoffset();
   *dest = *(MTree::L1TriggerROI*) libp->para[0].ref;
   const MTree::L1TriggerROI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::HLTTriggerROI */
static int G__MTreeIO_545_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::HLTTriggerROI* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::HLTTriggerROI[n];
     } else {
       p = new((void*) gvp) MTree::HLTTriggerROI[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::HLTTriggerROI;
     } else {
       p = new((void*) gvp) MTree::HLTTriggerROI;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::HLTTriggerROI*) G__getstructoffset())->Initialize((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::HLTTriggerROI*) G__getstructoffset())->SetROINames(*(vector<std::string>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::HLTTriggerROI*) G__getstructoffset())->AddROIName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::HLTTriggerROI*) G__getstructoffset())->EtaWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::HLTTriggerROI*) G__getstructoffset())->PhiWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MTree::HLTTriggerROI*) G__getstructoffset())->ROIWord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const MTree::HLTTriggerROI*) G__getstructoffset())->GetHLTNames();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const MTree::HLTTriggerROI*) G__getstructoffset())->PassedTrigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::HLTTriggerROI*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::HLTTriggerROI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::HLTTriggerROI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::HLTTriggerROI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::HLTTriggerROI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::HLTTriggerROI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::HLTTriggerROI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::HLTTriggerROI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::HLTTriggerROI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_545_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::HLTTriggerROI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_545_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::HLTTriggerROI* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::HLTTriggerROI(*(MTree::HLTTriggerROI*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::HLTTriggerROI G__TMTreecLcLHLTTriggerROI;
static int G__MTreeIO_545_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::HLTTriggerROI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::HLTTriggerROI*) (soff+(sizeof(MTree::HLTTriggerROI)*i)))->~G__TMTreecLcLHLTTriggerROI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::HLTTriggerROI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::HLTTriggerROI*) (soff))->~G__TMTreecLcLHLTTriggerROI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_545_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::HLTTriggerROI* dest = (MTree::HLTTriggerROI*) G__getstructoffset();
   *dest = *(MTree::HLTTriggerROI*) libp->para[0].ref;
   const MTree::HLTTriggerROI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTree::TriggerObject */
static int G__MTreeIO_599_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::TriggerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::TriggerObject[n];
     } else {
       p = new((void*) gvp) MTree::TriggerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTree::TriggerObject;
     } else {
       p = new((void*) gvp) MTree::TriggerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::TriggerObject*) G__getstructoffset())->Pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::TriggerObject*) G__getstructoffset())->Eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MTree::TriggerObject*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TriggerObject*) G__getstructoffset())->Initialize((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TriggerObject*) G__getstructoffset())->SetAuthor((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TriggerObject*) G__getstructoffset())->AddTriggerName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<std::string>& obj = ((MTree::TriggerObject*) G__getstructoffset())->TriggerNames();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<int>& obj = ((MTree::TriggerObject*) G__getstructoffset())->Authors();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTree::TriggerObject*) G__getstructoffset())->PassedTrigger(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const MTree::TriggerObject*) G__getstructoffset())->PrintData(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MTree::TriggerObject*) G__getstructoffset())->IsSame((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTree::TriggerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::TriggerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTree::TriggerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTree::TriggerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTree::TriggerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::TriggerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::TriggerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTree::TriggerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MTreeIO_599_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTree::TriggerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MTreeIO_599_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTree::TriggerObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTree::TriggerObject(*(MTree::TriggerObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTree::TriggerObject G__TMTreecLcLTriggerObject;
static int G__MTreeIO_599_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTree::TriggerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTree::TriggerObject*) (soff+(sizeof(MTree::TriggerObject)*i)))->~G__TMTreecLcLTriggerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTree::TriggerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTree::TriggerObject*) (soff))->~G__TMTreecLcLTriggerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MTreeIO_599_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTree::TriggerObject* dest = (MTree::TriggerObject*) G__getstructoffset();
   *dest = *(MTree::TriggerObject*) libp->para[0].ref;
   const MTree::TriggerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MTree */

/* MTree::PrimaryVertex */

/* MTree::Track */

/* MTree::Lepton */

/* MTree::Electron */

/* MTree::Photon */

/* MTree::EventInfo */

/* MTree::Jet */

/* MTree::MissingET */

/* MTree::Muon */

/* MTree::Trigger */

/* MTree::TruthParticle */

/* MTree::L1TriggerROI */

/* MTree::HLTTriggerROI */

/* MTree::TriggerObject */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMTreeIO {
 public:
  G__Sizep2memfuncMTreeIO(): p(&G__Sizep2memfuncMTreeIO::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMTreeIO::*p)();
};

size_t G__get_sizep2memfuncMTreeIO()
{
  G__Sizep2memfuncMTreeIO a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMTreeIO() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex))) {
     MTree::PrimaryVertex *G__Lderived;
     G__Lderived=(MTree::PrimaryVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack))) {
     MTree::Track *G__Lderived;
     G__Lderived=(MTree::Track*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton))) {
     MTree::Lepton *G__Lderived;
     G__Lderived=(MTree::Lepton*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron))) {
     MTree::Electron *G__Lderived;
     G__Lderived=(MTree::Electron*)0x1000;
     {
       MTree::Lepton *G__Lpbase=(MTree::Lepton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron),G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton))) {
     MTree::Photon *G__Lderived;
     G__Lderived=(MTree::Photon*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo))) {
     MTree::EventInfo *G__Lderived;
     G__Lderived=(MTree::EventInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet))) {
     MTree::Jet *G__Lderived;
     G__Lderived=(MTree::Jet*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET))) {
     MTree::MissingET *G__Lderived;
     G__Lderived=(MTree::MissingET*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon))) {
     MTree::Muon *G__Lderived;
     G__Lderived=(MTree::Muon*)0x1000;
     {
       MTree::Lepton *G__Lpbase=(MTree::Lepton*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon),G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger))) {
     MTree::Trigger *G__Lderived;
     G__Lderived=(MTree::Trigger*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle))) {
     MTree::TruthParticle *G__Lderived;
     G__Lderived=(MTree::TruthParticle*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI))) {
     MTree::L1TriggerROI *G__Lderived;
     G__Lderived=(MTree::L1TriggerROI*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI))) {
     MTree::HLTTriggerROI *G__Lderived;
     G__Lderived=(MTree::HLTTriggerROI*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI),G__get_linked_tagnum(&G__MTreeIOLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject))) {
     MTree::TriggerObject *G__Lderived;
     G__Lderived=(MTree::TriggerObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject),G__get_linked_tagnum(&G__MTreeIOLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMTreeIO() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MTreeIOLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MTreeIOLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MTreeIOLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MTreeIOLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__MTreeIOLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__MTreeIOLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MTreeIOLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MTreeIOLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__MTreeIOLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MTree */
static void G__setup_memvarMTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTree));
   {
   }
   G__tag_memvar_reset();
}


   /* MTree::PrimaryVertex */
static void G__setup_memvarMTreecLcLPrimaryVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex));
   { MTree::PrimaryVertex *p; p=(MTree::PrimaryVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Err_X=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Err_Y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Err_Z=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_NTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_Type=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Track */
static void G__setup_memvarMTreecLcLTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack));
   { MTree::Track *p; p=(MTree::Track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_Charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NDOF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_D0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_D0_Err=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Z0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Z0_Err=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Vtx_D0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Vtx_D0_Err=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Vtx_Z0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Vtx_Z0_Err=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Prim_Vtx_D0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Prim_Vtx_D0_Err=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Prim_Vtx_Z0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Prim_Vtx_Z0_Err=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_ExpectBLayerHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfBLayerHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfPixelHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfPixelHoles=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfPixelDeadSensors=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfSCTHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfSCTHoles=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfSCTDeadSensors=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfTRTHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfTRTOutliers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfTRTHighThresholdHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_ParticleOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_HitMask=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TRef),-1,-1,4,"_PrimaryVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_TrackAuthor=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Lepton */
static void G__setup_memvarMTreecLcLLepton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton));
   { MTree::Lepton *p; p=(MTree::Lepton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_Author=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_Charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_LeptonPdgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TRef),-1,-1,2,"_Track=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Electron */
static void G__setup_memvarMTreecLcLElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron));
   { MTree::Electron *p; p=(MTree::Electron*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EOverP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone20=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone30=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone40=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone45=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E233=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E237=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E277=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EtHad=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_F1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_F1Core=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Fracs1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Iso=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_TrackRefit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ZVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ErrZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsConvertedPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_ConvTrackMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_ConvAngleMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"_IsEM=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,4,"_IsGoodOQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_PassedOQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ElectronWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_BgWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_NeuralNet=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_HMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_HMatrix5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_IsolationLikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_AdaBoost=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PhotonWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_BgPhotonWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EBoost=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EtHad1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_WEta2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E2Tsts1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EMins1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_WTots1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_WEta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaEta0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaEta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaEta2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaEta3=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaPhi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaPhi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaPhi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_DeltaPhi3=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EtaP=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_TrackIso10=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_TrackIso20=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_TrackIso30=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_TrackIso40=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_PTCone10=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_PTCone20=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_PTCone30=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_PTCone40=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterM=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterEtaEMB2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterEtaEME2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPhiEMB2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPhiEME2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterBECombEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterBECombPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterBECombE=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsLoose=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsMedium=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsMediumIso=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTight=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTightIso=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_ExpectHitInBLayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_TruthParticleType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_TruthParticleOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NConversions=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWex=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWey=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWet=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Photon */
static void G__setup_memvarMTreecLcLPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton));
   { MTree::Photon *p; p=(MTree::Photon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_Author=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EOverP=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone20=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone30=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone40=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone45=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone40PtCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone40EDCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone40Corr=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E233=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E237=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_E277=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EtHad=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_F1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_F1Core=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Fracs1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Iso=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_TrackRefit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ZVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ErrZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsConvertedPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_ConvTrackMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_ConvAngleMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_IsEM=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ElectronWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_BgWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_NeuralNet=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_HMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_HMatrix5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_IsolationLikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_AdaBoost=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PhotonWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_BgPhotonWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterM=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterEtaEMB2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterEtaEME2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPhiEMB2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterPhiEME2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterBECombEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterBECombPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ClusterBECombE=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsLoose=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsLooseAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTight=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTightIso=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTightAR=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTightARIso=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWex=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWey=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWet=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ETHad1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_WEta2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EMaxs1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EMaxs2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Fracm=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_WTot=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_W1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_ConvFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsConv=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NConv=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NSingleTrackConv=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NDoubleTrackConv=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::EventInfo */
static void G__setup_memvarMTreecLcLEventInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo));
   { MTree::EventInfo *p; p=(MTree::EventInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_RunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_EventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EventWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_BunchCrossID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_LumiBlock=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_LArError=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_GeneratorEventWeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_SignalProcessID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_MCEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EventScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_AlphaQCD=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_AlphaQED=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_PdfID1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_PdfID2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PdfX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PdfX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PdfScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_Pdf1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_Pdf2=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Jet */
static void G__setup_memvarMTreecLcLJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet));
   { MTree::Jet *p; p=(MTree::Jet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_IP3D=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SV0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SV1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SV2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_Weight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CSIP=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_JetProb=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_JetFitTag=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_JetFitCOMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_JetFitTagNN=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_JetFitCOMBNN=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_JetEMFraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_N90Tool=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_N90Constituents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_SamplingMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SamplingMaxFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_HECFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_TileGap3Frac=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsGood=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsBad=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsUgly=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_RawE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_RawPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_RawPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_RawPz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CScaleE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CScalePx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CScalePy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CScalePz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CalE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CalPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CalPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_CalPz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_JetFlavor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_TrueFlavor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_LeadingPartonPdgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_LeadingPartonPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_newJetVertexFraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_newNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_newSumPtTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWex=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWey=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,4,"_jetMoments=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::MissingET */
static void G__setup_memvarMTreecLcLMissingET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET));
   { MTree::MissingET *p; p=(MTree::MissingET*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_SumET=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TObjString),-1,-1,4,"_METTerm=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ExCentralRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ExEndcapRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_ExForwardRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EyCentralRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EyEndcapRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_EyForwardRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SumETCentralRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SumETEndcapRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_SumETForwardRegion=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Muon */
static void G__setup_memvarMTreecLcLMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon));
   { MTree::Muon *p; p=(MTree::Muon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone20=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone30=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_ETCone40=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PTCone10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PTCone20=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PTCone30=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PTCone40=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_FitChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_FitChi2OverDoF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_MatchChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_MatchChi2OverDoF=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EnergyLoss=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EtCore=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_BestMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsCombinedMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsStandAloneMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsLowPtReconstructedMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsCaloMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrMDTHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrCSCEtaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrCSCPhiHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrRPCEtaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrRPCPhiHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrTGCEtaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrTGCPhiHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_NrOfSegments=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_TrackIso10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_TrackIso20=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_TrackIso30=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_TrackIso40=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsLoose=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsMedium=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_IsTight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_IsMuonLikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TRef),-1,-1,4,"_StandAloneTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWex=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWey=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"_METWet=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::Trigger */
static void G__setup_memvarMTreecLcLTrigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger));
   { MTree::Trigger *p; p=(MTree::Trigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClonesArray),-1,-1,4,"_L1TriggersPassed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClonesArray),-1,-1,4,"_L2TriggersPassed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClonesArray),-1,-1,4,"_EFTriggersPassed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::TruthParticle */
static void G__setup_memvarMTreecLcLTruthParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle));
   { MTree::TruthParticle *p; p=(MTree::TruthParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_PdgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_ParentPdgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_GrandParentPdgID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_Status=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TRef),-1,-1,4,"_Parent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TRefArray),-1,-1,4,"_Daughters=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::L1TriggerROI */
static void G__setup_memvarMTreecLcLL1TriggerROI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI));
   { MTree::L1TriggerROI *p; p=(MTree::L1TriggerROI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EtaWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PhiWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_ROIWord=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::HLTTriggerROI */
static void G__setup_memvarMTreecLcLHLTTriggerROI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI));
   { MTree::HLTTriggerROI *p; p=(MTree::HLTTriggerROI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_EtaWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PhiWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_ROIWord=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClonesArray),-1,-1,4,"_HLTNames=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTree::TriggerObject */
static void G__setup_memvarMTreecLcLTriggerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject));
   { MTree::TriggerObject *p; p=(MTree::TriggerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MTreeIOLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),G__defined_typename("set<std::string>"),-1,4,"_triggerNames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MTreeIOLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<int>"),-1,4,"_Authors=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_Phi=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMTreeIO() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMTree(void) {
   /* MTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTree));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLPrimaryVertex(void) {
   /* MTree::PrimaryVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex));
   G__memfunc_setup("PrimaryVertex",1378,G__MTreeIO_243_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_243_0_2, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - X d - - 0 - Y "
"d - - 0 - Z d - - 0 - Err_X "
"d - - 0 - Err_Y d - - 0 - Err_Z "
"i - - 0 - NTracks d - - 0 - Chi2 "
"i - - 0 - NDOF i - - 0 - Type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVariables",1408,G__MTreeIO_243_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__MTreeIO_243_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__MTreeIO_243_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__MTreeIO_243_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorX",610,G__MTreeIO_243_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorY",611,G__MTreeIO_243_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorZ",612,G__MTreeIO_243_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NTracks",694,G__MTreeIO_243_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chi2",326,G__MTreeIO_243_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDOF",295,G__MTreeIO_243_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Type",418,G__MTreeIO_243_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_243_0_14, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_243_0_15, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::PrimaryVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_243_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::PrimaryVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_243_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::PrimaryVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_243_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::PrimaryVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_243_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_243_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::PrimaryVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_243_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::PrimaryVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_243_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::PrimaryVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_243_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::PrimaryVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PrimaryVertex", 1378, G__MTreeIO_243_0_27, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex), -1, 0, 1, 1, 1, 0, "u 'MTree::PrimaryVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PrimaryVertex", 1504, G__MTreeIO_243_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_243_0_29, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex), -1, 1, 1, 1, 1, 0, "u 'MTree::PrimaryVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLTrack(void) {
   /* MTree::Track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack));
   G__memfunc_setup("Track",501,G__MTreeIO_244_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_244_0_2, 121, -1, -1, 0, 31, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi i - - 0 - Charge "
"i - - 0 - NDOF f - - 0 - Chi2 "
"f - - 0 - D0 f - - 0 - D0_Err "
"f - - 0 - Z0 f - - 0 - Z0_Err "
"f - - 0 - Vtx_D0 f - - 0 - Vtx_D0_Err "
"f - - 0 - Vtx_Z0 f - - 0 - Vtx_Z0_Err "
"f - - 0 - Prim_Vtx_D0 f - - 0 - Prim_Vtx_D0_Err "
"f - - 0 - Prim_Vtx_Z0 f - - 0 - Prim_Vtx_Z0_Err "
"g - - 0 - ExpectBLayerHit i - - 0 - NrOfBLayerHits "
"i - - 0 - NrOfPixelHits i - - 0 - NrOfPixelHoles "
"i - - 0 - NrOfPixelDeadSensors i - - 0 - NrOfSCTHits "
"i - - 0 - NrOfSCTHoles i - - 0 - NrOfSCTDeadSensors "
"i - - 0 - NrOfTRTHits i - - 0 - NrOfTRTOutliers "
"i - - 0 - NrOfTRTHighThresholdHits i - - 0 - ParticleOrigin "
"i - - 0 - HitMask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimaryVertex",1678,G__MTreeIO_244_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::PrimaryVertex' - 0 - Vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackAuthor",1428,G__MTreeIO_244_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - TrackAuthor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__MTreeIO_244_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDOF",295,G__MTreeIO_244_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chi2",326,G__MTreeIO_244_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D0",116,G__MTreeIO_244_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D0_Err",508,G__MTreeIO_244_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z0",138,G__MTreeIO_244_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z0_Err",530,G__MTreeIO_244_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vtx_D0",533,G__MTreeIO_244_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vtx_D0_Err",925,G__MTreeIO_244_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vtx_Z0",555,G__MTreeIO_244_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vtx_Z0_Err",947,G__MTreeIO_244_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prim_Vtx_D0",1036,G__MTreeIO_244_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prim_Vtx_D0_Err",1428,G__MTreeIO_244_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prim_Vtx_Z0",1058,G__MTreeIO_244_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prim_Vtx_Z0_Err",1450,G__MTreeIO_244_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpectBLayerHit",1485,G__MTreeIO_244_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfBLayerHits",1356,G__MTreeIO_244_0_21, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfPixelHits",1295,G__MTreeIO_244_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfPixelHoles",1394,G__MTreeIO_244_0_23, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfPixelDeadSensors",2002,G__MTreeIO_244_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfSCTHits",1015,G__MTreeIO_244_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfSCTHoles",1114,G__MTreeIO_244_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfSCTDeadSensors",1722,G__MTreeIO_244_0_27, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfTRTHits",1031,G__MTreeIO_244_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfTRTOutliers",1478,G__MTreeIO_244_0_29, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfTRTHighThresholdHits",2356,G__MTreeIO_244_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParticleOrigin",1436,G__MTreeIO_244_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrimaryVertex",1666,G__MTreeIO_244_0_32, 85, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPrimaryVertex), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitMask",689,G__MTreeIO_244_0_33, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodedHitMask",1369,G__MTreeIO_244_0_34, 117, G__get_linked_tagnum(&G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackAuthor",1128,G__MTreeIO_244_0_35, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_244_0_36, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_244_0_37, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_244_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_244_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_244_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_244_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_244_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_244_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_244_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_244_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Track::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Track", 501, G__MTreeIO_244_0_49, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack), -1, 0, 1, 1, 1, 0, "u 'MTree::Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Track", 627, G__MTreeIO_244_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_244_0_51, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack), -1, 1, 1, 1, 1, 0, "u 'MTree::Track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLLepton(void) {
   /* MTree::Lepton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton));
   G__memfunc_setup("Lepton",626,G__MTreeIO_249_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeLepton",1668,G__MTreeIO_249_0_2, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi d - - 0 - Mass "
"i - - 0 - Author i - - 0 - Charge "
"i - - 0 - LeptonPdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrack",801,G__MTreeIO_249_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::Track' - 0 - Track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Author",627,G__MTreeIO_249_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__MTreeIO_249_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeptonPdgID",1050,G__MTreeIO_249_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__MTreeIO_249_0_7, 85, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintLeptonData",1529,G__MTreeIO_249_0_8, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_249_0_9, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Lepton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_249_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Lepton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_249_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Lepton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_249_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Lepton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_249_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_249_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Lepton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_249_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Lepton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_249_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Lepton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_249_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Lepton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Lepton", 626, G__MTreeIO_249_0_21, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton), -1, 0, 1, 1, 1, 0, "u 'MTree::Lepton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Lepton", 752, G__MTreeIO_249_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_249_0_23, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLLepton), -1, 1, 1, 1, 1, 0, "u 'MTree::Lepton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLElectron(void) {
   /* MTree::Electron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron));
   G__memfunc_setup("Electron",828,G__MTreeIO_250_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_250_0_2, 121, -1, -1, 0, 30, 1, 1, 0, 
"d - - 0 - EOverP d - - 0 - ETCone20 "
"d - - 0 - ETCone30 d - - 0 - ETCone40 "
"d - - 0 - ETCone45 k - - 0 - IsEM "
"k - - 0 - IsGoodOQ g - - 0 - PassedOQ "
"f - - 0 - E233 f - - 0 - E237 "
"f - - 0 - E277 f - - 0 - EtHad "
"f - - 0 - F1 f - - 0 - F1Core "
"f - - 0 - Fracs1 f - - 0 - Iso "
"g - - 0 - TrackRefit g - - 0 - ConvTrackMatch "
"g - - 0 - ConvAngleMatch f - - 0 - ZVertex "
"f - - 0 - ErrZ d - - 0 - ElectronWeight "
"d - - 0 - BgWeight d - - 0 - NeuralNet "
"d - - 0 - HMatrix d - - 0 - HMatrix5 "
"d - - 0 - IsolationLikelihood d - - 0 - AdaBoost "
"d - - 0 - PhotonWeight d - - 0 - BgPhotonWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeTrackIsolation",2489,G__MTreeIO_250_0_3, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - - 0 - TrackIso10 d - - 0 - TrackIso20 "
"d - - 0 - TrackIso30 d - - 0 - TrackIso40 "
"d - - 0 - PTCone20 d - - 0 - PTCone30 "
"d - - 0 - PTCone40", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeClusterVariables",2701,G__MTreeIO_250_0_4, 121, -1, -1, 0, 12, 1, 1, 0, 
"f - - 0 - ClusterEta f - - 0 - ClusterPhi "
"f - - 0 - ClusterE f - - 0 - ClusterM "
"f - - 0 - ClusterPt f - - 0 - ClusterEtaEMB2 "
"f - - 0 - ClusterEtaEME2 f - - 0 - ClusterPhiEMB2 "
"f - - 0 - ClusterPhiEME2 f - - 0 - ClusterBECombEta "
"f - - 0 - ClusterBECombPhi f - - 0 - ClusterBECombE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeExtraVariables",2479,G__MTreeIO_250_0_5, 121, -1, -1, 0, 16, 1, 1, 0, 
"f - - 0 - EtHad1 f - - 0 - WEta2 "
"f - - 0 - E2Tsts1 f - - 0 - EMins1 "
"f - - 0 - WTots1 f - - 0 - WEta1 "
"f - - 0 - DeltaEta0 f - - 0 - DeltaEta1 "
"f - - 0 - DeltaEta2 f - - 0 - DeltaEta3 "
"f - - 0 - DeltaPhi0 f - - 0 - DeltaPhi1 "
"f - - 0 - DeltaPhi2 f - - 0 - DeltaPhi3 "
"i - - 0 - NConversions f - - 0 - EtaP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeElectronFlags",2363,G__MTreeIO_250_0_6, 121, -1, -1, 0, 6, 1, 1, 0, 
"g - - 0 - IsLoose g - - 0 - IsMedium "
"g - - 0 - IsMediumIso g - - 0 - IsTight "
"g - - 0 - IsTightIso g - - 0 - ExpectHitInBLayer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeEBoost",1630,G__MTreeIO_250_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - EBoost", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeTruthClassifiers",2721,G__MTreeIO_250_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - TruthParticleType i - - 0 - TruthParticleOrigin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMissingETWeights",1914,G__MTreeIO_250_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - METWex f - - 0 - METWey "
"f - - 0 - METWet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EOverP",561,G__MTreeIO_250_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone20",640,G__MTreeIO_250_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone30",641,G__MTreeIO_250_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone40",642,G__MTreeIO_250_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone45",647,G__MTreeIO_250_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E233",221,G__MTreeIO_250_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E237",225,G__MTreeIO_250_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E277",229,G__MTreeIO_250_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtHad",454,G__MTreeIO_250_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1",119,G__MTreeIO_250_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1Core",512,G__MTreeIO_250_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fracs1",544,G__MTreeIO_250_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iso",299,G__MTreeIO_250_0_22, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackRefit",1007,G__MTreeIO_250_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZVertex",728,G__MTreeIO_250_0_24, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrZ",387,G__MTreeIO_250_0_25, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWex",538,G__MTreeIO_250_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWey",539,G__MTreeIO_250_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWet",534,G__MTreeIO_250_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsConvertedPhoton",1758,G__MTreeIO_250_0_29, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvTrackMatch",1400,G__MTreeIO_250_0_30, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvAngleMatch",1386,G__MTreeIO_250_0_31, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEM",334,G__MTreeIO_250_0_32, 107, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGoodOQ",741,G__MTreeIO_250_0_33, 107, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassedOQ",768,G__MTreeIO_250_0_34, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronWeight",1444,G__MTreeIO_250_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BgWeight",785,G__MTreeIO_250_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronLikelihood",1856,G__MTreeIO_250_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeuralNet",910,G__MTreeIO_250_0_38, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMatrix",701,G__MTreeIO_250_0_39, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMatrix5",754,G__MTreeIO_250_0_40, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsolationLikelihood",1974,G__MTreeIO_250_0_41, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdaBoost",781,G__MTreeIO_250_0_42, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhotonWeight",1248,G__MTreeIO_250_0_43, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BgPhotonWeight",1417,G__MTreeIO_250_0_44, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhotonLikelihood",1660,G__MTreeIO_250_0_45, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EBoost",588,G__MTreeIO_250_0_46, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtHad1",503,G__MTreeIO_250_0_47, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WEta2",419,G__MTreeIO_250_0_48, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E2Tsts1",598,G__MTreeIO_250_0_49, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMins1",525,G__MTreeIO_250_0_50, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WTots1",562,G__MTreeIO_250_0_51, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WEta1",418,G__MTreeIO_250_0_52, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaEta0",820,G__MTreeIO_250_0_53, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaEta1",821,G__MTreeIO_250_0_54, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaEta2",822,G__MTreeIO_250_0_55, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaEta3",823,G__MTreeIO_250_0_56, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi0",827,G__MTreeIO_250_0_57, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi1",828,G__MTreeIO_250_0_58, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi2",829,G__MTreeIO_250_0_59, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeltaPhi3",830,G__MTreeIO_250_0_60, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtaP",362,G__MTreeIO_250_0_61, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso10",897,G__MTreeIO_250_0_62, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso20",898,G__MTreeIO_250_0_63, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso30",899,G__MTreeIO_250_0_64, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso40",900,G__MTreeIO_250_0_65, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone20",651,G__MTreeIO_250_0_66, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone30",652,G__MTreeIO_250_0_67, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone40",653,G__MTreeIO_250_0_68, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterEta",1020,G__MTreeIO_250_0_69, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPhi",1027,G__MTreeIO_250_0_70, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterE",807,G__MTreeIO_250_0_71, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterM",815,G__MTreeIO_250_0_72, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPt",934,G__MTreeIO_250_0_73, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterEtaEMB2",1282,G__MTreeIO_250_0_74, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterEtaEME2",1285,G__MTreeIO_250_0_75, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPhiEMB2",1289,G__MTreeIO_250_0_76, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPhiEME2",1292,G__MTreeIO_250_0_77, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterBECombEta",1540,G__MTreeIO_250_0_78, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterBECombPhi",1547,G__MTreeIO_250_0_79, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterBECombE",1327,G__MTreeIO_250_0_80, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TruthParticleType",1773,G__MTreeIO_250_0_81, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TruthParticleOrigin",1971,G__MTreeIO_250_0_82, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLoose",702,G__MTreeIO_250_0_83, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMedium",797,G__MTreeIO_250_0_84, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMediumIso",1096,G__MTreeIO_250_0_85, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTight",700,G__MTreeIO_250_0_86, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTightIso",999,G__MTreeIO_250_0_87, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpectHitInBLayer",1668,G__MTreeIO_250_0_88, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NConversions",1255,G__MTreeIO_250_0_89, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_250_0_90, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_250_0_91, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Electron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_250_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Electron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_250_0_93, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Electron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_250_0_94, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Electron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_250_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_250_0_99, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Electron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_250_0_100, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Electron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_250_0_101, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Electron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_250_0_102, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Electron::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Electron", 828, G__MTreeIO_250_0_103, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron), -1, 0, 1, 1, 1, 0, "u 'MTree::Electron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Electron", 954, G__MTreeIO_250_0_104, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_250_0_105, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLElectron), -1, 1, 1, 1, 1, 0, "u 'MTree::Electron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLPhoton(void) {
   /* MTree::Photon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton));
   G__memfunc_setup("Photon",632,G__MTreeIO_251_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_251_0_2, 121, -1, -1, 0, 33, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi d - - 0 - Mass "
"i - - 0 - Author d - - 0 - EOverP "
"d - - 0 - ETCone20 d - - 0 - ETCone30 "
"d - - 0 - ETCone40 d - - 0 - ETCone45 "
"i - - 0 - IsEM f - - 0 - E233 "
"f - - 0 - E237 f - - 0 - E277 "
"f - - 0 - EtHad f - - 0 - F1 "
"f - - 0 - F1Core f - - 0 - Fracs1 "
"f - - 0 - Iso g - - 0 - TrackRefit "
"g - - 0 - ConvTrackMatch g - - 0 - ConvAngleMatch "
"f - - 0 - ZVertex f - - 0 - ErrZ "
"d - - 0 - ElectronWeight d - - 0 - BgWeight "
"d - - 0 - NeuralNet d - - 0 - HMatrix "
"d - - 0 - HMatrix5 d - - 0 - IsolationLikelihood "
"d - - 0 - AdaBoost d - - 0 - PhotonWeight "
"d - - 0 - BgPhotonWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeClusterVariables",2701,G__MTreeIO_251_0_3, 121, -1, -1, 0, 12, 1, 1, 0, 
"f - - 0 - ClusterEta f - - 0 - ClusterPhi "
"f - - 0 - ClusterE f - - 0 - ClusterM "
"f - - 0 - ClusterPt f - - 0 - ClusterEtaEMB2 "
"f - - 0 - ClusterEtaEME2 f - - 0 - ClusterPhiEMB2 "
"f - - 0 - ClusterPhiEME2 f - - 0 - ClusterBECombEta "
"f - - 0 - ClusterBECombPhi f - - 0 - ClusterBECombE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeExtraClusterVariables",3217,G__MTreeIO_251_0_4, 121, -1, -1, 0, 8, 1, 1, 0, 
"f - - 0 - ETHad1 f - - 0 - WEta2 "
"f - - 0 - EMaxs1 f - - 0 - EMaxs2 "
"f - - 0 - EMin f - - 0 - Fracm "
"f - - 0 - WTot f - - 0 - W1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeConversionVariables",3025,G__MTreeIO_251_0_5, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - ConvFlag g - - 0 - IsConv "
"i - - 0 - NConv i - - 0 - NSingleTrackConv "
"i - - 0 - NDoubleTrackConv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCorrectedIsolation",2911,G__MTreeIO_251_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - ETCone40PtCorr f - - 0 - ETCone40EDCorr "
"f - - 0 - ETCone40Corr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializePhotonFlags",2167,G__MTreeIO_251_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"g - - 0 - IsLoose g - - 0 - IsLooseAR "
"g - - 0 - IsTight g - - 0 - IsTightIso "
"g - - 0 - IsTightAR g - - 0 - IsTightARIso", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMissingETWeights",1914,G__MTreeIO_251_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - METWex f - - 0 - METWey "
"f - - 0 - METWet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Author",627,G__MTreeIO_251_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EOverP",561,G__MTreeIO_251_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone20",640,G__MTreeIO_251_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone30",641,G__MTreeIO_251_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone40",642,G__MTreeIO_251_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone45",647,G__MTreeIO_251_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone40PtCorr",1244,G__MTreeIO_251_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone40EDCorr",1185,G__MTreeIO_251_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone40Corr",1048,G__MTreeIO_251_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E233",221,G__MTreeIO_251_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E237",225,G__MTreeIO_251_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("E277",229,G__MTreeIO_251_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtHad",454,G__MTreeIO_251_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1",119,G__MTreeIO_251_0_22, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("F1Core",512,G__MTreeIO_251_0_23, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fracs1",544,G__MTreeIO_251_0_24, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Iso",299,G__MTreeIO_251_0_25, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackRefit",1007,G__MTreeIO_251_0_26, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZVertex",728,G__MTreeIO_251_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrZ",387,G__MTreeIO_251_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWex",538,G__MTreeIO_251_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWey",539,G__MTreeIO_251_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWet",534,G__MTreeIO_251_0_31, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETHad1",471,G__MTreeIO_251_0_32, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WEta2",419,G__MTreeIO_251_0_33, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMaxs1",527,G__MTreeIO_251_0_34, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMaxs2",528,G__MTreeIO_251_0_35, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMin",361,G__MTreeIO_251_0_36, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fracm",489,G__MTreeIO_251_0_37, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WTot",398,G__MTreeIO_251_0_38, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("W1",136,G__MTreeIO_251_0_39, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvFlag",784,G__MTreeIO_251_0_40, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsConv",594,G__MTreeIO_251_0_41, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NConv",484,G__MTreeIO_251_0_42, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NSingleTrackConv",1595,G__MTreeIO_251_0_43, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDoubleTrackConv",1588,G__MTreeIO_251_0_44, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsConvertedPhoton",1758,G__MTreeIO_251_0_45, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvTrackMatch",1400,G__MTreeIO_251_0_46, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvAngleMatch",1386,G__MTreeIO_251_0_47, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEM",334,G__MTreeIO_251_0_48, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronWeight",1444,G__MTreeIO_251_0_49, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BgWeight",785,G__MTreeIO_251_0_50, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronLikelihood",1856,G__MTreeIO_251_0_51, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NeuralNet",910,G__MTreeIO_251_0_52, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMatrix",701,G__MTreeIO_251_0_53, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMatrix5",754,G__MTreeIO_251_0_54, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsolationLikelihood",1974,G__MTreeIO_251_0_55, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdaBoost",781,G__MTreeIO_251_0_56, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhotonWeight",1248,G__MTreeIO_251_0_57, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BgPhotonWeight",1417,G__MTreeIO_251_0_58, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhotonLikelihood",1660,G__MTreeIO_251_0_59, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterEta",1020,G__MTreeIO_251_0_60, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPhi",1027,G__MTreeIO_251_0_61, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterE",807,G__MTreeIO_251_0_62, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterM",815,G__MTreeIO_251_0_63, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPt",934,G__MTreeIO_251_0_64, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterEtaEMB2",1282,G__MTreeIO_251_0_65, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterEtaEME2",1285,G__MTreeIO_251_0_66, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPhiEMB2",1289,G__MTreeIO_251_0_67, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPhiEME2",1292,G__MTreeIO_251_0_68, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterBECombEta",1540,G__MTreeIO_251_0_69, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterBECombPhi",1547,G__MTreeIO_251_0_70, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterBECombE",1327,G__MTreeIO_251_0_71, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLoose",702,G__MTreeIO_251_0_72, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLooseAR",849,G__MTreeIO_251_0_73, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTight",700,G__MTreeIO_251_0_74, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTightIso",999,G__MTreeIO_251_0_75, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTightAR",847,G__MTreeIO_251_0_76, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTightARIso",1146,G__MTreeIO_251_0_77, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_251_0_78, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_251_0_79, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Photon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_251_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Photon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_251_0_81, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Photon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_251_0_82, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Photon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_251_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_251_0_87, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Photon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_251_0_88, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Photon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_251_0_89, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Photon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_251_0_90, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Photon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Photon", 632, G__MTreeIO_251_0_91, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton), -1, 0, 1, 1, 1, 0, "u 'MTree::Photon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Photon", 758, G__MTreeIO_251_0_92, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_251_0_93, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLPhoton), -1, 1, 1, 1, 1, 0, "u 'MTree::Photon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLEventInfo(void) {
   /* MTree::EventInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo));
   G__memfunc_setup("EventInfo",910,G__MTreeIO_252_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_252_0_2, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - RunNum i - - 0 - EvtNum "
"i - - 0 - BunchCrossID i - - 0 - LumiBlock "
"d - - 0 - EventWeight i - - 0 - LArError", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeneratorInfo",1631,G__MTreeIO_252_0_3, 121, -1, -1, 0, 13, 1, 1, 0, 
"d - - 0 - GeneratorEventWeight i - - 0 - SignalProcessID "
"i - - 0 - MCEventNumber d - - 0 - EventScale "
"d - - 0 - AlphaQCD d - - 0 - AlphaQED "
"i - - 0 - PdfID1 i - - 0 - PdfID2 "
"d - - 0 - PdfX1 d - - 0 - PdfX2 "
"d - - 0 - PdfScale d - - 0 - Pdf1 "
"d - - 0 - Pdf2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunNumber",926,G__MTreeIO_252_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventNumber",1131,G__MTreeIO_252_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventWeight",1130,G__MTreeIO_252_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BunchCrossID",1159,G__MTreeIO_252_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LumiBlock",898,G__MTreeIO_252_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LArError",777,G__MTreeIO_252_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeneratorEventWeight",2065,G__MTreeIO_252_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SignalProcessID",1482,G__MTreeIO_252_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCEventNumber",1275,G__MTreeIO_252_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventScale",1002,G__MTreeIO_252_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlphaQCD",702,G__MTreeIO_252_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlphaQED",704,G__MTreeIO_252_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdfID1",472,G__MTreeIO_252_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdfID2",473,G__MTreeIO_252_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdfX1",419,G__MTreeIO_252_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdfX2",420,G__MTreeIO_252_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdfScale",770,G__MTreeIO_252_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pdf1",331,G__MTreeIO_252_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pdf2",332,G__MTreeIO_252_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVariables",1408,G__MTreeIO_252_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_252_0_24, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_252_0_25, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::EventInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_252_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::EventInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_252_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::EventInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_252_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::EventInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_252_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_252_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::EventInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_252_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::EventInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_252_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::EventInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_252_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::EventInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventInfo", 910, G__MTreeIO_252_0_37, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo), -1, 0, 1, 1, 1, 0, "u 'MTree::EventInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventInfo", 1036, G__MTreeIO_252_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_252_0_39, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLEventInfo), -1, 1, 1, 1, 1, 0, "u 'MTree::EventInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLJet(void) {
   /* MTree::Jet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet));
   G__memfunc_setup("Jet",291,G__MTreeIO_530_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_530_0_2, 121, -1, -1, 0, 15, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi d - - 0 - Mass "
"f - - 0 - IP3D f - - 0 - SV0 "
"f - - 0 - SV1 f - - 0 - SV2 "
"f - - 0 - Weight f - - 0 - CSIP "
"f - - 0 - JetProb f - - 0 - JetFitTag "
"f - - 0 - JetFitCOMB f - - 0 - JetFitTagNN "
"f - - 0 - JetFitCOMBNN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueFlavor",1334,G__MTreeIO_530_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - TrueFlavor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetFlavor",1209,G__MTreeIO_530_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - JetFlavor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeadingPartonPdgID",2044,G__MTreeIO_530_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - LeadingPartonPdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeadingPartonPt",1816,G__MTreeIO_530_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - LeadingPartonPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetQualities",1536,G__MTreeIO_530_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - - 0 - JetEMFraction i - - 0 - N90Constituents "
"i - - 0 - SamplingMax f - - 0 - SamplingMaxFrac "
"f - - 0 - HECFrac f - - 0 - TileGap3Frac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetQualityFlags",1829,G__MTreeIO_530_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - IsGood g - - 0 - IsBad "
"g - - 0 - IsUgly", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawEnergies",1416,G__MTreeIO_530_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - RawE f - - 0 - RawPx "
"f - - 0 - RawPy f - - 0 - RawPz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJVF",530,G__MTreeIO_530_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - newJetVertexFraction i - - 0 - newNTracks "
"f - - 0 - newSumPtTracks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMissingETWeights",1914,G__MTreeIO_530_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - METWex f - - 0 - METWey "
"f - - 0 - METWet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IP3D",272,G__MTreeIO_530_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SV0",217,G__MTreeIO_530_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SV1",218,G__MTreeIO_530_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SV2",219,G__MTreeIO_530_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Weight",616,G__MTreeIO_530_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CSIP",303,G__MTreeIO_530_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetProb",694,G__MTreeIO_530_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetFitTag",866,G__MTreeIO_530_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetFitCOMB",871,G__MTreeIO_530_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetFitTagNN",1022,G__MTreeIO_530_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetFitCOMBNN",1027,G__MTreeIO_530_0_22, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWex",538,G__MTreeIO_530_0_23, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWey",539,G__MTreeIO_530_0_24, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWet",534,G__MTreeIO_530_0_25, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetEMFraction",1259,G__MTreeIO_530_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N90Tool",597,G__MTreeIO_530_0_27, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("N90Constituents",1482,G__MTreeIO_530_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SamplingMax",1121,G__MTreeIO_530_0_29, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SamplingMaxFrac",1501,G__MTreeIO_530_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HECFrac",588,G__MTreeIO_530_0_31, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TileGap3Frac",1109,G__MTreeIO_530_0_32, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("newJetVertexFraction",2081,G__MTreeIO_530_0_33, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("newSumPtTracks",1451,G__MTreeIO_530_0_34, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("newNTracks",1024,G__MTreeIO_530_0_35, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGood",581,G__MTreeIO_530_0_36, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBad",451,G__MTreeIO_530_0_37, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUgly",605,G__MTreeIO_530_0_38, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawE",655,G__MTreeIO_530_0_39, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawPt",782,G__MTreeIO_530_0_40, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawEta",868,G__MTreeIO_530_0_41, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawPx",786,G__MTreeIO_530_0_42, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawPy",787,G__MTreeIO_530_0_43, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawPz",788,G__MTreeIO_530_0_44, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrueFlavor",1034,G__MTreeIO_530_0_45, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetFlavor",909,G__MTreeIO_530_0_46, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeadingPartonPdgID",1744,G__MTreeIO_530_0_47, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LeadingPartonPt",1516,G__MTreeIO_530_0_48, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJetMoment",1215,G__MTreeIO_530_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JetMoment",915,G__MTreeIO_530_0_50, 102, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_530_0_51, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_530_0_52, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Jet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_530_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Jet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_530_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Jet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_530_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Jet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_530_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_530_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Jet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_530_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Jet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_530_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Jet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_530_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Jet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Jet", 291, G__MTreeIO_530_0_64, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet), -1, 0, 1, 1, 1, 0, "u 'MTree::Jet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Jet", 417, G__MTreeIO_530_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_530_0_66, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLJet), -1, 1, 1, 1, 1, 0, "u 'MTree::Jet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLMissingET(void) {
   /* MTree::MissingET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET));
   G__memfunc_setup("MissingET",883,G__MTreeIO_532_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_532_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - met d - - 0 - metx "
"d - - 0 - mety d - - 0 - SumET "
"u 'TObjString' - 0 - term", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeRegions",1769,G__MTreeIO_532_0_3, 121, -1, -1, 0, 9, 1, 1, 0, 
"f - - 0 - ExCentralRegion f - - 0 - ExEndcapRegion "
"f - - 0 - ExForwardRegion f - - 0 - EyCentralRegion "
"f - - 0 - EyEndcapRegion f - - 0 - EyForwardRegion "
"f - - 0 - SumETCentralRegion f - - 0 - SumETEndcapRegion "
"f - - 0 - SumETForwardRegion", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MET",230,G__MTreeIO_532_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ey",190,G__MTreeIO_532_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Ex",189,G__MTreeIO_532_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SumET",462,G__MTreeIO_532_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTerm",696,G__MTreeIO_532_0_8, 117, G__get_linked_tagnum(&G__MTreeIOLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVariables",1408,G__MTreeIO_532_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExCentralRegion",1802,G__MTreeIO_532_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExEndcapRegion",1676,G__MTreeIO_532_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetExForwardRegion",1814,G__MTreeIO_532_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEyCentralRegion",1803,G__MTreeIO_532_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEyEndcapRegion",1677,G__MTreeIO_532_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEyForwardRegion",1815,G__MTreeIO_532_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumETCentralRegion",2075,G__MTreeIO_532_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumETEndcapRegion",1949,G__MTreeIO_532_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumETForwardRegion",2087,G__MTreeIO_532_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_532_0_19, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_532_0_20, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::MissingET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_532_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::MissingET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_532_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::MissingET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_532_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::MissingET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_532_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_532_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::MissingET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_532_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::MissingET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_532_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::MissingET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_532_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::MissingET::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MissingET", 883, G__MTreeIO_532_0_32, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET), -1, 0, 1, 1, 1, 0, "u 'MTree::MissingET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MissingET", 1009, G__MTreeIO_532_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_532_0_34, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMissingET), -1, 1, 1, 1, 1, 0, "u 'MTree::MissingET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLMuon(void) {
   /* MTree::Muon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon));
   G__memfunc_setup("Muon",415,G__MTreeIO_533_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_533_0_2, 121, -1, -1, 0, 27, 1, 1, 0, 
"d - - 0 - ETCone10 d - - 0 - ETCone20 "
"d - - 0 - ETCone30 d - - 0 - ETCone40 "
"d - - 0 - PTCone10 d - - 0 - PTCone20 "
"d - - 0 - PTCone30 d - - 0 - PTCone40 "
"d - - 0 - FitChi2 d - - 0 - FitChi2OverDoF "
"d - - 0 - MatchChi2 d - - 0 - MatchChi2OverDoF "
"d - - 0 - EnergyLoss d - - 0 - EtCore "
"g - - 0 - BestMatch g - - 0 - IsCombinedMuon "
"g - - 0 - IsStandAloneMuon g - - 0 - IsLowPtReconstructedMuon "
"g - - 0 - IsCaloMuon i - - 0 - NrMDTHits "
"i - - 0 - NrCSCEtaHits i - - 0 - NrCSCPhiHits "
"i - - 0 - NrRPCEtaHits i - - 0 - NrRPCPhiHits "
"i - - 0 - NrTGCEtaHits i - - 0 - NrTGCPhiHits "
"i - - 0 - NrOfSegments", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeTrackIsolation",2489,G__MTreeIO_533_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - TrackIso10 d - - 0 - TrackIso20 "
"d - - 0 - TrackIso30 d - - 0 - TrackIso40", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeMuonQuality",2202,G__MTreeIO_533_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - - 0 - IsLoose g - - 0 - IsMedium "
"g - - 0 - IsTight f - - 0 - IsMuonLikelihood", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMissingETWeights",1914,G__MTreeIO_533_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - METWex f - - 0 - METWey "
"f - - 0 - METWet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone10",639,G__MTreeIO_533_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone20",640,G__MTreeIO_533_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone30",641,G__MTreeIO_533_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETCone40",642,G__MTreeIO_533_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone10",650,G__MTreeIO_533_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone20",651,G__MTreeIO_533_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone30",652,G__MTreeIO_533_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTCone40",653,G__MTreeIO_533_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitChi2",617,G__MTreeIO_533_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitChi2OverDoF",1278,G__MTreeIO_533_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchChi2",819,G__MTreeIO_533_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchChi2OverDoF",1480,G__MTreeIO_533_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnergyLoss",1035,G__MTreeIO_533_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtCore",578,G__MTreeIO_533_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BestMatch",891,G__MTreeIO_533_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCombinedMuon",1404,G__MTreeIO_533_0_21, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStandAloneMuon",1604,G__MTreeIO_533_0_22, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLowPtReconstructedMuon",2486,G__MTreeIO_533_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCaloMuon",986,G__MTreeIO_533_0_24, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrMDTHits",829,G__MTreeIO_533_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrCSCEtaHits",1099,G__MTreeIO_533_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrCSCPhiHits",1106,G__MTreeIO_533_0_27, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrRPCEtaHits",1111,G__MTreeIO_533_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrRPCPhiHits",1118,G__MTreeIO_533_0_29, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrTGCEtaHits",1104,G__MTreeIO_533_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrTGCPhiHits",1111,G__MTreeIO_533_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NrOfSegments",1211,G__MTreeIO_533_0_32, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWex",538,G__MTreeIO_533_0_33, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWey",539,G__MTreeIO_533_0_34, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("METWet",534,G__MTreeIO_533_0_35, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso10",897,G__MTreeIO_533_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso20",898,G__MTreeIO_533_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso30",899,G__MTreeIO_533_0_38, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackIso40",900,G__MTreeIO_533_0_39, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLoose",702,G__MTreeIO_533_0_40, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMedium",797,G__MTreeIO_533_0_41, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTight",700,G__MTreeIO_533_0_42, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMuonLikelihood",1631,G__MTreeIO_533_0_43, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStandAloneTrack",1802,G__MTreeIO_533_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::Track' - 0 - Track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStandAloneTrack",1790,G__MTreeIO_533_0_45, 85, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrack), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_533_0_46, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_533_0_47, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Muon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_533_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Muon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_533_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Muon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_533_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Muon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_533_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_533_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Muon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_533_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Muon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_533_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Muon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_533_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Muon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Muon", 415, G__MTreeIO_533_0_59, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon), -1, 0, 1, 1, 1, 0, "u 'MTree::Muon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Muon", 541, G__MTreeIO_533_0_60, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_533_0_61, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLMuon), -1, 1, 1, 1, 1, 0, "u 'MTree::Muon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLTrigger(void) {
   /* MTree::Trigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger));
   G__memfunc_setup("Trigger",724,G__MTreeIO_534_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL1TriggersPassed",1872,G__MTreeIO_534_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - TriggerNames u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - VetoStrings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL2TriggersPassed",1873,G__MTreeIO_534_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - TriggerNames u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - VetoStrings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEFTriggersPassed",1886,G__MTreeIO_534_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - TriggerNames u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - VetoStrings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL1TriggersPassed",1860,G__MTreeIO_534_0_5, 117, G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL2TriggersPassed",1861,G__MTreeIO_534_0_6, 117, G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEFTriggersPassed",1874,G__MTreeIO_534_0_7, 117, G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassedTrigger",1332,G__MTreeIO_534_0_8, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - TriggerName", "works for any level of trigger", (void*) NULL, 0);
   G__memfunc_setup("PassedL1Trigger",1457,G__MTreeIO_534_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - TriggerName", "works only for L1 triggers", (void*) NULL, 0);
   G__memfunc_setup("PassedL2Trigger",1458,G__MTreeIO_534_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - TriggerName", "works only for L2 triggers", (void*) NULL, 0);
   G__memfunc_setup("PassedEFTrigger",1471,G__MTreeIO_534_0_11, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - TriggerName", "works only for EF triggers", (void*) NULL, 0);
   G__memfunc_setup("PassedAnyOfL1Triggers",2049,G__MTreeIO_534_0_12, 103, -1, -1, 0, 1, 1, 1, 8, "u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - TriggerNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassedAnyOfL2Triggers",2050,G__MTreeIO_534_0_13, 103, -1, -1, 0, 1, 1, 1, 8, "u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - TriggerNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassedAnyOfEFTriggers",2063,G__MTreeIO_534_0_14, 103, -1, -1, 0, 1, 1, 1, 8, "u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - TriggerNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_534_0_15, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVariables",1408,G__MTreeIO_534_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_534_0_17, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::Trigger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_534_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Trigger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_534_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::Trigger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_534_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::Trigger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_534_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_534_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Trigger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_534_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Trigger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_534_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::Trigger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_534_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::Trigger::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Trigger", 724, G__MTreeIO_534_0_29, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger), -1, 0, 1, 1, 1, 0, "u 'MTree::Trigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Trigger", 850, G__MTreeIO_534_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_534_0_31, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTrigger), -1, 1, 1, 1, 1, 0, "u 'MTree::Trigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLTruthParticle(void) {
   /* MTree::TruthParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle));
   G__memfunc_setup("TruthParticle",1355,G__MTreeIO_543_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_543_0_2, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi d - - 0 - M "
"i - - 0 - PdgID i - - 0 - Status "
"i - - 0 '0' ParentPdgID i - - 0 '0' GrandParentPdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParentPdgID",1342,G__MTreeIO_543_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ParentPdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGrandParentPdgID",1834,G__MTreeIO_543_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - GrandParentPdgID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParent",918,G__MTreeIO_543_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::TruthParticle' - 0 - Parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__MTreeIO_543_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::TruthParticle' - 0 - Daughter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughterAt",1266,G__MTreeIO_543_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'MTree::TruthParticle' - 0 - Daughter i - - 0 - Index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveDaughter",1442,G__MTreeIO_543_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'MTree::TruthParticle' - 0 - Daughter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PdgID",424,G__MTreeIO_543_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParentPdgID",1042,G__MTreeIO_543_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GrandParentPdgID",1534,G__MTreeIO_543_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Status",644,G__MTreeIO_543_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__MTreeIO_543_0_13, 85, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNrOfDaughters",1596,G__MTreeIO_543_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughter",1108,G__MTreeIO_543_0_15, 85, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTruthParticle), -1, 0, 1, 1, 1, 8, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_543_0_16, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_543_0_17, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::TruthParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_543_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::TruthParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_543_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::TruthParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_543_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::TruthParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_543_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_543_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::TruthParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_543_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::TruthParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_543_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::TruthParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_543_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::TruthParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TruthParticle", 1481, G__MTreeIO_543_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLL1TriggerROI(void) {
   /* MTree::L1TriggerROI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI));
   G__memfunc_setup("L1TriggerROI",1083,G__MTreeIO_544_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_544_0_2, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi d - - 0 - EtaWidth "
"d - - 0 - PhiWidth i - - 0 - ROIWord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtaWidth",794,G__MTreeIO_544_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiWidth",801,G__MTreeIO_544_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ROIWord",646,G__MTreeIO_544_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_544_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_544_0_7, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::L1TriggerROI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_544_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::L1TriggerROI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_544_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::L1TriggerROI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_544_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::L1TriggerROI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_544_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_544_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::L1TriggerROI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_544_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::L1TriggerROI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_544_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::L1TriggerROI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_544_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::L1TriggerROI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("L1TriggerROI", 1083, G__MTreeIO_544_0_19, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI), -1, 0, 1, 1, 1, 0, "u 'MTree::L1TriggerROI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~L1TriggerROI", 1209, G__MTreeIO_544_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_544_0_21, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLL1TriggerROI), -1, 1, 1, 1, 1, 0, "u 'MTree::L1TriggerROI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLHLTTriggerROI(void) {
   /* MTree::HLTTriggerROI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI));
   G__memfunc_setup("HLTTriggerROI",1190,G__MTreeIO_545_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_545_0_2, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"d - - 0 - Phi d - - 0 - EtaWidth "
"d - - 0 - PhiWidth i - - 0 - ROIWord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetROINames",1034,G__MTreeIO_545_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - HLTNames", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddROIName",884,G__MTreeIO_545_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - HLTName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EtaWidth",794,G__MTreeIO_545_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiWidth",801,G__MTreeIO_545_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ROIWord",646,G__MTreeIO_545_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHLTNames",1020,G__MTreeIO_545_0_8, 117, G__get_linked_tagnum(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassedTrigger",1332,G__MTreeIO_545_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - HLTName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_545_0_10, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_545_0_11, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::HLTTriggerROI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_545_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::HLTTriggerROI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_545_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::HLTTriggerROI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_545_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::HLTTriggerROI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_545_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_545_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::HLTTriggerROI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_545_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::HLTTriggerROI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_545_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::HLTTriggerROI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_545_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::HLTTriggerROI::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HLTTriggerROI", 1190, G__MTreeIO_545_0_23, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI), -1, 0, 1, 1, 1, 0, "u 'MTree::HLTTriggerROI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HLTTriggerROI", 1316, G__MTreeIO_545_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_545_0_25, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLHLTTriggerROI), -1, 1, 1, 1, 1, 0, "u 'MTree::HLTTriggerROI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTreecLcLTriggerObject(void) {
   /* MTree::TriggerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject));
   G__memfunc_setup("TriggerObject",1323,G__MTreeIO_599_0_1, 105, G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pt",196,G__MTreeIO_599_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eta",282,G__MTreeIO_599_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__MTreeIO_599_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__MTreeIO_599_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - pt d - - 0 - eta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAuthor",927,G__MTreeIO_599_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - author", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTriggerName",1374,G__MTreeIO_599_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TriggerNames",1224,G__MTreeIO_599_0_8, 117, G__get_linked_tagnum(&G__MTreeIOLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR), G__defined_typename("set<std::string>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Authors",742,G__MTreeIO_599_0_9, 117, G__get_linked_tagnum(&G__MTreeIOLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR), G__defined_typename("set<int>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassedTrigger",1332,G__MTreeIO_599_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - trigName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintData",903,G__MTreeIO_599_0_11, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSame",578,G__MTreeIO_599_0_12, 103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - pt d - - 0 - eta "
"d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MTreeIO_599_0_13, 85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTree::TriggerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MTreeIO_599_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::TriggerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MTreeIO_599_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTree::TriggerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MTreeIO_599_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTree::TriggerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MTreeIOLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MTreeIO_599_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MTreeIO_599_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::TriggerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MTreeIO_599_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::TriggerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MTreeIO_599_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTree::TriggerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MTreeIO_599_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTree::TriggerObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TriggerObject", 1323, G__MTreeIO_599_0_25, (int) ('i'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject), -1, 0, 1, 1, 1, 0, "u 'MTree::TriggerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TriggerObject", 1449, G__MTreeIO_599_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MTreeIO_599_0_27, (int) ('u'), G__get_linked_tagnum(&G__MTreeIOLN_MTreecLcLTriggerObject), -1, 1, 1, 1, 1, 0, "u 'MTree::TriggerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMTreeIO() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMTreeIO() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMTreeIO() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MTreeIOLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTree = { "MTree" , 110 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLPrimaryVertex = { "MTree::PrimaryVertex" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLTrack = { "MTree::Track" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLLepton = { "MTree::Lepton" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLElectron = { "MTree::Electron" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLPhoton = { "MTree::Photon" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLEventInfo = { "MTree::EventInfo" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLJet = { "MTree::Jet" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLMissingET = { "MTree::MissingET" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLMuon = { "MTree::Muon" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLTrigger = { "MTree::Trigger" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_TRefArray = { "TRefArray" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLTruthParticle = { "MTree::TruthParticle" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLL1TriggerROI = { "MTree::L1TriggerROI" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLHLTTriggerROI = { "MTree::HLTTriggerROI" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__MTreeIOLN_MTreecLcLTriggerObject = { "MTree::TriggerObject" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMTreeIO() {
  G__MTreeIOLN_TClass.tagnum = -1 ;
  G__MTreeIOLN_TBuffer.tagnum = -1 ;
  G__MTreeIOLN_TMemberInspector.tagnum = -1 ;
  G__MTreeIOLN_TObject.tagnum = -1 ;
  G__MTreeIOLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__MTreeIOLN_string.tagnum = -1 ;
  G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MTreeIOLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MTreeIOLN_TClonesArray.tagnum = -1 ;
  G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MTreeIOLN_TLorentzVector.tagnum = -1 ;
  G__MTreeIOLN_TRef.tagnum = -1 ;
  G__MTreeIOLN_MTree.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLPrimaryVertex.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLTrack.tagnum = -1 ;
  G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MTreeIOLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLLepton.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLElectron.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLPhoton.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLEventInfo.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__MTreeIOLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLJet.tagnum = -1 ;
  G__MTreeIOLN_TObjString.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLMissingET.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLMuon.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLTrigger.tagnum = -1 ;
  G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__MTreeIOLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MTreeIOLN_TRefArray.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLTruthParticle.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLL1TriggerROI.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLHLTTriggerROI.tagnum = -1 ;
  G__MTreeIOLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MTreeIOLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__MTreeIOLN_MTreecLcLTriggerObject.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMTreeIO() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TClass);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TObject);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_string);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TRef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTree),0,-1,0,(char*)NULL,G__setup_memvarMTree,G__setup_memfuncMTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLPrimaryVertex),sizeof(MTree::PrimaryVertex),-1,292096,(char*)NULL,G__setup_memvarMTreecLcLPrimaryVertex,G__setup_memfuncMTreecLcLPrimaryVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLTrack),sizeof(MTree::Track),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLTrack,G__setup_memfuncMTreecLcLTrack);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLLepton),sizeof(MTree::Lepton),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLLepton,G__setup_memfuncMTreecLcLLepton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLElectron),sizeof(MTree::Electron),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLElectron,G__setup_memfuncMTreecLcLElectron);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLPhoton),sizeof(MTree::Photon),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLPhoton,G__setup_memfuncMTreecLcLPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLEventInfo),sizeof(MTree::EventInfo),-1,292096,(char*)NULL,G__setup_memvarMTreecLcLEventInfo,G__setup_memfuncMTreecLcLEventInfo);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLJet),sizeof(MTree::Jet),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLJet,G__setup_memfuncMTreecLcLJet);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TObjString);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLMissingET),sizeof(MTree::MissingET),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLMissingET,G__setup_memfuncMTreecLcLMissingET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLMuon),sizeof(MTree::Muon),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLMuon,G__setup_memfuncMTreecLcLMuon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLTrigger),sizeof(MTree::Trigger),-1,292096,(char*)NULL,G__setup_memvarMTreecLcLTrigger,G__setup_memfuncMTreecLcLTrigger);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_TRefArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLTruthParticle),sizeof(MTree::TruthParticle),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLTruthParticle,G__setup_memfuncMTreecLcLTruthParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLL1TriggerROI),sizeof(MTree::L1TriggerROI),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLL1TriggerROI,G__setup_memfuncMTreecLcLL1TriggerROI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLHLTTriggerROI),sizeof(MTree::HLTTriggerROI),-1,324864,(char*)NULL,G__setup_memvarMTreecLcLHLTTriggerROI,G__setup_memfuncMTreecLcLHLTTriggerROI);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MTreeIOLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MTreeIOLN_MTreecLcLTriggerObject),sizeof(MTree::TriggerObject),-1,292096,(char*)NULL,G__setup_memvarMTreecLcLTriggerObject,G__setup_memfuncMTreecLcLTriggerObject);
}
extern "C" void G__cpp_setupMTreeIO(void) {
  G__check_setup_version(30051515,"G__cpp_setupMTreeIO()");
  G__set_cpp_environmentMTreeIO();
  G__cpp_setup_tagtableMTreeIO();

  G__cpp_setup_inheritanceMTreeIO();

  G__cpp_setup_typetableMTreeIO();

  G__cpp_setup_memvarMTreeIO();

  G__cpp_setup_memfuncMTreeIO();
  G__cpp_setup_globalMTreeIO();
  G__cpp_setup_funcMTreeIO();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMTreeIO();
  return;
}
class G__cpp_setup_initMTreeIO {
  public:
    G__cpp_setup_initMTreeIO() { G__add_setup_func("MTreeIO",(G__incsetup)(&G__cpp_setupMTreeIO)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMTreeIO() { G__remove_setup_func("MTreeIO"); }
};
G__cpp_setup_initMTreeIO G__cpp_setup_initializerMTreeIO;

